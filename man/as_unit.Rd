% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adj-aZ.R
\name{as_unit}
\alias{as_unit}
\alias{asCentimeter}
\alias{asDecimeter}
\alias{asMeter}
\alias{asMicrometer}
\alias{asMillimeter}
\alias{asNanometer}
\alias{asPixel}
\title{Transform distance values}
\usage{
as_unit(
  input,
  unit,
  object = NULL,
  image_dims = NULL,
  method = NULL,
  as_numeric = FALSE,
  round = FALSE,
  verbose = FALSE
)

asCentimeter(input, ...)

asDecimeter(input, ...)

asMeter(input, ...)

asMicrometer(input, ...)

asMillimeter(input, ...)

asNanometer(input, ...)

asPixel(input, ...)
}
\arguments{
\item{input}{Distance values to transform.}

\item{unit}{Character value. Specifies the desired unit.}

\item{object}{An object of class \code{SPATA2}.}

\item{image_dims}{Numeric vector of length two. Specifies the dimensions
of the image to which the distance is scaled. First value corresponds to
the width, second value corresponds to the height of the image.

Ignored if \code{object} is specified.}

\item{method}{The spatial -omic method by name as a character value or S4 object
of class \code{SpatialMethod}. Specifies the method and thus the original
size in European units of length. If character, must be one of \code{validSpatialMethods()}.

Ignored if \code{object} is specified.}

\item{as_numeric}{Logical value. If \code{TRUE}, forces the output to be numeric.
This means that the unit is not \bold{not} suffixed.}

\item{round}{Numeric value or \code{FALSE}. If numeric, given to \code{digits}
of \code{base::round()}. Rounds transformed values before they are returned.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{...}{Needed arguments that depend on the input/unit combination. If
one of both is \emph{'px'} the \code{SPATA2} object is need or \code{method}
\code{image_dims}.}
}
\value{
Transformed input. Character vector of the same length as \code{input}.
}
\description{
Collection of functions to transform distance values.
}
\details{
Input to specify a distance can be provided in two different
ways.

\bold{Distance in pixel}:

There are two valid input options to specify the distance in pixel:

\itemize{
\item{numeric:}{ Single numeric values, e.g. 2, 3.554, 69, 100.67. If no unit
is specified the input will be interpreted as pixels.}
\item{character:}{ Suffixed with \emph{'px'}, e.g. \emph{'2px'}, \emph{'3.554px'}}
}

\bold{Distance in European units of length (eUOL)}:

Specifying distances in European units of length e.g. \emph{'2mm'}, \emph{'400um'} etc.
requires the input to be a character as the unit must be provided as suffix. Between the numeric
value and the unit must be no empty space! Unit suffixes must be one of
\emph{'m', 'dm', 'cm', 'mm', 'um', 'nm'}.
}
\examples{

library(SPATA2)
library(SPATAData)

object <- downloadSpataObject("269_T")

pixel_values <- c(200, 450, 500)

euol_values <- c("2mm", "400um", "0.8dm")

# spata object must be provided to scale based on current image resolution
asMillimeter(input = pixel_values, object = object, round = 2)

asMicrometer(input = pixel_values, object = object, round = 4)

asPixel(input = euol_values, object = object)

# spata object must not be provided
asMicrometer(input = euol_values)


}
