[{"path":"/articles/adding-data.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Adding Data to SPATA2 objects","text":"SPATA2 provides wrappers multiple algorithms, can always add data external sources packages. Depending kind data want add, different functions required.","code":"library(SPATA2) library(tidyverse)  # load SPATA2 inbuilt example data object_t269 <- loadExampleObject(\"UKF269T\")"},{"path":"/articles/adding-data.html","id":"data-matrices","dir":"Articles","previous_headings":"","what":"2. Data matrices","title":"Adding Data to SPATA2 objects","text":"Assuming data matrix processed functions different package (e.g. Seurat), can add SPATA2 object via function addProcessedMatrix().","code":"library(Seurat)  # create Seurat object from count matrix count_mtr <- getCountMatrix(object_t269)  seurat_obj <- CreateSeuratObject(count_mtr) seurat_obj <- NormalizeData(seurat_obj) seurat_obj <- ScaleData(seurat_obj)  scaled_mtr <- GetAssayData(seurat_obj, layer = \"scale.data\")  # show a small subset of the scaled mtr  scaled_mtr[1:5, 1:5] ##            AAACAAGTATCTCCCA-1 AAACACCAATAACTGC-1 AAACAGAGCGACTCCT-1 ## AL669831.5        -0.13779796        -0.13779796        -0.13779796 ## FAM87B            -0.03675644        -0.03675644        -0.03675644 ## FAM41C            -0.11923196        -0.11923196        -0.11923196 ## AL645608.1        -0.02790417        -0.02790417        -0.02790417 ## KLHL17            -0.20169999         4.33113446        -0.20169999 ##            AAACATTTCCCGGATT-1 AAACCCGAACGAAATC-1 ## AL669831.5        -0.13779796        -0.13779796 ## FAM87B            -0.03675644        -0.03675644 ## FAM41C            -0.11923196        -0.11923196 ## AL645608.1        -0.02790417        -0.02790417 ## KLHL17            -0.20169999        -0.20169999 # add the processed matrix to SPATA2 object under the name 'scaled' object_t269 <-    addProcessedMatrix(     object = object_t269,     proc_mtr = scaled_mtr,     mtr_name = \"scaled\"       )  # the matrix is now accessible next to all other matrices # ('counts' refers to the raw count matrix with which the SPATA2 object has been initated) getMatrixNames(object_t269) ## [1] \"counts\" \"scaled\" # check which matrix is currently active activeMatrix(object_t269) ## [1] \"counts\" # create a surface plot with EGFR expression using raw counts  egfr_counts <-    plotSurface(object_t269, color_by = \"EGFR\") +    labs(subtitle = \"Matrix: raw counts\")  # activate the processes matrix to make functions pick it by default object_t269 <- activateMatrix(object_t269, mtr_name = \"scaled\") activeMatrix(object_t269) ## [1] \"scaled\" # create a surface plot with EGFR expression using scaled expression egfr_scaled <-    plotSurface(object_t269, color_by = \"EGFR\") +    labs(subtitle = \"Matrix: scaled by seurat\")  # show plots egfr_counts egfr_scaled"},{"path":"/articles/adding-data.html","id":"meta-features","dir":"Articles","previous_headings":"","what":"3. Meta features","title":"Adding Data to SPATA2 objects","text":"Features raw processed molecular counts, like clustering certain scores, stored meta data.frame SPATA2 object, obtained getMetaDf(). SPATA2 intern functions like runBayesSpaceClustering() runCNV() add results automatically data.frame. following code chunk creates data.frame meta SPATA2 extern created meta features can added SPATA2 object. meta data.frame Seurat object contains cluster results well summarizing numeric variables like nCount_RNA nFeature_RNA. variables can added SPATA2 object afterwards accessible SPATA2 functions.  Grouping variables seurat_clusters variable can used comparative analysis.","code":"seurat_obj <- FindVariableFeatures(seurat_obj) seurat_obj <- RunPCA(seurat_obj) seurat_obj <- FindNeighbors(seurat_obj) seurat_obj <- FindClusters(seurat_obj) ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck ##  ## Number of nodes: 3217 ## Number of edges: 108933 ##  ## Running Louvain algorithm... ## Maximum modularity in 10 random starts: 0.8293 ## Number of communities: 11 ## Elapsed time: 0 seconds # add rownames as 'barcodes' variable  seurat_meta_df <-    tibble::rownames_to_column(seurat_obj@meta.data, var = \"barcodes\") %>%    tibble::as_tibble()  # show meta df seurat_meta_df ## # A tibble: 3,217 × 6 ##    barcodes   orig.ident nCount_RNA nFeature_RNA RNA_snn_res.0.8 seurat_clusters ##    <chr>      <fct>           <dbl>        <int> <fct>           <fct>           ##  1 AAACAAGTA… SeuratPro…       1614          842 0               0               ##  2 AAACACCAA… SeuratPro…      10498         3211 10              10              ##  3 AAACAGAGC… SeuratPro…       1258          739 1               1               ##  4 AAACATTTC… SeuratPro…       2387         1226 0               0               ##  5 AAACCCGAA… SeuratPro…       3070         1373 0               0               ##  6 AAACCGGGT… SeuratPro…      14562         3579 5               5               ##  7 AAACCGTTC… SeuratPro…       8014         2610 3               3               ##  8 AAACCTAAG… SeuratPro…       4476         1945 9               9               ##  9 AAACCTCAT… SeuratPro…       9823         2818 5               5               ## 10 AAACGAGAC… SeuratPro…        584          415 1               1               ## # ℹ 3,207 more rows # add features from the data.frame  object_t269 <-    addFeatures(     object = object_t269,     feature_df = seurat_meta_df,      feature_names = c(\"nCount_RNA\", \"seurat_clusters\"),      overwrite = TRUE     )  # once added, they are accessible for all SPATA2 functions  plotSurface(object_t269, color_by = \"nCount_RNA\")   plotSurface(object_t269, color_by = \"seurat_clusters\", pt_clrp = \"sifre\") plotBoxplot(object_t269, variables = \"nCount_RNA\", across = \"seurat_clusters\", clrp = \"sifre\") +   legendNone() +   labs(x = \"seurat clusters\")"},{"path":"/articles/adding-data.html","id":"images","dir":"Articles","previous_headings":"","what":"4. Images","title":"Adding Data to SPATA2 objects","text":"learn register additional images SPATA2 object please refer vignette image handling SPATA2.","code":""},{"path":"/articles/clustering.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Clustering","text":"Grouping variables divide observations sample groups whose properties can compared . instance, grouping observations can result clustering algorithms manual spatial segmentation. tutorial shows apply add clustering SPATA2.","code":"# load required packages library(SPATA2) library(SPATAData) library(tidyverse)  # load SPATA2 object object_t313 <- downloadSpataObject(sample_name = \"UKF313T\")  # alternatively, use diet version (results might differ slightly) object_t313 <- loadExampleObject(sample_name = \"UKF313T\", process = TRUE)  # show sample plotImage(object_t313)"},{"path":"/articles/clustering.html","id":"clustering-within-spata2","dir":"Articles","previous_headings":"","what":"2. Clustering within SPATA2","title":"Clustering","text":"several algorithms can used divide sample subgroups. SPATA2 provides wrappers around several clustering algorithms. Cluster algorithms add results immediately SPATA2 object prefixed run-* suffixed *-Clustering(). E.g. runBayesSpaceClustering(), runKmeansClustering(), runSeuratClustering(). Argument name naming specifies name output grouping variable. resulting grouping variable names available getGroupingOptions().","code":"# current grouping options  getGroupingOptions(object_t313) ##           factor  ## \"tissue_section\" # run the pipeline object_t313 <-    runBayesSpaceClustering(     object = object_t313,      name = \"bayes_space\", # the name of the output grouping variable     qs = 5   )  # run PCA based on which clustering is conducted object_t313 <- runPCA(object_t313, n_pcs = 20)  object_t313 <-    runKmeansClustering(     object = object_t313,      ks = c(7, 8),      methods_kmeans = \"Lloyd\"   )  # results are immediately stored in the objects feature data getGroupingOptions(object_t313) ##            factor            factor            factor            factor  ##  \"tissue_section\" \"seurat_clusters\"     \"bayes_space\"        \"Lloyd_k7\"  ##            factor  ##        \"Lloyd_k8\" # left plot plotSurface(   object = object_t313,    color_by = \"bayes_space\",    pt_clrp = \"uc\" )  # right plot plotSurface(   object = object_t313,    color_by = \"Lloyd_k7\",   pt_clrp = \"jco\"   )"},{"path":"/articles/clustering.html","id":"clustering-outside-of-spata2","dir":"Articles","previous_headings":"","what":"3. Clustering outside of SPATA2","title":"Clustering","text":"Clustering can result multitude cluster algorithms. implemented SPATA2 functions can add using addFeatures() function. requirement barcodes variable map groups observations. Note variable must class factor order recognized grouping variable. Continue visualizing results investigating transcriptional characteristics using differential expresseion analysis (DEA)).","code":"# uses kmeans outside of SPATA2 kmeans_res <-    stats::kmeans(     x = getPcaMtr(object_t313),      centers = 7,      algorithm = \"Hartigan-Wong\"   )  head(kmeans_res[[\"cluster\"]]) ## AAACAAGTATCTCCCA-1 AAACAATCTACTAGCA-1 AAACACCAATAACTGC-1 AAACAGAGCGACTCCT-1  ##                  3                  5                  6                  3  ## AAACAGCTTTCAGAAG-1 AAACAGGGTCTATATT-1  ##                  1                  6 cluster_df <-    as.data.frame(kmeans_res[[\"cluster\"]]) %>%    tibble::rownames_to_column(var = \"barcodes\") %>%    magrittr::set_colnames(value = c(\"barcodes\", \"kmeans_4_HW\")) %>%    tibble::as_tibble()  cluster_df[[\"kmeans_4_HW\"]] <- as.factor(cluster_df[[\"kmeans_4_HW\"]])  cluster_df ## # A tibble: 3,517 × 2 ##    barcodes           kmeans_4_HW ##    <chr>              <fct>       ##  1 AAACAAGTATCTCCCA-1 3           ##  2 AAACAATCTACTAGCA-1 5           ##  3 AAACACCAATAACTGC-1 6           ##  4 AAACAGAGCGACTCCT-1 3           ##  5 AAACAGCTTTCAGAAG-1 1           ##  6 AAACAGGGTCTATATT-1 6           ##  7 AAACATGGTGAGAGGA-1 4           ##  8 AAACCCGAACGAAATC-1 2           ##  9 AAACCGGGTAGGTACC-1 6           ## 10 AAACCGTTCGTCCAGG-1 1           ## # ℹ 3,507 more rows # grouping options before adding getGroupingOptions(object_t313) ##            factor            factor            factor            factor  ##  \"tissue_section\" \"seurat_clusters\"     \"bayes_space\"        \"Lloyd_k7\"  ##            factor  ##        \"Lloyd_k8\" # add the cluster results to the meta features object_t313 <-    addFeatures(     object = object_t313,     feature_df = cluster_df     )  # grouping options names afterwards getGroupingOptions(object_t313) ##            factor            factor            factor            factor  ##  \"tissue_section\" \"seurat_clusters\"     \"bayes_space\"        \"Lloyd_k7\"  ##            factor            factor  ##        \"Lloyd_k8\"     \"kmeans_4_HW\" plotSurface(   object = object_t313,   color_by = \"kmeans_4_HW\",   pt_clrp = \"jama\"   ) +   labs(color = \"Kmeans HW\")"},{"path":"/articles/cnv.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Copy Number Variations (CNV)","text":"InferCNV used identify large-scale chromosomal copy number alterations single cell RNA-Seq data including gains deletions chromosomes large segments . Several publications leveraged technique. (Patel et al., 2014, Tirosh et al., 2016, Venteicher et al., 2017 ) Note: currently encountering problems function infercnv:::plot_cnv(). prevent copy number variation analysis. Sometimes, however, heatmap plotted. Checkout R console hints far function work properly. working solution . encounter warnings raised runCNV()` let us know.  SPATA2 implements package infercnv published maintained Broadinstitute allows integrate technique workflow analyzing spatial trancsriptomic data derived malignancies.","code":"# load required packages library(SPATA2) library(SPATAData) library(tidyverse)  # load SPATA2 object object_t313 <- downloadSpataObject(sample_name = \"UKF269T\")  # alternatively, use diet version (results might differ slightly) object_t313 <- loadExampleObject(sample_name = \"UKF269T\")  # only histology plotSurface(object, = object_t269, pt_alpha = 0)  # histological grouping plotSurface(object = object_t269, color_by = \"histology\")"},{"path":"/articles/cnv.html","id":"running-cnv-analysis","dir":"Articles","previous_headings":"","what":"2. Running CNV Analysis","title":"Copy Number Variations (CNV)","text":"functions prefixed run*() function runCNV() wrapper around necessary functions needed conduct copy-number-variation-analysis. results needed subsequent analysis steps stored specified SPATA2 object (slot: @cnv). infercnv-object stored folder specified argument directory_cnv_folder. desired set deviates default can reach function inferncnv pipeline entering ’s name argument specify ’s input list arguments want called. Copy number variation analysis requires reference data. includes count matrix healthy tissue, annotation file well data.frame contains information chromosome positions. provide reference data list SPATA2::cnv_ref. runCNV() defaults content list. documentation runCNV() contains detailed description requirements reference input must meet order function work.","code":"object_t269 <-   runCNV(     object = object_t269,     # the directory must exist in your file system     directory_cnv_folder = \"data-gbm269/cnv-results\",      cnv_prefix = \"Chr\"     ) # change input object_t269 <-    runCNV(     object = object_t269     directory_cnv_folder = \"data-gbm269/cnv-results\",      clear_noise_via_ref_mean_sd = list(sd_amplifier = 2)     ) names(cnv_ref) ## [1] \"annotation\" \"mtr\"        \"regions\" summary(cnv_ref) ##            Length   Class      Mode ## annotation        1 data.frame list ## mtr        71067022 dgCMatrix  S4   ## regions           4 data.frame list"},{"path":"/articles/cnv.html","id":"cnv-results","dir":"Articles","previous_headings":"","what":"3. CNV Results","title":"Copy Number Variations (CNV)","text":"results stored list inside SPATA2 object. list can obtained via getCnvResults().","code":"cnv_results <- getCnvResults(object_t269)  names(cnv_results) ## [1] \"prefix\"      \"cnv_df\"      \"cnv_mtr\"     \"gene_pos_df\" \"regions_df\""},{"path":"/articles/cnv.html","id":"visualization","dir":"Articles","previous_headings":"","what":"4. Visualization","title":"Copy Number Variations (CNV)","text":"Note, plots might differ slightly obtain copy pasting code since working reduced version original UKF269T sample. run tutorial complete data set download sample UKF269T SPATAData package.","code":"# if you want the complete object library(SPATAData)  object <- downloadSpataObject(\"UKF269T\") object <- runCNV(object)"},{"path":"/articles/cnv.html","id":"heatmap","dir":"Articles","previous_headings":"4. Visualization","what":"4.1 Heatmap","title":"Copy Number Variations (CNV)","text":"gains losses chromosomal segments can displayed via plotCnvHeatmap(). Without meta data CNV heatmaps insightful. want visualize results across certain groups highlight differences across groups make use across across_subset arguments.  can add additional meta variables legend, numeric categorical ones alike. Furthermore, can subset chromosomes displayed well groups across results shown. CNV heatmaps SPATA2 actually consist multiple ggplots assembled via aplot package. can adjust referring name within ggpLayer argument. detailed documentation create CNV heatmap desire please refer extensive documentation via plotCnvHeatmap().","code":"plotCnvHeatmap(object = object_t269, across = \"histology\", clrp = \"npg\") # a more complex set up plotCnvHeatmap(   object = object_t269,    across = \"histology\",    across_subset = c(\"infiltrated\", \"tumor\"), # dont show the transition part   meta_vars = \"SNAP25\",  # visualize SNAP25 expression on the left   meta_vars_clrs = c(\"SNAP25\" = \"inferno\"), # with the inferno color spectrum    chrom_subset = c(\"1\", \"3\", \"7\", \"10\", \"14\", \"15\", \"18\", \"22\"), # only show these chromosomes   ggpLayers = list(arm = list(legendNone())) # remove the chrom arm legend   )  # right plot plotSurface(object_t269, color_by = \"SNAP25\", pt_clrsp = \"inferno\")"},{"path":"/articles/cnv.html","id":"lineplot","dir":"Articles","previous_headings":"4. Visualization","what":"4.2 Lineplot","title":"Copy Number Variations (CNV)","text":"additional option visualize results provides plotCnvLineplot().","code":"plotCnvLineplot(   object = object_t269,   across = \"histology\",    n_bins_bcsp = 1000,   n_bins_genes = 1000,   nrow = 3 )"},{"path":"/articles/cnv.html","id":"surface","dir":"Articles","previous_headings":"4. Visualization","what":"4.3 Surface","title":"Copy Number Variations (CNV)","text":"numeric values copy number variations chromosome represented immediately transferred SPATA2 object’s feature data thus accessible functions work numeric variables. character string specified argument cnv_prefix combined chromosomes number determines name can refer feature variables. Use plotSurface() visualize chromosomal alterations directly histology.","code":"# cnv feature names getCnvFeatureNames(object = object_t269) %>% head() ## [1] \"Chr1\" \"Chr2\" \"Chr3\" \"Chr4\" \"Chr5\" \"Chr6\" # are part of all feature names getFeatureNames(object = object_t269) %>% head() ##            factor           integer           numeric           numeric  ##      \"orig.ident\"    \"nFeature_RNA\"      \"percent.mt\"      \"percent.RB\"  ##            factor            factor  ## \"RNA_snn_res.0.8\"     \"bayes_space\" plotSurface(   object = object_t269,    color_by = \"Chr7\",    pt_clrsp = \"Reds\" )  plotSurface(   object = object_t269,    color_by = \"Chr10\",    pt_clrsp = \"Oslo\"  )"},{"path":"/articles/cnv.html","id":"gradients","dir":"Articles","previous_headings":"4. Visualization","what":"4.4 Gradients","title":"Copy Number Variations (CNV)","text":"showcased corresponding vignette spatial trajectories gradients numeric variables can displayed. Chromosomal alterations numeric variables. (Note trajectory lineplots always rescale variables 0-1 low-high.)","code":"plotSpatialTrajectories(   object = object_t269,    ids = \"horizontal_mid\",    color_by = \"Chr7\",    pt_clrsp = \"Reds 3\" )  plotSpatialTrajectories(   object = object_t269,    ids = \"horizontal_mid\",    color_by = \"Chr10\",    pt_clrsp = \"Oslo\" )  plotStsLineplot(   object = object_t269,    id = \"horizontal_mid\",    variables = \"Chr7\"  )  plotStsLineplot(   object = object_t269,    id = \"horizontal_mid\",    variables = \"Chr10\",    line_color = \"blue\"  )"},{"path":"/articles/creating-spatial-annotations.html","id":"spatial-annotations-in-general","dir":"Articles","previous_headings":"","what":"1. Spatial Annotations in general","title":"Creating Spatial Annotations","text":"Spatial Annotations represent annotations spatial data. concept allows users define store polygons outline areas interest within images datasets. outlines, turn, can used spatial references visualize feature expression function distance areas potential biological forces. Generally speaking, spatial annotation simplay require polygon. SPATA2 implements three concepts Spatial Annotations: (Spatial) Image Annotations, (Spatial) Group Annotations (Spatial) Numeric Annotations.","code":""},{"path":"/articles/creating-spatial-annotations.html","id":"image-annotations","dir":"Articles","previous_headings":"","what":"2. Image Annotations","title":"Creating Spatial Annotations","text":"section uses sample UKF313T example. Image annotations represented S4 class ImageAnnotation, designed capture spatial annotations outlining areas interest images. provides flexible framework creating annotations visually highlight specific regions within images, histological structures, cellular patterns, histo-morphological features images. can interactively created createImageAnnotations() function. function lets access interactive application can encircle structure area want annotate. GIF exemplifies process creating image annotation. left plot Interaction magic happens. right plot used orientation want zoom . Double click left image start drawing process. Double click stop drawing. using drawing mode Single click ‘Highlight’ highlight encircled area, enter tags want tag annotation , enter ID want name annotation click ‘Add Image Annotation’. drawing mode Multiple stopping drawing immediately highlights encircled area. allows quickly encircle multiple structures kind tagged tags (e.g. multiple small vessel). tab right called ‘Added Image Annotations’ allows visualize image annotations saved far. Make sure click ‘Close application’ return SPATA2 object containing results.  Note image annotations necrotic_edge necrotic_edge2 postprocessed mergeWithTissueOutline() prevent transgression tissue edge.","code":"# plot image on the left plotImage(object_t313)  # uses the results of computeMetaFeatures(), count distribution is heavily right skewed -> transform plotSurface(object_t313, color_by = \"n_counts_gene\", transform_with = log10) +    labs(color = \"counts\\n(log10)\") # access an interface to interact with the image object_t313 <- createImageAnnotations(object_t313) # results are stored in the processed object that can be downloaded  plotSpatialAnnotations(   object = object_t313,   ids = c(\"necrotic_area\", \"necrotic_edge\", \"necrotic_edge2\"),    nrow = 1,    unit = \"px\",    fill = ggplot2::alpha(\"orange\", 0.25)   )"},{"path":"/articles/creating-spatial-annotations.html","id":"numeric-annotations","dir":"Articles","previous_headings":"","what":"3. Numeric Annotations","title":"Creating Spatial Annotations","text":"Numeric annotations designed represent spatial extent data points, cells barcoded spots, filtering outlining according values specific numeric variable. particularly suitable creating annotations highlight areas interest based continuous characteristics like gene expression numeric attributes derived spatial multi-omic datasets. SPATA2 allows annotate space based numeric variables automatically using createNumericAnnotations(). details manipulate way areas annotated, please refer documentation via createNumericAnnotations.   Note difference inner_borders = TRUE inner_borders = FALSE.","code":"# left plot plotImage(object_t275)  # right plot plotSurface(object_t275, color_by = \"HM_HYPOXIA\", pt_clrsp = \"plasma\") object_t275 <-    createNumericAnnotations(     object = object_t275,      variable = \"HM_HYPOXIA\",      threshold = \"kmeans_high\",     inner_borders = TRUE, # default, allows \"holes\" inside the annotation     id = \"hypoxic_ann\",      force1 = TRUE   )  # all spatial annotation IDs getSpatAnnIds(object_t275) ## [1] \"vessel1\"     \"vessel2\"     \"vessel3\"     \"img_ann_1\"   \"hypoxic_ann\" # subset with their class getSpatAnnIds(object_t275, class = \"Numeric\") ## [1] \"hypoxic_ann\" # plot the outline hypoxic_ann_outline <-    ggpLayerSpatAnnOutline(object_t275, ids = \"hypoxic_ann\")  # left plot plotImage(object_t275) +    hypoxic_ann_outline  # right plot plotSurface(object_t275, color_by = \"HM_HYPOXIA\", pt_clrsp = \"plasma\") +    hypoxic_ann_outline object_t275 <-    createNumericAnnotations(     object = object_t275,      variable = \"HM_HYPOXIA\",      threshold = \"kmeans_high\",     inner_borders = FALSE, # no holes, only one outer outline     id = \"hypoxic_ann_nh\",      force1 = TRUE   )  # left plot plotSurface(object_t275, color_by = \"HM_HYPOXIA\", pt_clrsp = \"plasma\") +    hypoxic_ann_outline  # rifht plot plotSurface(object_t275, color_by = \"HM_HYPOXIA\", pt_clrsp = \"plasma\") +    ggpLayerSpatAnnOutline(object_t275, ids = \"hypoxic_ann_nh\")"},{"path":"/articles/creating-spatial-annotations.html","id":"group-annotations","dir":"Articles","previous_headings":"","what":"4. Group Annotations","title":"Creating Spatial Annotations","text":"Group Annotations designed represent spatial extent data points, cells barcoded spots, filtering outlining based predefined groups. allows creation annotations highlight specific spatial clusters, areas, patterns identified grouping techniques. provides means focus regions interest within spatial multi-omic datasets using predefined categorizations. create spatial annotations use function createGroupAnnotations(). details manipulate way areas annotated, please refer documentation via createGroupAnnotations.","code":"# plot sample  plotImage(object_t275)  plotSurface(object_t275, color_by = \"bayes_space\", pt_clrp = \"jco\") # create the annotation object_t275 <-    createGroupAnnotations(     object = object_t275,      grouping = \"bayes_space\",      group = \"B4\",     id = \"bspace4\",      force1 = TRUE   )  # all spatial annotation IDs getSpatAnnIds(object_t275) ## [1] \"vessel1\"        \"vessel2\"        \"vessel3\"        \"img_ann_1\"      ## [5] \"hypoxic_ann\"    \"hypoxic_ann_nh\" \"bspace4\" # subset with their class getSpatAnnIds(object_t275, class = \"Numeric\") ## [1] \"hypoxic_ann\"    \"hypoxic_ann_nh\" # plot the outline cluster_ann_outline <- ggpLayerSpatAnnOutline(object_t275, ids = \"bspace4\")  plotImage(object_t275) +    cluster_ann_outline  plotSurface(object_t275, color_by = \"bayes_space\", pt_clrp = \"jco\") +    cluster_ann_outline"},{"path":"/articles/creating-spatial-trajectories.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Spatial Trajectories","text":"spatial trajectory analysis SPATA2 introduces new approach find, analyze visualize differently expressed genes gene-sets spatial context. classic differential gene expression analyzes differences experimental groups whole neglects changes expression levels can seen maintaining spatial dimensions. Spatial trajectories allow answer questions include spatial component. E.g.: far expression levels change move towards region interest? genes follow pattern along paths? spatial trajectory tools provided SPATA2 enable new ways visualization well new possibilities screen genes. example using spatial transcriptomic sample central nervous system malignancy features three different, adjacent histological areas: Tumor, transition zone well infiltrated cortex.","code":"# load required packages library(SPATA2) library(SPATAData) library(tidyverse)  # load SPATA2 inbuilt example data object_t269 <- loadExampleObject(sample_name = \"UKF269T\", process = TRUE, meta = TRUE)  # histology only plotSurface(object_t269, pt_alpha = 0)  # colored by histological classification plotSurface(object_t269, color_by = \"histology\")"},{"path":"/articles/creating-spatial-trajectories.html","id":"creating-spatial-trajectories","dir":"Articles","previous_headings":"","what":"2. Creating spatial trajectories","title":"Spatial Trajectories","text":"Spatial trajectories can added SPATA2 object via two functions, namely createSpatialTrajectories() addSpatialTrajectory(). animation shows interface createSpatialTrajectories(). draw trajectory double click surface plot mark trajectory’s starting point double click mark endpoint. result look somewhat like trajectory drawn figure animation.  satisfied course trajectory determine width trajectory’s scope left click highlight. note width parameter can always adjusted afterwards. enter valid ID want name trajectory click ‘Save Trajectory’. Make sure click ‘Close Application’ want return order save results returned SPATA2 object. Instead drawing spatial trajectory can add directly explicitly naming course via start- endpoint using function addSpatialTrajectory(). area sample eventually included trajectory used obtain gradient defined length trajectory width parameter. Whether created interactively manually code, default width parameter set. recommend stick width parameter equal length trajectory default addSpatialTrajectory().","code":"# make sure to store the output in the object with <-  object_t269 <- createSpatialTrajectories(object = object_t269) # define start and end positions of the trajectory directly # by default, the width equals the trajectory length object_t269 <-    addSpatialTrajectory(     object = object_t269,     id = \"horizontal_mid\",     start = c(\"1.5mm\", \"4mm\"),     end = c(\"6.5mm\", \"4mm\"),     overwrite = TRUE   ) getTrajectoryWidth(object_t269, id = \"horizontal_mid\") ## [1] 372.0484 ## attr(,\"unit\") ## [1] \"px\" getTrajectoryLength(object_t269, id = \"horizontal_mid\") ## [1] 372.0484 ## attr(,\"unit\") ## [1] \"px\" # created with code  plotSpatialTrajectories(   object = object_t269,    ids = \"horizontal_mid\",    color_by = \"histology\" )"},{"path":"/articles/dea.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Differential Expression Analysis (DEA)","text":"Differential expression analysis (DEA) aims discover quantitative changes gene expression levels defined experimental groups. Grouping information stored form grouping variables meta data SPATA2 object. includes SPATA2 intern generated grouping options spatial segmentation clustering well grouping variable added via addFeatures().  function getGroupingOptions() returns variable names based DEA can conducted. vignette conducts differential expression analysis based histological grouping. can exchange ‘histology’ ‘bayes_space’ whenever grouping specified use clustering results.","code":"# load required packages library(SPATA2) library(tidyverse)  # load SPATA2 inbuilt example data object_t269 <- loadExampleObject(\"UKF269T\", process = TRUE, meta = TRUE)  # plot histology  plotSurface(object_t269, color_by = \"histology\", pt_clrp = \"npg\")  # plot bayes space cluster plotSurface(object_t269, color_by = \"bayes_space\", pt_clrp = \"uc\") getGroupingOptions(object_t269) ##            factor            factor            factor            factor  ##  \"tissue_section\" \"seurat_clusters\"       \"histology\"     \"bayes_space\""},{"path":"/articles/dea.html","id":"running-the-analysis","dir":"Articles","previous_headings":"","what":"2. Running the analysis","title":"Differential Expression Analysis (DEA)","text":"SPATA2 uses function Seurat::FindAllMarkers() differential expression analysis. ’s output data.frame row corresponds gene turned marker gene one identity groups. Additional variables provide information ’s p-value, adjusted p-value, logFold change etc. runDEA() alter output stores SPATA2 object.","code":"object_t269 <- runDEA(object = object_t269, across = \"histology\", method = \"wilcox\")"},{"path":"/articles/dea.html","id":"extracting-results","dir":"Articles","previous_headings":"","what":"3. Extracting results","title":"Differential Expression Analysis (DEA)","text":"two main functions can manually extract DEA results desired. First, getDeaResultsDf() returns original resulting data.frame Seurat::FindAllMarkers(). getDeaGenes() returns vector gene names. Using arguments across_subset, min_lfc, n_highest_lfc, max_adj_pval, n_lowest_pval output function can adjusted specific questions.","code":"# extract the complete data.frame dea_df <-    getDeaResultsDf(     object = object_t269,      across = \"histology\"   )  nrow(dea_df) ## [1] 22298 head(dea_df) ## # A tibble: 6 × 7 ##      p_val avg_log2FC pct.1 pct.2 p_val_adj histology gene      ##      <dbl>      <dbl> <dbl> <dbl>     <dbl> <fct>     <chr>     ## 1 3.26e-17       7.54 0.037     0  4.89e-13 tumor     SAA2      ## 2 7.28e-23       7.07 0.05      0  1.09e-18 tumor     NODAL     ## 3 1.55e-19       6.85 0.042     0  2.33e-15 tumor     MPZL2     ## 4 7.17e-19       6.69 0.041     0  1.08e-14 tumor     LINC02308 ## 5 7.09e-18       6.61 0.038     0  1.06e-13 tumor     CD48      ## 6 3.26e-17       6.56 0.037     0  4.89e-13 tumor     HOXA-AS2 # e.g. top 10 genes for histology area 'tumor'  getDeaResultsDf(   object = object_t269,    across = \"histology\",   across_subset = \"transition\", # the group name(s) of interest,   n_highest_lfc = 10, # top ten genes   max_adj_pval = 0.01 # pval must be lower or equal than 0.01 ) ## # A tibble: 10 × 7 ##        p_val avg_log2FC pct.1 pct.2 p_val_adj histology  gene      ##        <dbl>      <dbl> <dbl> <dbl>     <dbl> <fct>      <chr>     ##  1 8.53e-  8       7.98 0.01  0     1.28e-  3 transition CPEB1-AS1 ##  2 1.21e- 11       4.59 0.042 0.006 1.82e-  7 transition SGK2      ##  3 8.16e- 30       4.40 0.111 0.016 1.22e- 25 transition GPIHBP1   ##  4 2.18e- 20       4.34 0.075 0.011 3.28e- 16 transition FAM95C    ##  5 1.00e- 10       4.07 0.04  0.006 1.50e-  6 transition HOXD1     ##  6 6.57e- 72       4.03 0.303 0.057 9.86e- 68 transition GJB1      ##  7 6.05e- 12       3.90 0.054 0.011 9.08e-  8 transition SMIM6     ##  8 1.65e-  8       3.70 0.061 0.018 2.48e-  4 transition PIEZO2    ##  9 4.50e- 15       3.69 0.088 0.022 6.75e- 11 transition LRP2      ## 10 2.39e-168       3.68 0.72  0.2   3.58e-164 transition MAG"},{"path":[]},{"path":"/articles/dea.html","id":"heatmaps","dir":"Articles","previous_headings":"4. Visualize results","what":"4.1 Heatmaps","title":"Differential Expression Analysis (DEA)","text":"plotDeaHeatmap() visualizes results DEA using results extract getDeaResultsDf().","code":"hm <-    plotDeaHeatmap(     object = object_t269,      across = \"histology\",     clrp = \"npg\",     n_highest_lfc = 10, # subset genes     n_bcs = 100   )  hm"},{"path":"/articles/dea.html","id":"dotplots","dir":"Articles","previous_headings":"4. Visualize results","what":"4.2 Dotplots","title":"Differential Expression Analysis (DEA)","text":"plotDeaDotPlot() visualizes results DEA either group…  … groups together.","code":"plotDeaDotPlot(   object = object_t269,    across = \"histology\",   across_subset = c(\"tumor\", \"infiltrated\"), # specify single groups if desired   n_highest_lfc = 5,   by_group = TRUE,    scales = \"free_y\",    nrow = 1 ) plotDeaDotPlot(   object = object_t269,    across = \"histology\",   color_by = \"histology\",   pt_clrp = \"npg\",   size_by = \"avg_log2FC\",   n_highest_lfc = 5,    by_group = FALSE )"},{"path":"/articles/dea.html","id":"box--and-violinplots","dir":"Articles","previous_headings":"4. Visualize results","what":"4.3 Box- and Violinplots","title":"Differential Expression Analysis (DEA)","text":"additional ways visualize results DEA. almost plotting functions SPATA2 vector gene names necessary function know genes plot. getDeaGenes() second function extract DEA results wrapper around getDeaResultsDf() returns vector gene names. vector gene names returned getDeaGenes() perfectly valid input plotting functions.","code":"genes_of_interest <-   getDeaGenes(     object = object_t269,     across = \"histology\", # the grouping variable     method_de = \"wilcox\", # the method with which the results were computed     n_highest_lfc = 10,      max_adj_pval = 0.001   )  head(genes_of_interest) # first six ##       tumor       tumor       tumor       tumor       tumor       tumor  ##      \"SAA2\"     \"NODAL\"     \"MPZL2\" \"LINC02308\"      \"CD48\"  \"HOXA-AS2\" tail(genes_of_interest) # last six ## infiltrated infiltrated infiltrated infiltrated infiltrated infiltrated  ##     \"HTR5A\"     \"CRHR2\"    \"CACNG2\"    \"TRIM54\"     \"ACTC1\"    \"KRT222\" top_5_markers_269 <-    getDeaGenes(     object = object_t269,     across = \"histology\",     n_lowest_pval = 5,      min_lfc = 0.1 # set min_lfc! else downregulated genes are included     )   top_5_markers_269 ##       tumor       tumor       tumor       tumor       tumor  transition  ##    \"IGFBP2\" \"LINC01445\"     \"SOCS2\"       \"TNC\"     \"MATN2\"       \"MAG\"  ##  transition  transition  transition  transition infiltrated infiltrated  ##      \"MOBP\"        \"TF\"      \"PLP1\"       \"MBP\"       \"CCK\"     \"VSNL1\"  ## infiltrated infiltrated infiltrated  ##      \"NRGN\"     \"OLFM1\"   \"SLC17A7\" # plot results for t269 plotBoxplot(   object = object_t269,   variables = top_5_markers_269,   across = \"histology\",    clrp = \"npg\",   nrow = 3    ) +    theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()) +   legendTop()"},{"path":"/articles/dea.html","id":"surface-plots","dir":"Articles","previous_headings":"4. Visualize results","what":"4.4 Surface plots","title":"Differential Expression Analysis (DEA)","text":"getDeaGenes() complements plotSurfaceComparison().","code":"# top 9 markers for transition area transition_markers <-    getDeaGenes(object_t269, across = \"histology\", across_subset = \"transition\", n_lowest_pval = 9)  plotSurfaceComparison(   object = object_t269,    color_by = transition_markers,   pt_clrsp = color_vector(\"npg\")[2], # plot cluster color against white   outline = TRUE,   nrow = 3   ) +    legendNone()"},{"path":"/articles/dimensional-reduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Dimensional reduction","text":"tutorial guides dimensional reduction methods plotting functions SPATA2.","code":"# load required packages library(SPATA2) library(SPATAData) library(tidyverse)  # load SPATA2 inbuilt example data data(\"example_data\") object_t269 <- loadExampleObject(sample_name = \"UKF269T\", process = TRUE, meta = TRUE)  # left plot plotImage(object_t269)  # right plot plotSurface(object_t269, color_by = \"histology\")"},{"path":"/articles/dimensional-reduction.html","id":"principal-component-analysis-pca","dir":"Articles","previous_headings":"","what":"1. Principal Component Analysis (PCA)","title":"Dimensional reduction","text":"Dimensional reduction must initiated principal component analysis function runPCA(). can specify variables assay used run algorithm variables argument.","code":"# total number of genes in this (subsetted) object nGenes(object_t269) ## [1] 15000  # identify most variable ones (using Seurat in the background) object_t269 <- identifyVariableMolecules(object_t269, n_mol = 2500, method = \"vst\")  # variable mols vm <- getVariableMolecules(object_t269, method = \"vst\")  head(vm) ## [1] \"HBB\"    \"MMP9\"   \"CXCL10\" \"CARTPT\" \"HBA2\"   \"FN1\" length(vm) ## [1] 2500  # run the algorithm object_t269 <- runPCA(object_t269, variables = vm, n_pcs = 20)  # left plot plotPCA(object_t269, color_by = \"histology\", nrow = 2, n_pcs = 8, pt_size = 0.5)  # right plot plotPcaElbow(object_t269)"},{"path":"/articles/dimensional-reduction.html","id":"tsne-umap","dir":"Articles","previous_headings":"","what":"2. TSNE & UMAP","title":"Dimensional reduction","text":"SPATA2 function runTSNE() implements t-Stochastic Neighbour Embedding algorithm Rtsne::Rtsne() principcal components computed runPCA(). case runUMAP() implements umap::umap() uniform manifold approximation projection.","code":"# run dimensional reduction object_t269 <- runTSNE(object_t269, n_pcs = 10) object_t269 <- runUMAP(object_t269, n_pcs = 10)  # left plot plotTSNE(object_t269, color_by = \"histology\")  # right plot plotUMAP(object_t269, color_by = \"histology\")"},{"path":"/articles/gsea.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Gene Set Enrichment Analysis","text":"Make sure familiar tutorials Differential Expression Analysis Molecular Variables. deeper results DEA one can look gene sets enriched proposed clustering created based histology. SPATA2 implements hypeR package uses hypergeometric testing enriched gene sets.","code":"# load required packages library(SPATA2) library(tidyverse)  # load SPATA2 inbuilt example data object_t269 <- loadExampleObject(\"UKF269T\", process = TRUE, meta = TRUE)  # plot histology  plotSurface(object_t269, color_by = \"histology\", pt_clrp = \"npg\")  # plot bayes space cluster plotSurface(object_t269, color_by = \"bayes_space\", pt_clrp = \"uc\")"},{"path":"/articles/gsea.html","id":"running-gene-set-enrichment-analysis-gsea","dir":"Articles","previous_headings":"","what":"2. Running Gene Set Enrichment Analysis (GSEA)","title":"Gene Set Enrichment Analysis","text":"function runGSEA() conducts computation. requires results runDEA() conducts differential expressiona nalysis. default, function uses gene sets saved SPATA2 object. gene sets don’t want test can provide subsetted list gene sets. default example object object_t269 created initiateSpataObjectVisium() contains variety gene sets multiple classes (Hallmark, Biocarta, etc.) marked corresponding prefix like HM BC. sake clarity, example uses Biocarta (BC) Hallmark (HM) gene sets. Use argument signatures want run GSEA subset gene sets. Keep empty want test gene sets stored SPATA2 object_t269.","code":"gs_list <- getGeneSetList(object_t269)   head(gs_list) ## $BC_41BB_PATHWAY ##  [1] \"IFNG\"    \"TNFSF9\"  \"IL4\"     \"NFKBIA\"  \"TNFRSF9\" \"IL2\"     \"MAP4K5\"  ##  [8] \"MAPK8\"   \"MAP3K5\"  \"CHUK\"    \"MAPK14\"  \"RELA\"    \"TRAF2\"   \"ATF2\"    ## [15] \"IKBKB\"   \"NFKB1\"   \"MAP3K1\"  \"JUN\"     ##  ## $BC_ACE2_PATHWAY ##  [1] \"REN\"    \"COL4A1\" \"AGT\"    \"CMA1\"   \"COL4A6\" \"ACE2\"   \"ACE\"    \"COL4A5\" ##  [9] \"AGTR2\"  \"AGTR1\"  \"COL4A2\" \"COL4A3\" \"COL4A4\" ##  ## $BC_ACETAMINOPHEN_PATHWAY ## [1] \"CYP1A2\" \"CYP2E1\" \"PTGS2\"  \"PTGS1\"  \"NR1I3\"  ##  ## $BC_ACH_PATHWAY ##  [1] \"FASLG\"  \"PIK3CG\" \"RAPSN\"  \"PIK3R1\" \"FOXO3\"  \"YWHAH\"  \"CHRNG\"  \"CHRNB1\" ##  [9] \"BAD\"    \"PTK2B\"  \"TERT\"   \"MUSK\"   \"AKT1\"   \"PIK3CA\" ##  ## $BC_ACTINY_PATHWAY ##  [1] \"ACTA1\"  \"WASF1\"  \"PSMA7\"  \"NTRK1\"  \"RAC1\"   \"WASF2\"  \"ABI2\"   \"NCK1\"   ##  [9] \"PIR\"    \"NCKAP1\" \"WASF3\"  \"WASL\"   ##  ## $BC_AGPCR_PATHWAY ##  [1] \"GRK4\"    \"GNAS\"    \"PRKACG\"  \"PRKAR1A\" \"PRKAR2B\" \"PRKCB\"   \"PRKACB\"  ##  [8] \"ARRB1\"   \"PRKAR1B\" \"PRKCA\"   \"PRKAR2A\" length(gs_list) ## [1] 11654 # subset gene sets that start with HM or BC gs_list_sub <- getGeneSetList(object_t269, class = c(\"BC\", \"HM\"))  length(gs_list_sub) ## [1] 339 set.seed(1) sample(gs_list_sub, size = 3) ## $HM_NOTCH_SIGNALING ##  [1] \"JAG1\"    \"NOTCH3\"  \"NOTCH2\"  \"APH1A\"   \"HES1\"    \"CCND1\"   \"FZD1\"    ##  [8] \"PSEN2\"   \"FZD7\"    \"DTX1\"    \"DLL1\"    \"FZD5\"    \"MAML2\"   \"NOTCH1\"  ## [15] \"PSENEN\"  \"WNT5A\"   \"CUL1\"    \"WNT2\"    \"DTX4\"    \"SAP30\"   \"PPARD\"   ## [22] \"KAT2A\"   \"HEYL\"    \"SKP1\"    \"RBX1\"    \"TCF7L2\"  \"ARRB1\"   \"LFNG\"    ## [29] \"PRKCA\"   \"DTX2\"    \"ST3GAL6\" \"FBXW11\"  ##  ## $BC_MEF2D_PATHWAY ##  [1] \"HDAC2\"  \"HDAC1\"  \"CALM1\"  \"MEF2D\"  \"CAPN2\"  \"NFATC2\" \"PPP3CA\" \"PRKCB\"  ##  [9] \"CALM2\"  \"PPP3CB\" \"CAPNS1\" \"CALM3\"  \"CABIN1\" \"EP300\"  \"PRKCA\"  \"NFATC1\" ## [17] \"CAPNS2\" \"PPP3CC\" ##  ## $BC_HSWI_SNF_PATHWAY ##  [1] \"SMARCD1\" \"NF1\"     \"NR3C1\"   \"SMARCC2\" \"SMARCA4\" \"ARID1A\"  \"SMARCC1\" ##  [8] \"ACTB\"    \"SMARCB1\" \"TBP\"     \"GTF2A1\"  \"SMARCE1\" object_t269 <-    runGSEA(     object = object_t269,     across = \"histology\",      background = 21563,      signatures = gs_list_sub     )"},{"path":"/articles/gsea.html","id":"extracting-results","dir":"Articles","previous_headings":"","what":"3. Extracting results","title":"Gene Set Enrichment Analysis","text":"results can manually extracted via following functions. getGseaResults() extracts list hypeR object_t269s - group. getGseaResultsDf() extracts data.frame results merging data hypeR object_t269s together. group belonging gene set saved variable/column named according grouping variable - histology.","code":"getGseaDf(   object = object_t269,    across = \"histology\",   method_de = \"wilcox\",    n_gsets = 3 # extract top 20 most significant gene sets ) ## # A tibble: 9 × 10 ## # Groups:   histology [3] ##   histology   label     pval      fdr signature geneset overlap background hits  ##   <fct>       <fct>    <dbl>    <dbl>     <int>   <int>   <int>      <dbl> <chr> ## 1 tumor       HM_E… 8.60e-43 1   e-38      5082     200     143      20000 AURK… ## 2 tumor       HM_I… 3.60e-35 2.10e-31      5082     196     132      20000 STAT… ## 3 tumor       HM_G… 1.3 e-30 5.20e-27      5082     196     126      20000 AURK… ## 4 transition  MF.G… 2.40e- 9 2.70e- 5      1192     200      36      20000 CHD1… ## 5 transition  BP.G… 6   e- 9 2.8 e- 5      1192     856      94      20000 TANK… ## 6 transition  HM_E… 8.40e- 9 2.8 e- 5      1192     200      35      20000 DNMT… ## 7 infiltrated CC.G… 3.80e-54 4.50e-50      1950    1332     315      20000 CDH8… ## 8 infiltrated BP.G… 1.90e-42 1.10e-38      1950     733     198      20000 CDH8… ## 9 infiltrated CC.G… 1.4 e-32 5.40e-29      1950    1317     266      20000 HDAC… ## # ℹ 1 more variable: overlap_perc <dbl>"},{"path":"/articles/gsea.html","id":"plotting-results","dir":"Articles","previous_headings":"","what":"4. Plotting results","title":"Gene Set Enrichment Analysis","text":"Gene set enrichment results can visualized via dot plots. can either done group by_group = TRUE merged groups. Figure 2 visualizes enrichment cluster 0 5 highlighting hypoxia associated activity area.  Using by_group = FALSE, results merged one plot.","code":"plotGseaDotPlot(   object = object_t269,   across = \"histology\",   across_subset = c(\"tumor\", \"infiltrated\"),   n_gsets = 10,   by_group = TRUE,    transform_with = list(fdr = log10),   nrow = 2 ) plotGseaDotPlot(   object = object_t269,   across = \"histology\",   color_by = \"histology\",   n_gsets = 7,   pt_alpha = 0.8,   transform_with = list(fdr = log10),   by_group = FALSE # merge in one plot )"},{"path":"/articles/image-handling.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Image Handling","text":"Spatial transcriptomic output often comes histology image. SPATA2 offers many functions histology specific analysis. Therefore, detailed interaction image dimensions extent data point positions form data coordinates required. vignette introduces basic functions ensure alignment image data point coordinates allow exchange low- high resolution image come 10X Visium output. Furthermore, elaborates images stored SPATA2.","code":"library(SPATA2) library(SPATAData) library(tidyverse)  # load SPATA2 inbuilt example data object_t275 <- loadExampleObject(\"UKF275T\") object_t275 <- setDefault(object_t275, display_image = TRUE, pt_size = 1.5)"},{"path":"/articles/image-handling.html","id":"basic-image-handling","dir":"Articles","previous_headings":"","what":"2. Basic image handling","title":"Image Handling","text":"following exemplifies use basic image related functions.","code":""},{"path":"/articles/image-handling.html","id":"extracting-image-data","dir":"Articles","previous_headings":"2. Basic image handling","what":"2.1 Extracting image data","title":"Image Handling","text":"obtain image, currently set well meta information exist several functions prefixed getImage*(). name :","code":"# the image  getImage(object_t275) ## Image  ##   colorMode    : Color  ##   storage.mode : double  ##   dim          : 576 600 3  ##   frames.total : 3  ##   frames.render: 1  ##  ## imageData(object)[1:5,1:6,1] ##      [,1] [,2] [,3] [,4] [,5] [,6] ## [1,]    1    1    1    1    1    1 ## [2,]    1    1    1    1    1    1 ## [3,]    1    1    1    1    1    1 ## [4,]    1    1    1    1    1    1 ## [5,]    1    1    1    1    1    1  # image dimensions in width, height and colors getImageDims(object_t275) ## [1] 576 600   3  # image range in terms of data coordinates getImageRange(object_t275) ## $x ## [1]   1 576 ##  ## $y ## [1]   1 600"},{"path":"/articles/image-handling.html","id":"plotting-images","dir":"Articles","previous_headings":"2. Basic image handling","what":"2.2 Plotting images","title":"Image Handling","text":"function plotImage() visualizes image. arguments xrange yrange can used zoom specific regions. detailed , SPATA2 allows store multiple images. names images currently registered SPATA2 object can obtained getImageNames(). can easily renamed.","code":"plotImage(object_t275) +    ggpLayerRect(object_t275, xrange = c(200, 400), yrange = c(200, 400))  plotImage(object_t275, xrange = c(200, 400), yrange = c(200, 400)) # right now, this object contains two registered images getImageNames(object_t275) ## [1] \"image1\"       \"very_low_res\" getImageDims(object_t275, img_name = \"image1\") ## [1] 576 600   3 # but image1 is quite an uninformative name - lets rename it object_t275 <-    renameImage(object_t275, img_name = \"image1\", new_img_name = \"normres\")  getImageNames(object_t275) ## [1] \"normres\"      \"very_low_res\""},{"path":"/articles/image-handling.html","id":"registering-new-images","dir":"Articles","previous_headings":"","what":"3. Registering new images","title":"Image Handling","text":"integrate additional images workflow must registered SPATA2 object know . Registering new image means new container respective image created. (details containers read documentation classes SpatialData HistoImage). first example, register high resolution image Visium platform always provides, usually named somewhat like spatial/tissue_hires_image.png. already registered high resolution image initiateSpataObjectVisium() can registerImage(). Lets register high resolution image can download . Generally speaking, registering image means set container image deposit directory read . recommend register images file directory, since storing multiple images SPATA2 object lets object grow storage size quickly. way, file directory used load image everytime image required. Note, previous code chunk argument img_name specified obtain image. code chunk exemplified plotImage() image name specified. case SPATA2 object defaults active image. change active image use activateImage(). default, SPATA2 image loads active image, meaning image data actually exists object. Therefore, active image must read using file directory image registered. accelerates image handling image currently interest, active image. enough RAM, can always load image data inactive images using loadImage() accelerate access referring within functions.","code":"object_t275 <-    registerImage(     object = object_t275,      img_name = \"hires\", # the future name of the image     dir = \"data/UKF275T_tissue_hires_image.png\" # adjust to your directory   )  # a third image has been registered getImageNames(object_t275) ## [1] \"normres\"      \"very_low_res\" \"hires\" # the hires image alone needs almost 100mb  getImage(object_t275, img_name = \"hires\") %>%    pryr::object_size() ## 92.26 MB # check which image is currently active activeImage(object_t275) ## [1] \"normres\" object_t275 <- activateImage(object_t275, img_name = \"hires\")  # the default image to use has been switched to 'hires' activeImage(object_t275) ## [1] \"hires\" # ... it is chosen by default  getImageDims(object_t275) ## [1] 1922 2000    3 # before unloading pryr::object_size(object_t275) ## 157.22 MB # unload object_t275 <- unloadImage(object_t275, img_name = \"hires\")  # after unloading pryr::object_size(object_t275) ## 64.97 MB # activate image normres again object_t275 <- activateImage(object_t275, img_name = \"normres\")  # removing the image removes everything! object_t275 <- removeImage(object_t275, img_name = \"hires\")  # 'hires' is gone...  getImageNames(object_t275) ## [1] \"normres\"      \"very_low_res\""},{"path":"/articles/image-handling.html","id":"processing-images","dir":"Articles","previous_headings":"","what":"4. Processing images","title":"Image Handling","text":"SPATA2 offers image processing functions allow deeper interaction histological tissue slide. function identifyPixelContent() aims identify main tissue slide(s), potential tissue fragments well artefacts.  content can used identify tissue outline based image method = 'image'. Note method = 'obs' identifies tissue outline based observations. vignettes initiate process SPATA2 objects depending platform elaborate option. outlines can identified stored simultaneously SPATA2 object.  tissue outline based histology can used spatial outlier detection, , particularly useful image alignment.","code":"# by default, the active image is chosen object_t275 <- identifyPixelContent(object_t275)  plotImage(object_t275) plotPixelContent(object_t275) object_t275 <- identifyTissueOutline(object_t275, method = \"image\") # plot the outline (if the tissue outline for an image has been identified) # uppper two plots plotImages(object_t275, outline = TRUE, line_size = 1)   # are all images aligned with the reference image? - yes they are!  # lower two plots plotImages(object_t275, outline_ref = TRUE, line_color_ref = \"red\", line_size = 1)"},{"path":"/articles/image-handling.html","id":"aligning-images","dir":"Articles","previous_headings":"","what":"5. Aligning images","title":"Image Handling","text":"want integrate images sources, might need aligned spatial data SPATA2 object. , must introduce concept reference image refer image aligned observations SPATA2 object (, barcoded spots). default, first image register initiate SPATA2 object .  Logically, means added image aligned data points SPATA2 object , turn, means integration molecular data image features won’t work reliably.  ensure alignemnt every single image registered SPATA2 object can make use two main functions alignImage() alignImageInteractive(). following: change instructions image transformed upon extraction whenever used. function alignImage() allows specify transformations required ensure alignment coordinates.  real life scenarios exact transformations required unknown trying around manually alignImage() plotSurface() cumbersome. function alignImageInteractive() gives access interface can align badly aligned image outline reference image. alignImaage(), results interactive alignment stored SPATA2 object.","code":"refImage(object_t275) ## [1] \"normres\" library(EBImage)  # created an image with messed up alignment badly_aligned_img <-    getImage(object_t275, img_name = \"normres\") %>%   translate(v = c(25, 20), bg.col = \"white\")   # no directory specified, unloading wont be possible object_t275 <-    registerImage(     object = object_t275,      img = badly_aligned_img,     img_name = \"badly_aligned\"   )  plotImages(object_t275, outline_ref = TRUE, line_color_ref = \"black\", nrow = 1) # left plotSurface(object = object_t275, img_name = \"normres\")  # right plotSurface(object = object_t275, img_name = \"badly_aligned\") # extract the transformation instructions for an image # currently, the default: no transformation getImageTransformations(object_t275, img_name = \"badly_aligned\") ## $angle ## [1] 0 ##  ## $flip ## $flip$horizontal ## [1] FALSE ##  ## $flip$vertical ## [1] FALSE ##  ##  ## $stretch ## $stretch$horizontal ## [1] 1 ##  ## $stretch$vertical ## [1] 1 ##  ##  ## $translate ## $translate$horizontal ## [1] 0 ##  ## $translate$vertical ## [1] 0 # add the required transformation to align the image # see ?alignImage for documentation and more examples object_t275 <-    alignImage(     object = object_t275,      img_name = \"badly_aligned\",      opt = \"set\", # 'set' is the default, 'add' is also possible      transl_h = -25,      transl_v = -20     )  # instructions have changed... getImageTransformations(object_t275, img_name = \"badly_aligned\") ## $angle ## [1] 0 ##  ## $flip ## $flip$horizontal ## [1] FALSE ##  ## $flip$vertical ## [1] FALSE ##  ##  ## $stretch ## $stretch$horizontal ## [1] 1 ##  ## $stretch$vertical ## [1] 1 ##  ##  ## $translate ## $translate$horizontal ## [1] -25 ##  ## $translate$vertical ## [1] -20 # ... and are applied whenever the image is used if transform = TRUE (default) # upper three plots plotImages(object_t275, outline_ref = TRUE, transform = TRUE) +    labs(caption = \"transform = TRUE\")  # lower three plots plotImages(object_t275, outline_ref = TRUE, transform = FALSE) +    labs(caption = \"transform = FALSE\") # reset transformations to make the image \"badly aligned\" again object_t275 <- resetImageTransformations(object_t275, img_name = \"badly_aligned\")  object_t275 <- alignImageInteractive(object_t275)"},{"path":"/articles/image-handling.html","id":"storing-images","dir":"Articles","previous_headings":"","what":"6. Storing images","title":"Image Handling","text":"SPATA2 object, images loosely stored. Actually, every image gets image-container upon registration. image-container S4 class named HistoImage. objects contain image information around image, pixel content, tissue outline, dimensions, file directories etc.","code":"# extract the image img <- getImage(object_t275, img_name = \"badly_aligned\")  class(img) ## [1] \"Image\" ## attr(,\"package\") ## [1] \"EBImage\" # extrac the image container hist_img <- getHistoImage(object_t275, img_name = \"badly_aligned\")  # hist_img is an S4 object of class `HistoImage` class(hist_img) ## [1] \"HistoImage\" ## attr(,\"package\") ## [1] \"SPATA2\" # ... it contains the image as obtained by `getImage()` class(hist_img@image) ## [1] \"Image\" ## attr(,\"package\") ## [1] \"EBImage\" dim(hist_img@image) ## [1] 576 600   3 # all slot names of the container slotNames(hist_img) ##  [1] \"active\"          \"aligned\"         \"bg_color\"        \"dir\"             ##  [5] \"image\"           \"image_info\"      \"name\"            \"outline\"         ##  [9] \"overlap\"         \"pixel_content\"   \"reference\"       \"sample\"          ## [13] \"scale_factors\"   \"transformations\""},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Initiation of individual SPATA2 objects","text":"SPATA2 provides functions initiate SPATA2 objects standardized output common platforms like Visium MERFISH, can initiate SPATA2 object scratch individual data long data meets following criteria: must clearly identified quantifiable unit data like gene- protein expression, metabolite counts. must clearly identified observational unit data mapped like barcoded spots, single cells beads. must numeric information position observation 2D space form x- y- coordinates. Everything else optional. tutorial guides required steps best practices.","code":""},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"initiate-the-object","dir":"Articles","previous_headings":"","what":"2. Initiate the object","title":"Initiation of individual SPATA2 objects","text":"function use initiateSpataObject(). Minimal requirements actually create SPATA2 object include: Input sample_name: character value names object. Input modality: character value best describes molecular modality data . Read . Input count_mtr: numeric m x n matrix rownames corresponding molecule names column names corresponding identifiers observations, SPATA2 terms: barcodes. Input coords_df: data.frame least three variables. barcodes, x x_orig y y_orig.","code":""},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"with-minimal-requirements","dir":"Articles","previous_headings":"2. Initiate the object","what":"2.1 With minimal requirements","title":"Initiation of individual SPATA2 objects","text":"code chunks creates SPATA2 object scratch minimal requirements.","code":"## use SPATA2 intern example data data(\"example_data\")  count_mtr <- example_data$count_mtr coords_df <- example_data$coords_df  # show count mtr structure count_mtr[1:5, 1:5] ## 5 x 5 sparse Matrix of class \"dgCMatrix\" ##       AAACAAGTATCTCCCA-1 AAACACCAATAACTGC-1 AAACAGAGCGACTCCT-1 ## MT1X                   1                  2                  3 ## ADM                    .                  1                  1 ## IGKC                   .                  .                  . ## VEGFA                  1                  .                  . ## DDIT3                  1                  1                  1 ##       AAACAGCTTTCAGAAG-1 AAACAGGGTCTATATT-1 ## MT1X                   2                  3 ## ADM                    .                  . ## IGKC                   .                  . ## VEGFA                  .                  1 ## DDIT3                  1                  . # show coords data.frame structure coords_df ## # A tibble: 3,733 × 3 ##    barcodes           x_orig y_orig ##    <chr>               <dbl>  <dbl> ##  1 AAACAAGTATCTCCCA-1   435.  226.  ##  2 AAACACCAATAACTGC-1   132.  171.  ##  3 AAACAGAGCGACTCCT-1   407.  455.  ##  4 AAACAGCTTTCAGAAG-1    96   273   ##  5 AAACAGGGTCTATATT-1   110.  247.  ##  6 AAACAGTGTTCCTGGG-1   219.   81.8 ##  7 AAACATTTCCCGGATT-1   416.  157.  ##  8 AAACCGGGTAGGTACC-1   165.  279.  ##  9 AAACCGTTCGTCCAGG-1   216.  215.  ## 10 AAACCTAAGCAGCCGG-1   365.  132.  ## # ℹ 3,723 more rows object_minimal <-    initiateSpataObject(     sample_name = \"my_object\", # req. a     modality = \"gene\", # req. b     count_mtr = count_mtr, # req. c     coords_df = coords_df # req. d   )  # left plot plotSurface(object_minimal)  # right plot plotSurface(object_minimal, color_by = \"METRN\")"},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"including-images","dir":"Articles","previous_headings":"2. Initiate the object","what":"2.2 Including images","title":"Initiation of individual SPATA2 objects","text":"can either register images creating object initiation. Whether global environment whether read directory, image compatible EBImage package - case almost images. use img_dir directory image stored, , can conveniently switch images registered multiple.","code":""},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"aligned-images","dir":"Articles","previous_headings":"2. Initiate the object > 2.2 Including images","what":"2.2.1 Aligned images","title":"Initiation of individual SPATA2 objects","text":"","code":"# get an image from the example data (or read in your own) img_normres <- example_data$img_normres  dim(img_normres) ## [1] 576 600   3 # initiate the object with an image object_init_with_img <-    initiateSpataObject(     sample_name = \"my_object\",      modality = \"gene\",      count_mtr = count_mtr,      coords_df = coords_df,      img = img_normres, # provide the image     img_name = \"norm_res\" # name the image   )  # register the image afterwards object_minimal <-    registerImage(     object = object_minimal, # object from previous code chunk     img = img_normres,      img_name = \"norm_res\",     unload = FALSE     )  # both result in the same output  # left plot plotSurface(object_init_with_img, display_image = T)   # right plot plotSurface(object_minimal, display_image = T)"},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"not-aligned-images","dir":"Articles","previous_headings":"2. Initiate the object > 2.2 Including images","what":"2.2.2 Not-aligned images","title":"Initiation of individual SPATA2 objects","text":"image aligned coordinates observations stored coords_df? two kinds problems arise.","code":""},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"bad-scaling","dir":"Articles","previous_headings":"2. Initiate the object > 2.2 Including images","what":"Bad Scaling","title":"Initiation of individual SPATA2 objects","text":"One problem x- y-coordinates coords_df scaled different resolution image. example , SPATA2 object initiated image smaller dimensions compared scaling coordinates observations.  case scale factor needed.","code":"# an image img_lowres <- example_data$img_lowres class(img_lowres) ## [1] \"Image\" ## attr(,\"package\") ## [1] \"EBImage\"  # dimensions lowres image dim(img_lowres) ## [1] 200 208   3  # dimensions coordinates coords_df <- getCoordsDf(object_minimal)  # maxima of x- and y-coordinates surpass their respective image axes map(.x = coords_df[,c(\"x\", \"y\")], .f = range) ## $x ## [1]  70.32 485.76 ##  ## $y ## [1]  74.16 513.24  object_badly_scaled <-    initiateSpataObject(     sample_name = \"my_object\",      modality = \"gene\",      count_mtr = count_mtr,      coords_df = coords_df,      img = img_lowres,      img_name = \"lowres\"    )  # the plotted observations -> bad alignment # left plot (axes range is scaled to observation range by default) plotSurface(object_badly_scaled, pt_clr = \"red\", display_image = T) +    theme_bw()  # right plot with increased axes scale  plotSurface(object_badly_scaled, pt_clr = \"red\", display_image = T, xrange = c(0, 600), yrange = c(0, 600)) +    theme_bw() # compute an image scale factor (or obtain it otherwise) isf <- max(dim(img_lowres)) / max(dim(img_normres))  print(isf) ## [1] 0.3466667  object_well_scaled <-    initiateSpataObject(     sample_name = \"my_object\",      modality = \"gene\",      count_mtr = count_mtr,      coords_df = coords_df,      img = img_lowres,      img_name = \"lowres\",      scale_factors = list(image = isf) # provide the scale factor!   )  # the image scale factor is used to scale the coordinates to the image that # is currently active, which is the image 'lowres' since object_well_scaled contains # only that plotSurface(object_well_scaled, pt_clr = \"red\", display_image = T) +    theme_bw()"},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"bad-justification","dir":"Articles","previous_headings":"2. Initiate the object > 2.2 Including images","what":"Bad justification","title":"Initiation of individual SPATA2 objects","text":"image needs additional justification terms horizontal vertical translation, rotation stretching, please refer vignette image handling.","code":"# for some image adjustments library(EBImage)  # mess up the image justification img_bad_just <-    flip(example_data$img_normres) %>%    rotate(angle = 47, bg.col = \"white\") %>%    translate(v = c(20, 55), bg.col = \"white\")    # initiate the SPATA2 object with it object_bad_just <-    initiateSpataObject(     sample_name = \"my_object\",      modality = \"gene\",      count_mtr = count_mtr,      coords_df = coords_df,      img = img_bad_just,      img_name = \"bad_just\"   )  plotSurface(object_bad_just, pt_clr = \"red\", display_image = T)"},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"si-units-and-the-pixel-scale-factor","dir":"Articles","previous_headings":"","what":"3. SI units and the pixel scale factor","title":"Initiation of individual SPATA2 objects","text":"SPATA2, pixel scale factor used transform coordinates pixel (loose numeric values) SI units. numeric value comes attribute indicates SI unit pixel- loose numeric value - scaled (e.g. mm / px). applied coordinates scaled image resolution. Note, name pixel scale factor evolved historically, since SPATA2 developed Visium platform mind. term fit perfectly platforms MERFISH Xenium experiments since provide image coordinates provided SI units (despite dealt simple numeric values R). fitting name loose-numeric-value--SI-factor - ’s quite long, though. Furthermore, SI unit system SPATA2 works stable don’t want touch . Therefore, name pixel scale factor remains. pixel scale factor must necessarily provided. function computePixelScaleFactor() can compute certain criteria met. Namely fixed center--center distance inherent method platform underlies data set, case Visium platform. , need SpatialMethod class.","code":"# we computed that beforehand... psf <- 0.01368328 attr(psf, which = \"unit\") <- \"mm/px\"  if(FALSE){      # this is the scale factor MERFISH and Xenium objects are inititated with   # since the coordinates already come in um units   psf <- 1   attr(psf, which = \"unit\") <- \"um/px\"    }  # usage of the pixel scale factor translated:  # multiply the x- and y-coordinates with this factor to obtain  # x- and y-coordinates in mm scale print(psf) ## [1] 0.01368328 ## attr(,\"unit\") ## [1] \"mm/px\"  object_advanced <-    initiateSpataObject(     sample_name = \"my_object\",      modality = \"gene\",      count_mtr = count_mtr,      coords_df = coords_df,      img = img_normres, # provide the image     img_name = \"norm_res\", # name the image     scale_factors = list(pixel = psf) # the pixel scale factor for image norm_res   )   # object_advanced has been created with a pixel scale factor containsScaleFactor(object_advanced, fct_name = \"pixel\") ## [1] TRUE  # object_minimal has not (!) been created with a pixel scale factor containsScaleFactor(object_minimal, fct_name = \"pixel\") ## [1] FALSE  # note how the factor works for all kinds of  units getPixelScaleFactor(object_advanced, unit = \"um\") ## [1] 13.68328 ## attr(,\"unit\") ## [1] \"um/px\""},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"the-spatial-method","dir":"Articles","previous_headings":"","what":"4. The spatial method","title":"Initiation of individual SPATA2 objects","text":"far created SPATA2 objects without giving thought spatial method underlying data. However, spatial method platform based data created often contains specifics important useful functions. SPATA2 stores information around S4 object class SpatialMethod. case initiateSpataObject() read data predefined platform individual data argument spatial_method defaults ‘Undefined’. SpatialMethod class provides information experiment set tells certain functions whether valid use data set .","code":"# show overview object_minimal ## SPATA2 object of size: 3733 x 2000 (observations x molecules) ## Sample name: my_object  ## Platform: Undefined  ## Contains 1 assay: gene (active)  ## Matrix for assay: gene ##  -counts (active) ## Meta variables (1): sample"},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"the-concept","dir":"Articles","previous_headings":"4. The spatial method","what":"4.1 The concept","title":"Initiation of individual SPATA2 objects","text":"can read class SpatialMethod. Every platform known SPATA2 SpatialMethod object defined. Consider object Visium platform 6.5mm x 6.5mm capture area, SPATA2 referred VisiumSmall. Depending content object, particular slot @method_specifics, certain functions SPATA2 work data certain functions . instance, information center--center distance slot @method_specifics$ccd missing function computePixelScaleFactor() work, since needs center--center distance.","code":"# show the class class(VisiumSmall) ## [1] \"SpatialMethod\" ## attr(,\"package\") ## [1] \"SPATA2\" # show the slot names  slotNames(VisiumSmall) ## [1] \"capture_area\"       \"info\"               \"method_specifics\"   ## [4] \"name\"               \"unit\"               \"observational_unit\" ## [7] \"version\" # show the content of each slot as a list  show(VisiumSmall) ## $capture_area ## list() ##  ## $info ## list() ##  ## $method_specifics ## $method_specifics$capture_area_frame ## $method_specifics$capture_area_frame$x ## [1] \"0.75mm\" \"7.25mm\" ##  ## $method_specifics$capture_area_frame$y ## [1] \"0.75mm\" \"7.25mm\" ##  ##  ## $method_specifics$ccd ## [1] \"100um\" ##  ## $method_specifics$diameter ## [1] \"55um\" ##  ## $method_specifics$fiducial_frame ## $method_specifics$fiducial_frame$x ## [1] \"0mm\" \"8mm\" ##  ## $method_specifics$fiducial_frame$y ## [1] \"0mm\" \"8mm\" ##  ##  ##  ## $name ## [1] \"VisiumSmall\" ##  ## $unit ## [1] \"mm\" ##  ## $observational_unit ## [1] \"spot\" ##  ## $version ## $version$major ## [1] 3 ##  ## $version$minor ## [1] 0 ##  ## $version$patch ## [1] 0 # contrast this with the spatial method with which  # undefined SPATA2 objects are created by default show(spatial_methods$Undefined) ## $capture_area ## list() ##  ## $info ## list() ##  ## $method_specifics ## list() ##  ## $name ## [1] \"Undefined\" ##  ## $unit ## [1] \"px\" ##  ## $observational_unit ## [1] \"undefined\" ##  ## $version ## $version$major ## [1] 3 ##  ## $version$minor ## [1] 0 ##  ## $version$patch ## [1] 0"},{"path":"/articles/initiation-and-preprocessing-customized.html","id":"create-it-yourself","dir":"Articles","previous_headings":"4. The spatial method","what":"4.2 Create it yourself","title":"Initiation of individual SPATA2 objects","text":"create valid SpatialMethod object, need three aspects: observational unit, name method default unit. Everything else optional.","code":"sp_method <-    createSpatialMethod(     observational_unit = \"spot\",      name = \"MyPlatform\",     unit = \"mm\",      method_specifics = list(\"ccd\" = \"100um\") # optional       )  # create a SPATA2 object with a defined spatial method object_advanced <-    initiateSpataObject(     sample_name = \"my_object\",      modality = \"gene\",      count_mtr = count_mtr,      coords_df = coords_df,      img = img_normres,      img_name = \"norm_res\",      spatial_method = sp_method   )  # the platform appears in the overview show(object_advanced) ## SPATA2 object of size: 3733 x 2000 (observations x molecules) ## Sample name: my_object  ## Platform: MyPlatform  ## Contains 1 assay: gene (active)  ## Matrix for assay: gene ##  -counts (active) ## Meta variables (1): sample # the SPATA2 object contains information about the spatial method underlying its data # which qualifies it for automatic computation of the pixel scale factor containsCCD(object_advanced) ## [1] TRUE object_advanced <- computePixelScaleFactor(object_advanced)  # looks familiar? getPixelScaleFactor(object_advanced, unit = \"mm\") ## [1] 0.01368328 ## attr(,\"unit\") ## [1] \"mm/px\""},{"path":"/articles/initiation-and-preprocessing-merfish.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Initiation & Preprocessing: MERFISH","text":"tutorial demonstrates load preprocess MERFISH data SPATA2 using initiateSpataObjectMERFISH() function. required files cell--gene matrix (cell_by_gene.csv) cell metadata (cell_metadata.csv) MERFISH output folder. function can adjusted custom files, see ?initiateSpataObjectMERFISH().","code":""},{"path":"/articles/initiation-and-preprocessing-merfish.html","id":"load-data","dir":"Articles","previous_headings":"","what":"2. Load data","title":"Initiation & Preprocessing: MERFISH","text":", using exemplary mouse brain dataset Vizgen Data Release V1.0, Slice 2, Replicate 3, downloaded 08/2023. dataset tutorial can downloaded . obtained SPATA2 object 85,958 cells 649 genes. count matrix looks follows:","code":"library(SPATA2) library(SPATAData) library(ggplot2) library(dplyr)  # initiate the object from a folder directory object <-   initiateSpataObjectMERFISH(      directory_merfish = \"data/tutorial_initiate_merfish\", # adjust to your liking      sample_name = \"Slice2_Replicate3\"    )  # output object object ## SPATA2 object of size: 85958 x 649 (observations x molecules) ## Sample name: Slice2_Replicate3  ## Platform: MERFISH  ## Contains 1 assay: gene (active)  ## Matrix for assay: gene ##  -counts (active) ## Meta variables (3): sample, original_barcodes, tissue_section # extract count matrix count_mtr <- getCountMatrix(object)  # show results count_mtr[10:15,1:5] ## 6 x 5 sparse Matrix of class \"dgCMatrix\" ##         cell_1 cell_2 cell_3 cell_4 cell_5 ## Htr5a        .      .      .      .      . ## Htr5b        .      .      .      .      . ## Htr6         .      .      .      .      . ## Htr7         .      1      .      .      . ## Adora1       .      .      .      .      . ## Adora2a      .      .      .      .      ."},{"path":"/articles/initiation-and-preprocessing-merfish.html","id":"spatial-processing","dir":"Articles","previous_headings":"","what":"3. Spatial processing","title":"Initiation & Preprocessing: MERFISH","text":"First, correct slight tilt. Next, plot tissue outline. computed via identifyTissueOutline() default parameters within initiateSpataObjectMERFISH(). results objects satisfying adjust run function . Every function call simply overwrites results. case, default parameters worked well tissue outline looks appropriate.  Seems tiny fraction cells connected main tissue section. can identify remove spatial outlier separated contiguous tissue section identifySpatialOutliers(). , function runs default parameters can adjusted. Refer documentation information. case single outliers collection cells less 5% overall number cells (case, 4,297 cells) considered spatial outliers. Running function creates new column sp_outlier added cell metadata. results can plotted plotSurface().","code":"object <- rotateCoordinates(object, angle = 6) plotSurface(object, color_by = \"tissue_section\", pt_clrp = \"milo\") + ggpLayerTissueOutline(object) # identify outliers based on the results of identifyTissueOutline() object <- identifySpatialOutliers(object) ## 10:06:59 Identifying spatial outliers. ## 10:06:59 Spatial outliers: 95 # show the column getCoordsDf(object, variables = \"sp_outlier\") %>%    dplyr::filter(sp_outlier == TRUE) %>%    dplyr::select(barcodes, sample, sp_outlier, everything()) ## # A tibble: 95 × 13 ##    barcodes sample sp_outlier     x     y x_orig y_orig   fov volume min_x max_x ##    <chr>    <chr>  <lgl>      <dbl> <dbl>  <dbl>  <dbl> <dbl>  <dbl> <dbl> <dbl> ##  1 cell_16… Slice… TRUE       1407. 6327.  1407.  6327.    98  1017. 1139. 1165. ##  2 cell_28… Slice… TRUE        727. 1085.   727.  1085.   124  1460. 1010. 1038. ##  3 cell_33… Slice… TRUE       4002.  499.  4002.   499.   648   297. 4335. 4349. ##  4 cell_33… Slice… TRUE       4033.  508.  4033.   508.   648   749. 4364. 4381. ##  5 cell_33… Slice… TRUE       4009.  533.  4009.   533.   648  1717. 4336. 4355. ##  6 cell_33… Slice… TRUE       4035.  435.  4035.   435.   649  1650. 4375. 4389. ##  7 cell_33… Slice… TRUE       4025.  481.  4025.   481.   649   439. 4362. 4372. ##  8 cell_33… Slice… TRUE       3982.  451.  3982.   451.   649   180. 4322. 4332. ##  9 cell_33… Slice… TRUE       4001.  459.  4001.   459.   649   720. 4340. 4351. ## 10 cell_33… Slice… TRUE       4006.  427.  4006.   427.   649   503. 4350. 4357. ## # ℹ 85 more rows ## # ℹ 2 more variables: min_y <dbl>, max_y <dbl> # before outline_with_outliers <- ggpLayerTissueOutline(object)  plot_with_outliers <-    plotSurface(object, color_by = \"sp_outlier\", pt_clrp = \"milo\")  # remove the outliers # note that with spatial_proc = TRUE (default), a new tissue outline is computed object <- removeSpatialOutliers(object, spatial_proc = TRUE)  # afterwards plot_without_outliers <-    plotSurface(object, color_by = \"sp_outlier\", pt_clrp = \"milo\")  # left plot plot_with_outliers +    outline_with_outliers # old outline  # right plot plot_without_outliers +    ggpLayerTissueOutline(object) # new outline"},{"path":"/articles/initiation-and-preprocessing-merfish.html","id":"data-preprocessing","dir":"Articles","previous_headings":"","what":"4. Data preprocessing","title":"Initiation & Preprocessing: MERFISH","text":"first processing step usually remove genes detected cell. well remove cells counts . functions check scenario case , remove needs removed. Else, simply return input object. either case give feedback long verbose = TRUE (default). Next, normalize count matrix. normalize using SCT described Seurat utorial. processed raw count matrix. Results stored respective assays. default, normalized matrix activated thus used downstream analysis. See ?activateMatrix information. Furthermore, compute metadata cells: default, normalized matrix activated thus used downstream analysis. See ?activateMatrix information. Furthermore, compute metadata cells: n_counts_{modality} molecular modality gene represents number individual transcript counts per cell, whereas n_distinct_{modality} represents number distinct genes identified cell.","code":"#--- gene removal  nGenes(object) ## [1] 649  # remove genes with no counts - none existing object <- removeGenesZeroCounts(object)  nGenes(object) ## [1] 649  #--- obs removal nObs(object) ## [1] 85863  # remove observations with no counts - none existing object <- removeObsZeroCounts(object)  nObs(object) ## [1] 85863 # no processed matrices, only raw counts getProcessedMatrixNames(object) ## character(0)  getMatrixNames(object) ## [1] \"counts\"  activeMatrix(object) ## [1] \"counts\"  # normalize raw count data object <-    normalizeCounts(     object = object,     method = \"SCT\",     mtr_name_new = \"SCT_data\",      sct_clip_range = c(-10, 10)     )  # now the object contains normalized data getProcessedMatrixNames(object) ## [1] \"SCT_data\"  activeMatrix(object) ## [1] \"SCT_data\" # some more meta features object <- computeMetaFeatures(object)  # meta feauture names getFeatureNames(object) ##           character             logical              factor             numeric  ## \"original_barcodes\"        \"sp_outlier\"    \"tissue_section\"     \"n_counts_gene\"  ##             integer             numeric  ##   \"n_distinct_gene\"      \"avg_cpm_gene\"  # show overview (compare to overview above) show(object) ## SPATA2 object of size: 85863 x 649 (observations x molecules) ## Sample name: Slice2_Replicate3  ## Platform: MERFISH  ## Contains 1 assay: gene (active)  ## Matrices for assay: gene ##  -counts ##  -SCT_data (active) ## Meta variables (7): sample, original_barcodes, sp_outlier, tissue_section, n_counts_gene, n_distinct_gene, avg_cpm_gene  # left plot plotSurface(object, color_by = \"n_counts_gene\")  # right plot plotSurface(object, color_by = \"n_distinct_gene\")"},{"path":"/articles/initiation-and-preprocessing-merfish.html","id":"spatially-variable-genes","dir":"Articles","previous_headings":"","what":"5. Spatially variable genes","title":"Initiation & Preprocessing: MERFISH","text":"Next, identify spatially variable genes using SPARK-X.  ’s . SPATA2 object can used downstream analyses dimensional reduction, clustering, spatial annotation screening spatial trajectory screening. Refer tab Tutorials links.","code":"# run the algorithm object <- runSPARKX(object) ## ## ===== SPARK-X INPUT INFORMATION ====  ## ## number of total samples: 85863  ## ## number of total genes: 649  ## ## Running with single core, may take some time  ## ## Testing With Projection Kernel ## ## Testing With Gaussian Kernel 1 ## ## Testing With Gaussian Kernel 2 ## ## Testing With Gaussian Kernel 3 ## ## Testing With Gaussian Kernel 4 ## ## Testing With Gaussian Kernel 5 ## ## Testing With Cosine Kernel 1 ## ## Testing With Cosine Kernel 2 ## ## Testing With Cosine Kernel 3 ## ## Testing With Cosine Kernel 4 ## ## Testing With Cosine Kernel 5  sparkx_genes <- getSparkxGenes(object, threshold_pval = 0.05)  str(sparkx_genes) ##  chr [1:570] \"Htr1f\" \"Htr2a\" \"Htr5a\" \"Htr5b\" \"Adora1\" \"Adora2a\" \"Adgrb1\" ...  # left plot plotSurface(object, color_by = sparkx_genes[1], pt_clrsp = \"Purple-Blue\") +    ggpLayerTissueOutline(object) # use outline to plot against white  # right plot (set the color scale limits) plotSurface(object, color_by = sparkx_genes[2], pt_clrsp = \"Reds 3\", limits = c(0, 1.5), oob = scales::squish) +    ggpLayerTissueOutline(object)"},{"path":"/articles/initiation-and-preprocessing-merfish.html","id":"subset-observations","dir":"Articles","previous_headings":"","what":"6. Subset observations","title":"Initiation & Preprocessing: MERFISH","text":"examples, provide small example object. , additionally subset dataset just extract top right corner.","code":"# get range of upper right corner crop_range <-    getCoordsRange(object) %>%   purrr::map(.f = ~ c(mean(.x), max(.x)))  # show results crop_range ## $x ## [1] 5069.762 9639.579 ##  ## $y ## [1] 3732.895 7104.322  p_before <-    plotSurface(object, pt_clr = \"red\") +    ggpLayerTissueOutline(object) +    ggpLayerRect(object, xrange = crop_range$x, yrange = crop_range$y)  # crop with a rectangular object_subset <- cropSpataObject(object, xrange = crop_range$x, yrange = crop_range$y)  p_subset <- plotSurface(object_subset, pt_clr = \"red\")  # left plot p_before  # right plot p_subset"},{"path":"/articles/initiation-and-preprocessing-merfish.html","id":"conclusion-and-more-data-sets","dir":"Articles","previous_headings":"","what":"7. Conclusion and more data sets","title":"Initiation & Preprocessing: MERFISH","text":"’s . object can used downstream analyses dimensional reduction, clustering, spatial annotation screening spatial trajectory screening. Refer tab Tutorials links. Furthermore, can skim curated data base spatial data sets platform MERFISH using SPATAData.","code":"# load package library(SPATAData)  # filter for samples from platform VisiumHD sourceDataFrame(platform %in% c(\"VisiumSmall\", \"VisiumLarge\")) ## # A tibble: 161 × 33 ##    sample_name  comment donor_id donor_species grade histo_class histo_class_sub ##    <chr>        <chr>   <chr>    <chr>         <chr> <chr>       <chr>           ##  1 HumanBreast… NA      NA       Homo sapiens  NA    NA          NA              ##  2 HumanGliobl… NA      NA       Homo sapiens  IV    Glioblasto… NA              ##  3 HumanTonsil… NA      NA       Homo sapiens  NA    NA          NA              ##  4 HumanColore… NA      NA       Homo sapiens  NA    NA          NA              ##  5 HumanGliobl… NA      NA       Homo sapiens  NA    Glioblasto… NA              ##  6 HumanKidney… NA      NA       Homo sapiens  NA    NA          NA              ##  7 HumanLungCa… NA      NA       Homo sapiens  NA    NA          NA              ##  8 HumanOvaria… NA      NA       Homo sapiens  NA    NA          NA              ##  9 Breast_Canc… NA      NA       Homo sapiens  NA    NA          NA              ## 10 Breast_Canc… NA      NA       Homo sapiens  NA    NA          NA              ## # ℹ 151 more rows ## # ℹ 26 more variables: institution <chr>, lm_source <dttm>, organ <chr>, ## #   organ_part <chr>, organ_side <chr>, pathology <chr>, platform <chr>, ## #   pub_citation <chr>, pub_doi <chr>, pub_journal <chr>, pub_year <dbl>, ## #   sex <chr>, source <chr>, tags <chr>, tissue_age <dbl>, web_link <chr>, ## #   workgroup <chr>, mean_counts <dbl>, median_counts <dbl>, ## #   modality_gene <lgl>, modality_metabolite <lgl>, modality_protein <lgl>, …"},{"path":"/articles/initiation-and-preprocessing-visium-hd.html","id":"initiation","dir":"Articles","previous_headings":"","what":"1. Initiation","title":"Initiation & Preprocessing: VisiumHD","text":"initiate SPATA2 object directly Visium output use function initiateSpataObjectVisiumHD(). example vignette uses data example data set provided 10X Genomics. can download folder . Note: crucial install package arrow way arrow::read_parquet() works. several ways. Installing package install.packages('arrow', repos = 'https://apache.r-universe.dev') worked reliably us.","code":"library(SPATA2) library(tidyverse)  object <-    initiateSpataObjectVisiumHD(     sample_name = \"HumanPancreasHD\",      directory_visium = \"initiate_VisiumHD\" # adjust to your liking    )  # show overview object ## SPATA2 object of size: 106574 x 18085 (observations x molecules) ## Sample name: test  ## Platform: VisiumHD  ## Contains 1 assay: gene (active)  ## Matrix for assay: gene ##  -counts (active) ## Meta variables (2): sample, tissue_section"},{"path":"/articles/initiation-and-preprocessing-visium-hd.html","id":"image-processing","dir":"Articles","previous_headings":"","what":"2. Image processing","title":"Initiation & Preprocessing: VisiumHD","text":"(Beta; still progress since work well images fluent tissue background transition.) Image processing required. However, facilitates integration histological features displayed histology image, Visium platform allows integrate. goal image processing identify precise spatial outline tissue histology slide. function processImage() wrapper around identifyPixelContent() identifyTissueOutline(..., method = \"image\"). Please refer documentation either function obtain information. results identifyPixelContent() can plotted plotImageMask() plotPixelContent().  results identifyTissueOutline(..., method = \"image\") best visualized setting outline = TRUE plotImage() function.  Note, tissue fragment identified left image located within capture area Visium slide. Hence, won’t importance comes analyzing gene expression.","code":"object <- identifyPixelContent(object, frgmt_threshold = c(0.01,0.05))  object <- identifyTissueOutline(object, method = \"image\") plotImageMask(object)  plotPixelContent(object, clrp = \"jco\") # get colors of one of the known color palettes cvec <- color_vector(\"jco\")  # left plot plotImage(object)  # right plot plotImage(object, outline = TRUE, line_size = 1, line_color = cvec[1], fragments = cvec[2]) # left plot plotImage(object, outline = TRUE, line_size = 1, line_color = cvec[1], fragments = cvec[2]) +    ggpLayerPoints(object, pt_clr = cvec[1], pt_alpha = 0.5, use_scattermore = T) +    ggpLayerFrameByImage(object) +    ggpLayerCaptureArea(object, opt = \"rect\")   # right plot plotSurface(object, pt_clr = cvec[1], pt_alpha = 0.5) +    ggpLayerCaptureArea(object)"},{"path":"/articles/initiation-and-preprocessing-visium-hd.html","id":"spatial-processing","dir":"Articles","previous_headings":"","what":"3. Spatial processing","title":"Initiation & Preprocessing: VisiumHD","text":"step skipped! Many functions SPATA2 need know edge tissue section need know multiple tissue sections. kind data provided standard output platforms needs computed. spatial processing particularly refer identification spatial outliers - observations part data set lie far away contiguous tissue section considered part data set actual interest. case VisiumHD platform usually artefacts. function identifyTissueOutline(..., method = \"obs\") uses DBSCAN algorithm identify potential spatial outliers. tutorial non-HD Visium exemplifies .  defined tissue_section_0 assigned tissue section always considered spatial outlier. Furthermore, observations tissue sections small labeled spatial outliers, . defines small can set min_section takes numeric value defining minimal number observations order tissue section considered large enough. Note can also use results identifyTissueOutline(..., method = 'image') spatial outlier detection removal combine results methods setting method = 'image' method = c('image', 'obs'). can play around parameters using identifySpatialOutliers() since resulting sp_outlier meta variable simply overwritten. Manual adjustment variable always possible using getMetaDf() addFeatures(..., overwrite = TRUE).","code":"# this is the default input for the visium platform and has already been  # called in initiateSpataObjectVisium().  # if the results do not satisfy you, you can run it over and over again with  # different parameter inputs  object <- identifyTissueOutline(object, method = \"obs\", eps = \"20um\", minPts = 3)  axes_layer <- ggpLayerAxesSI(object, breaks = str_c(c(3, 5, 7, 9, 11), \"mm\")) rect_layer <- ggpLayerRect(object, xrange = c(\"9mm\", \"11mm\"), yrange = c(\"7mm\", \"9mm\"))  # left plot plotSurface(object, color_by = \"tissue_section\") +    axes_layer +   rect_layer  # right plot (zoomed in on rectangular) plotSurface(object, color_by = \"tissue_section\", xrange = c(\"9mm\", \"11mm\"), yrange = c(\"7mm\", \"9mm\")) +    axes_layer +    legendNone() # min_section = 1% of all observations min_section <- nObs(object)*0.01  min_section ## [1] 1065.74  # uses the results of identifyTissueOutline() to create a logical variable called sp_outlier object <- identifySpatialOutliers(object, method = \"obs\", min_section = min_section)  plot_with_outliers <- plotSurface(object, color_by = \"sp_outlier\", clrp_adjust = c(\"TRUE\" = \"blue\"))  # remove where sp_outlier == TRUE object <- removeSpatialOutliers(object)  plot_without_outliers <- plotSurface(object, color_by = \"sp_outlier\")  # left plot plot_with_outliers  # right plot plot_without_outliers"},{"path":"/articles/initiation-and-preprocessing-visium-hd.html","id":"data-processing","dir":"Articles","previous_headings":"","what":"4. Data processing","title":"Initiation & Preprocessing: VisiumHD","text":"steps additional noise removal well processing raw counts.","code":""},{"path":"/articles/initiation-and-preprocessing-visium-hd.html","id":"data-cleaning","dir":"Articles","previous_headings":"4. Data processing","what":"4.1. Data cleaning","title":"Initiation & Preprocessing: VisiumHD","text":"First might want remove certain genes raw count matrix. wrappers certain steps like removeGenesStress() removeGenesZeroCounts(). Individual genes can always removed removeGenes(). cases observations - case Visium barcoded spots - left counts . case removeObsZeroCounts() removes . none nothing happens. Afterwards, can compute meta data observations.","code":"# before nGenes(object) ## [1] 18085  # removes stress genes object <- removeGenesStress(object)  # removes genes that were not detected in any of the observations object <- removeGenesZeroCounts(object)  # afterwards nGenes(object) ## [1] 18033 # before nObs(object) ## [1] 106360  # check for and remove observations with zero counts object <- removeObsZeroCounts(object)  # afterwards  nObs(object) ## [1] 106360 object <- computeMetaFeatures(object)  # plot left plotSurface(object, color_by = \"n_counts_gene\")  # plot right plotSurface(object, color_by = \"n_distinct_gene\")"},{"path":"/articles/initiation-and-preprocessing-visium-hd.html","id":"matrix-processing","dir":"Articles","previous_headings":"4. Data processing","what":"4.2 Matrix processing","title":"Initiation & Preprocessing: VisiumHD","text":"SPATA2 object initiated raw count matrix. almost downstream analysis steps recommended use processed matrices. first step usually log-normalization. create normalized matrix use normalizeCounts(). uses Seurat::NormalizeData() background. input options method correspond options function Seurat package. default, normalized matrix named input method, activated thus used default downstream analysis visualization. function normalizeCounts() can called multiple times different inputs method populates list processed matrices respective assay. Furthermore, processed matrices can added addProcessedMatrix() want create SPATA2-extern functions. default matrix used can set activateMatrix(). default, normalizeCounts() activates processed matrix created.","code":"# obtain matrix names prior to normalization getMatrixNames(object) ## [1] \"counts\"  plot_with_raw_counts <-    plotSurface(object, color_by = \"INS\",  pt_clrsp = \"Reds 3\") + labs(color = \"INS\\n(Counts)\")  # create log normalized matrix object <- normalizeCounts(object, method = \"LogNormalize\")  # obtain matrix names after normalization getMatrixNames(object) ## [1] \"counts\"       \"LogNormalize\"  # check active matrix activeMatrix(object) ## [1] \"LogNormalize\"  # uses the processed matrix LogNormalize # use alpha_by to scale transparency to INS as well plot_with_proc_data <-    plotSurface(object, color_by = \"INS\", alpha_by = \"INS\", pt_clrsp = \"Reds 3\") + labs(color = \"INS\\n(logNorm)\")   # left plot plot_with_raw_counts  # right plot plot_with_proc_data"},{"path":"/articles/initiation-and-preprocessing-visium-hd.html","id":"variable-genes","dir":"Articles","previous_headings":"","what":"5. Variable genes","title":"Initiation & Preprocessing: VisiumHD","text":"Genes high variability can identified wrappers around Seurat functions.","code":"# identifies molecules of high variability in the default assay (= gene) object <- identifyVariableMolecules(object, method = \"vst\", n_mol = 2500)  var_mols <- getVariableMolecules(object, method = \"vst\")  str(var_mols) ##  chr [1:2500] \"INS\" \"REG3A\" \"TTR\" \"GCG\" \"GHRL\" \"SST\" \"VIP\" \"PPY\" \"CARTPT\" ... # example plots plotSurfaceComparison(object, color_by = var_mols[1:6], pt_clrsp = \"Reds 3\",  alpha_by = TRUE, nrow = 2)"},{"path":"/articles/initiation-and-preprocessing-visium-hd.html","id":"conclusion-and-more-data-sets","dir":"Articles","previous_headings":"","what":"6. Conclusion and more data sets","title":"Initiation & Preprocessing: VisiumHD","text":"’s . object can used downstream analyses dimensional reduction, clustering, spatial annotation screening spatial trajectory screening. Refer tab Tutorials links. Furthermore, can skim curated data base spatial data sets platform VisiumHD using SPATAData.","code":"# load package library(SPATAData)  # filter for samples from platform VisiumHD sourceDataFrame(platform == \"VisiumHD\") ## # A tibble: 2 × 18 ##   sample_name      donor_species institution lm_source           organ pathology ##   <chr>            <chr>         <chr>       <dttm>              <chr> <chr>     ## 1 HumanLungCancer… Homo sapiens  10X Genomi… 2024-08-04 22:03:33 Lung  tumor     ## 2 HumanPancreasHD  Homo sapiens  10X Genomi… 2024-08-04 22:03:33 Panc… NA        ## # ℹ 12 more variables: platform <chr>, source <chr>, web_link <chr>, ## #   mean_counts <dbl>, median_counts <dbl>, modality_gene <lgl>, ## #   modality_metabolite <lgl>, modality_protein <lgl>, n_obs <int>, ## #   n_tissue_sections <int>, obs_unit <chr>, obj_size <lbstr_by>"},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"initiation","dir":"Articles","previous_headings":"","what":"1. Initiation","title":"Initiation & Preprocessing: Visium","text":"initiate SPATA2 object directly Visium output use function initiateSpataObjectVisium(). works slide types, capture area 6.5mm x 6.5mm (referred VisiumSmall SPATA2) 11mm x 11mm (referred VisiumLarge SPATA2). example vignette uses data 6.5mm x 6.5mm. can download folder . Save folder directory later provide input directory_visium.","code":"library(SPATA2)  object <-    initiateSpataObjectVisium(     sample_name = \"UKF269T\",      directory_visium = \"initiate_VisiumSmall\" # adjust to your liking    )  # show overview object ## SPATA2 object of size: 3217 x 33538 (observations x molecules) ## Sample name: UKF269T  ## Platform: VisiumSmall  ## Contains 1 assay: gene (active)  ## Matrix for assay: gene ##  -counts (active) ## Meta variables (1): sample"},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"image-processing","dir":"Articles","previous_headings":"","what":"2. Image processing","title":"Initiation & Preprocessing: Visium","text":"(Beta; still progress since work well images fluent tissue background transition.) Image processing required. However, facilitates integration histological features displayed histology image, Visium platform allows integrate. goal image processing identify precise spatial outline tissue histology slide. function processImage() wrapper around identifyPixelContent() identifyTissueOutline(..., method = \"image\"). Please refer documentation either function obtain information. results identifyPixelContent() can plotted plotImageMask() plotPixelContent().  results identifyTissueOutline(..., method = \"image\") best visualized setting outline = TRUE plotImage() function.","code":"object <- identifyPixelContent(object) plotImageMask(object)  plotPixelContent(object) plotImage(object)  plotImage(object, outline = TRUE, line_size = 1)"},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"spatial-processing","dir":"Articles","previous_headings":"","what":"3. Spatial processing","title":"Initiation & Preprocessing: Visium","text":"step skipped! Many functions SPATA2 need know edge tissue section need know multiple tissue sections. kind data provided standard output platforms needs computed. spatial processing particularly refer identification spatial outliers - observations part data set lie far away contiguous tissue section considered part data set actual interest. case Visium platform usually artefacts. function identifyTissueOutline(..., method = \"obs\") uses DBSCAN algorithm identify potential spatial outliers. results stored variable called tissue_section also contains information tissue section observation assigned case multiple tissue sections.","code":"# this is the default input for the visium platform and has already been  # called in initiateSpataObjectVisium().  # if the results do not satisfy you, you can run it over and over again with  # different parameter inputs  object <- identifyTissueOutline(object, method = \"obs\", eps = \"125um\", minPts = 3)  plotSurface(object, color_by = \"tissue_section\", pt_clrp = \"tab20\")"},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"tissue-outline-parameters","dir":"Articles","previous_headings":"3. Spatial processing","what":"3.1 Tissue outline parameters","title":"Initiation & Preprocessing: Visium","text":"DBSCAN requires two important parameters, namely eps minPts. Depending platform SPATA2 defaults different parameter inputs - worked well us past. can, however, change parameter input. Consider example mouse brain data set two tissue sections obviously separated.  spatial outliers contrast glioma sample UKF269T. happens change parameter input?  first example, increase eps parameter - radius starting observation screened adjacent neighbors. 1.5 mm though way much. lower spots upper tissue section find neighbors upper spots lower section. second example increase minPts value 6. Given arrangement Visium spots 6 neighbors, right? ! Spots edge belong tissue 6 neighbors within reach eps (defaults 125um) usually 3 4 spots. black spots outliers belong tissue section? can choose keep remove .","code":"object_example <- loadExampleObject(\"LMU_MCI\")  object_example <- identifyTissueOutline(object_example, eps = \"125um\", minPts = 3)  plotSurface(object_example) plotSurface(object_example, color_by = \"tissue_section\") # example 1: increase eps object_example <- identifyTissueOutline(object_example, eps =  \"1.5mm\", minPts = 3)  out_example_1 <-    plotSurface(object_example, color_by = \"tissue_section\") +    ggpLayerScaleBarSI(object_example, sb_dist = \"1.5mm\", sb_pos = c(200, 100)) +    labs(subtitle = \"eps = 1.5mm\")   # example 2: increase minPts object_example <- identifyTissueOutline(object_example, eps = \"125um\", minPts = 6)  out_example_2 <-    plotSurface(     object = object_example,     color_by = \"tissue_section\",     clrp_adjust = c(\"tissue_section_0\" = \"black\")     ) +    ggpLayerScaleBarSI(object_example, sb_dist = \"125um\", sb_pos = c(200, 100)) +    labs(subtitle = \"minPts = 6\")    # left  out_example_1   # right  out_example_2"},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"spatial-outliers","dir":"Articles","previous_headings":"3. Spatial processing","what":"3.2 Spatial outliers","title":"Initiation & Preprocessing: Visium","text":"defined tissue_section_0 assigned tissue section considered spatial outlier. Use identifySpatialOutliers() make official. case glioma sample UKF269T quite obvious spots marked outliers belong tissue.  Note, identifySpatialOutliers() can also identify outliers based tissue outline identified identifyTissueOutline(..., method = \"image\"). Also methods, image obs can combined. Refer documentation function information.","code":"# uses the results of identifyTissueOutline() to create a logical variable called sp_outlier object <- identifySpatialOutliers(object, method = \"obs\")  plot_with_outliers <- plotSurface(object, color_by = \"sp_outlier\", clrp_adjust = c(\"TRUE\" = \"blue\"))  # remove where sp_outlier == TRUE object <- removeSpatialOutliers(object)  plot_without_outliers <- plotSurface(object, color_by = \"sp_outlier\")  # left plot plot_with_outliers  # right plot plot_without_outliers"},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"data-processing","dir":"Articles","previous_headings":"","what":"4. Data processing","title":"Initiation & Preprocessing: Visium","text":"steps additional noise removal well processing raw counts.","code":""},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"data-cleaning","dir":"Articles","previous_headings":"4. Data processing","what":"4.1. Data cleaning","title":"Initiation & Preprocessing: Visium","text":"First might want remove certain genes raw count matrix. wrappers certain steps like removeGenesStress() removeGenesZeroCounts(). Individual genes can always removed removeGenes(). cases observations - case Visium barcoded spots - left counts . case removeObsZeroCounts() removes . none nothing happens. Afterwards, can compute meta data observations.","code":"# before nGenes(object) ## [1] 33538  # removes stress genes object <- removeGenesStress(object)  # removes genes that were not detected in any of the observations object <- removeGenesZeroCounts(object)  # afterwards nGenes(object) ## [1] 21445 # before nObs(object) ## [1] 3213  # check for and remove observations with zero counts object <- removeObsZeroCounts(object)  # afterwards  nObs(object) ## [1] 3213 object <- computeMetaFeatures(object)  # plot left plotSurface(object, color_by = \"n_counts_gene\")  # plot right plotSurface(object, color_by = \"n_distinct_gene\")"},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"matrix-processing","dir":"Articles","previous_headings":"4. Data processing","what":"4.2 Matrix processing","title":"Initiation & Preprocessing: Visium","text":"SPATA2 object initiated raw count matrix. almost downstream analysis steps recommended use processed matrices. first step usually log-normalization. create normalized matrix use normalizeCounts(). uses Seurat::NormalizeData() background. input options method correspond options function Seurat package. default, normalized matrix named input method, activated thus used default downstream analysis visualization. function normalizeCounts() can called multiple times different inputs method populates list processed matrices respective assay. Furthermore, processed matrices can added addProcessedMatrix() want create SPATA2-extern functions. default matrix used can set activateMatrix(). default, normalizeCounts() activates processed matrix created.","code":"# obtain matrix names prior to normalization getMatrixNames(object) ## [1] \"counts\"  plot_before <-    plotSurface(object, color_by = \"MAG\") + labs(color = \"MAG\\n(Counts)\")  # create log normalized matrix object <- normalizeCounts(object, method = \"LogNormalize\") ## Normalizing layer: counts ## 10:09:26 Active matrix in assay 'gene': 'LogNormalize'  # obtain matrix names after normalization getMatrixNames(object) ## [1] \"counts\"       \"LogNormalize\"  # check active matrix  activeMatrix(object) ## [1] \"LogNormalize\"  plot_afterwards <-    plotSurface(object, color_by = \"MAG\") + labs(color = \"MAG\\n(logNorm)\")  # left plot plot_before  # right plot plot_afterwards"},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"spatially-variable-genes","dir":"Articles","previous_headings":"","what":"5. Spatially variable genes","title":"Initiation & Preprocessing: Visium","text":"Since spatial transcriptomics spatial pattern gene expression might want identify genes spatial pattern non-random. recommend prefiltering kind genes, instance, SPATA2 intern Spatial Annotation Screening algorithm. Spatially variable genes can, instance, identified using wrapper around SPARKX (Zhu et al., 2021).","code":"# results are stored inside the SPATA2 object object <- runSPARKX(object, verbose = FALSE) ## ## ===== SPARK-X INPUT INFORMATION ====  ## ## number of total samples: 3213  ## ## number of total genes: 21445  ## ## Running with single core, may take some time  ## ## Testing With Projection Kernel ## ## Testing With Gaussian Kernel 1 ## ## Testing With Gaussian Kernel 2 ## ## Testing With Gaussian Kernel 3 ## ## Testing With Gaussian Kernel 4 ## ## Testing With Gaussian Kernel 5 ## ## Testing With Cosine Kernel 1 ## ## Testing With Cosine Kernel 2 ## ## Testing With Cosine Kernel 3 ## ## Testing With Cosine Kernel 4 ## ## Testing With Cosine Kernel 5 # get genes with a p-value < 0.01 sparkx_genes <- getSparkxGenes(object, threshold_pval = 0.01)  str(sparkx_genes) ##  chr [1:13842] \"ID3\" \"MARCKSL1\" \"PHC2\" \"WLS\" \"GNG5\" \"CNN3\" \"RHOC\" \"TXNIP\" ... # visualize in space plotSurfaceComparison(object, color_by = head(sparkx_genes, 6), nrow = 2)"},{"path":"/articles/initiation-and-preprocessing-visium.html","id":"conclusion-and-more-data-sets","dir":"Articles","previous_headings":"","what":"6. Conclusion and more data sets","title":"Initiation & Preprocessing: Visium","text":"’s . object can used downstream analyses dimensional reduction, clustering, spatial annotation screening spatial trajectory screening. Refer tab Tutorials links. Furthermore, can skim curated data base spatial data sets platform VisiumSmall VisiumLarge using SPATAData.","code":"# load package library(SPATAData)  # filter for samples from platform VisiumHD sourceDataFrame(platform %in% c(\"VisiumSmall\", \"VisiumLarge\")) ## # A tibble: 161 × 33 ##    sample_name  comment donor_id donor_species grade histo_class histo_class_sub ##    <chr>        <chr>   <chr>    <chr>         <chr> <chr>       <chr>           ##  1 HumanBreast… NA      NA       Homo sapiens  NA    NA          NA              ##  2 HumanGliobl… NA      NA       Homo sapiens  IV    Glioblasto… NA              ##  3 HumanTonsil… NA      NA       Homo sapiens  NA    NA          NA              ##  4 HumanColore… NA      NA       Homo sapiens  NA    NA          NA              ##  5 HumanGliobl… NA      NA       Homo sapiens  NA    Glioblasto… NA              ##  6 HumanKidney… NA      NA       Homo sapiens  NA    NA          NA              ##  7 HumanLungCa… NA      NA       Homo sapiens  NA    NA          NA              ##  8 HumanOvaria… NA      NA       Homo sapiens  NA    NA          NA              ##  9 Breast_Canc… NA      NA       Homo sapiens  NA    NA          NA              ## 10 Breast_Canc… NA      NA       Homo sapiens  NA    NA          NA              ## # ℹ 151 more rows ## # ℹ 26 more variables: institution <chr>, lm_source <dttm>, organ <chr>, ## #   organ_part <chr>, organ_side <chr>, pathology <chr>, platform <chr>, ## #   pub_citation <chr>, pub_doi <chr>, pub_journal <chr>, pub_year <dbl>, ## #   sex <chr>, source <chr>, tags <chr>, tissue_age <dbl>, web_link <chr>, ## #   workgroup <chr>, mean_counts <dbl>, median_counts <dbl>, ## #   modality_gene <lgl>, modality_metabolite <lgl>, modality_protein <lgl>, …"},{"path":"/articles/initiation-and-preprocessing-xenium.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Initiation & Preprocessing Xenium","text":"tutorial demonstrates load preprocess Xenium data SPATA2 using initiateSpataObjectXenium() function.","code":""},{"path":"/articles/initiation-and-preprocessing-xenium.html","id":"load-data","dir":"Articles","previous_headings":"","what":"2. Load data","title":"Initiation & Preprocessing Xenium","text":", using exemplary mouse brain dataset 10X Genomics website, downloaded 07/2024. dataset tutorial can downloaded . Save folder disk adjust input directory_merfish necessary. obtained SPATA2 object 162,254 cells 541 genes. count matrix looks follows:","code":"library(SPATA2) library(SPATAData) library(tidyverse)  # initiate the object from a folder directory object <-   initiateSpataObjectXenium(      directory_merfish = \"data/tutorial_initiate_xenium\", # adjust to your liking      sample_name = \"hlcx\" # h.uman l.ung c.ancer x.enium    ) . # output object object ## SPATA2 object of size: 162254 x 541 (observations x molecules) ## Sample name: HumanLungCancerXenium  ## Platform: Xenium  ## Contains 1 assay: gene (active)  ## Matrix for assay: gene ##  -counts (active) ## Meta variables (2): sample, tissue_section # extract count matrix count_mtr <- getCountMatrix(object)  # show results count_mtr[10:15,1:5] ## 6 x 5 sparse Matrix of class \"dgTMatrix\" ##        aaaadpbp-1 aaaaficg-1 aaabbaka-1 aaabbjoo-1 aaablchg-1 ## ADH1C           .          .          .          .          . ## ADH4            .          .          .          .          . ## ADIPOQ          .          .          .          .          . ## AGER            .          .          .          .          . ## AGR3            .          .          1          .          . ## AHSP            .          .          .          .          ."},{"path":"/articles/initiation-and-preprocessing-xenium.html","id":"spatial-processing","dir":"Articles","previous_headings":"","what":"3. Spatial processing","title":"Initiation & Preprocessing Xenium","text":"First, plot cells colored tissue section identified identifyTissueOutline(). function called default parameters within initiateSpataObjectXenium(). results objects satisfying adjust parameters run function . Every function call simply overwrites results. case, default parameters worked well tissue outline well section identification looks appropriate.  Seems small fraction cells connected main tissue section. Furthermore, cells assigned tissue section (tissue_section_0). can identify remove spatial outliers separated contiguous tissue section identifySpatialOutliers(). , function runs default parameters can adjusted. Refer documentation information. case single outliers collection cells less 5% overall number cells (case, 8112 cells) considered spatial outliers. Running function creates new column sp_outlier added cell metadata. results can plotted plotSurface().","code":"# sets the default for this object plotSurface(object, color_by = \"tissue_section\", pt_clrp = \"milo\") # for some data.frame manipulation library(dplyr)  # identify outliers based on the results of identifyTissueOutline() object <- identifySpatialOutliers(object) ## 10:09:55 Identifying spatial outliers. ## 10:09:55 Spatial outliers: 1149 # show the column getCoordsDf(object, variables = \"sp_outlier\") %>%    dplyr::filter(sp_outlier == TRUE) %>%    select(barcodes, sample, sp_outlier, everything()) ## # A tibble: 1,149 × 8 ##    barcodes   sample              sp_outlier     x     y x_orig y_orig cell_area ##    <chr>      <chr>               <lgl>      <dbl> <dbl>  <dbl>  <dbl>    [um^2] ##  1 aaaadpbp-1 HumanLungCancerXen… TRUE        206. 1496.   206.  1496.      68.5 ##  2 abfgiade-1 HumanLungCancerXen… TRUE        838. 3190.   838.  3190.      42.9 ##  3 abfgkhjc-1 HumanLungCancerXen… TRUE        862. 3195.   862.  3195.     127.  ##  4 abfgplcb-1 HumanLungCancerXen… TRUE        855. 3184.   855.  3184.      81.5 ##  5 abfhjncf-1 HumanLungCancerXen… TRUE        848. 3183.   848.  3183.      34.0 ##  6 aeejbbkm-1 HumanLungCancerXen… TRUE        269. 3516.   269.  3516.      33.3 ##  7 aeejcmej-1 HumanLungCancerXen… TRUE        268. 3508.   268.  3508.      72.0 ##  8 aeekonea-1 HumanLungCancerXen… TRUE        644. 3565.   644.  3565.      63.9 ##  9 aghomlfd-1 HumanLungCancerXen… TRUE       2829. 3391.  2829.  3391.      67.0 ## 10 ajcieihi-1 HumanLungCancerXen… TRUE       2559. 3131.  2559.  3131.      79.0 ## # ℹ 1,139 more rows # before outline_with_outliers <- ggpLayerTissueOutline(object)  plot_with_outliers <-    plotSurface(object, color_by = \"sp_outlier\", pt_clrp = \"milo\")  # remove the outliers # note that with spatial_proc = TRUE (default), a new tissue outline is computed object <- removeSpatialOutliers(object, spatial_proc = TRUE)  # afterwards plot_without_outliers <-    plotSurface(object, color_by = \"sp_outlier\", pt_clrp = \"milo\")  # plot top plot_with_outliers +    outline_with_outliers # old outline  # plot bottom plot_without_outliers +    ggpLayerTissueOutline(object) # new outline"},{"path":"/articles/initiation-and-preprocessing-xenium.html","id":"data-processing","dir":"Articles","previous_headings":"","what":"4. Data processing","title":"Initiation & Preprocessing Xenium","text":"steps additional noise removal well processing raw counts.","code":""},{"path":"/articles/initiation-and-preprocessing-xenium.html","id":"data-cleaning","dir":"Articles","previous_headings":"4. Data processing","what":"4.1. Data cleaning","title":"Initiation & Preprocessing Xenium","text":"First might want remove certain genes raw count matrix. wrappers certain steps like removeGenesStress() removeGenesZeroCounts(). Individual genes can always removed removeGenes(). cases observations - case Visium barcoded spots - left counts . case removeObsZeroCounts() removes . none nothing happens.","code":"# before nGenes(object) ## [1] 541  # removes stress genes object <- removeGenesStress(object)  # removes genes that were not detected in any of the observations object <- removeGenesZeroCounts(object)  # afterwards nGenes(object) ## [1] 528 # before nObs(object) ## [1] 161105  # check for and remove observations with zero counts object <- removeObsZeroCounts(object)  # afterwards  nObs(object) ## [1] 160910"},{"path":"/articles/initiation-and-preprocessing-xenium.html","id":"matrix-processing","dir":"Articles","previous_headings":"4. Data processing","what":"4.2 Matrix processing","title":"Initiation & Preprocessing Xenium","text":"SPATA2 object initiated raw count matrix. almost downstream analysis steps recommended use processed matrices. first step usually log-normalization. create normalized matrix use normalizeCounts(). uses Seurat::NormalizeData() background. input options method correspond options function Seurat package. default, normalized matrix named input method, activated thus used default downstream analysis visualization. function normalizeCounts() can called multiple times different inputs method populates list processed matrices respective assay. Furthermore, processed matrices can added addProcessedMatrix() want create SPATA2-extern functions. default matrix used can set activateMatrix(). default, normalizeCounts() activates processed matrix created. , normalize using SCT described Seurat tutorial. processes raw count matrix. Results stored respective assays. default, normalized matrix activated thus used downstream analysis. See ?activateMatrix information. Furthermore, compute metadata cells: n_counts_{modality} molecular modality gene represents number individual transcript counts per cell, whereas n_distinct_{modality} represents number distinct genes identified cell.","code":"# no processed matrices, only raw counts getProcessedMatrixNames(object) ## character(0)  getMatrixNames(object) ## [1] \"counts\"  activeMatrix(object) ## [1] \"counts\"  # normalize raw count data # circumvent error with SCT??? object <- normalizeCounts(object, method = \"LogNormalize\")  # now the object contains normalized data getProcessedMatrixNames(object) ## [1] \"LogNormalize\"  activeMatrix(object) ## [1] \"LogNormalize\" # some more meta features object <- computeMetaFeatures(object)  getMetaDf(object) ## # A tibble: 160,910 × 7 ##    barcodes   sample     sp_outlier tissue_section n_counts_gene n_distinct_gene ##    <chr>      <chr>      <lgl>      <fct>                  <dbl>           <int> ##  1 aaaaficg-1 HumanLung… FALSE      tissue_sectio…            19              15 ##  2 aaabbaka-1 HumanLung… FALSE      tissue_sectio…            53              38 ##  3 aaabbjoo-1 HumanLung… FALSE      tissue_sectio…            29              18 ##  4 aaablchg-1 HumanLung… FALSE      tissue_sectio…            43              34 ##  5 aaacaicl-1 HumanLung… FALSE      tissue_sectio…           135              62 ##  6 aaacfcef-1 HumanLung… FALSE      tissue_sectio…            61              32 ##  7 aaacgpjg-1 HumanLung… FALSE      tissue_sectio…            12               9 ##  8 aaacjhpm-1 HumanLung… FALSE      tissue_sectio…            61              34 ##  9 aaacjlia-1 HumanLung… FALSE      tissue_sectio…            77              42 ## 10 aaadbiaa-1 HumanLung… FALSE      tissue_sectio…            64              31 ## # ℹ 160,900 more rows ## # ℹ 1 more variable: avg_cpm_gene <dbl>  # show overview (compare to overview above) show(object) ## SPATA2 object of size: 160910 x 528 (observations x molecules) ## Sample name: HumanLungCancerXenium  ## Platform: Xenium  ## Contains 1 assay: gene (active)  ## Matrices for assay: gene ##  -counts ##  -LogNormalize (active) ## Meta variables (6): sample, sp_outlier, tissue_section, n_counts_gene, n_distinct_gene, avg_cpm_gene  # left plot plotViolinplot(object, variables = c(\"n_counts_gene\", \"n_distinct_gene\")) # upper plot plotSurface(   object = object,   color_by = \"n_counts_gene\",   limits = c(0, 200),    oob = scales::squish,    pt_clrsp = \"Reds 3\"   ) +    ggpLayerTissueOutline(object)  # lower plot plotSurface(   object = object,   color_by = \"n_distinct_gene\",   limits = c(0, 75),    oob = scales::squish,    pt_clrsp = \"Reds 3\"   ) +    ggpLayerTissueOutline(object)"},{"path":"/articles/initiation-and-preprocessing-xenium.html","id":"spatially-variable-genes","dir":"Articles","previous_headings":"","what":"5. Spatially variable genes","title":"Initiation & Preprocessing Xenium","text":"Next, identify spatially variable genes using SPARK-X.","code":"# run the algorithm object <- runSPARKX(object) ## ## ===== SPARK-X INPUT INFORMATION ====  ## ## number of total samples: 160910  ## ## number of total genes: 528  ## ## Running with single core, may take some time  ## ## Testing With Projection Kernel ## ## Testing With Gaussian Kernel 1 ## ## Testing With Gaussian Kernel 2 ## ## Testing With Gaussian Kernel 3 ## ## Testing With Gaussian Kernel 4 ## ## Testing With Gaussian Kernel 5 ## ## Testing With Cosine Kernel 1 ## ## Testing With Cosine Kernel 2 ## ## Testing With Cosine Kernel 3 ## ## Testing With Cosine Kernel 4 ## ## Testing With Cosine Kernel 5 sparkx_genes <- getSparkxGenes(object, threshold_pval = 0.05)  str(sparkx_genes) ##  chr [1:362] \"ACE2\" \"ACTA2\" \"BASP1\" \"BCL2L11\" \"CAPN8\" \"CD79A\" \"CFTR\" \"CNN1\" ...  # add axes labeling in SI units with customized breaks axes_layer <- ggpLayerAxesSI(object, breaks = list(x = str_c(0:11, \"mm\"), y = str_c(1:3, \"mm\")))  # left plot plotSurface(object, color_by = sparkx_genes[1], pt_clrsp = \"Purple-Blue\") +    axes_layer +   ggpLayerTissueOutline(object) # use outline to plot against white  # right plot (set the color scale limits) plotSurface(object, color_by = sparkx_genes[2], pt_clrsp = \"Greens 3\", limits = c(0, 1.5), oob = scales::squish) +    axes_layer +    ggpLayerTissueOutline(object)"},{"path":"/articles/initiation-and-preprocessing-xenium.html","id":"subset-observations","dir":"Articles","previous_headings":"","what":"6. Subset observations","title":"Initiation & Preprocessing Xenium","text":"examples, provide small example object. , additionally subset dataset just extract top right corner.","code":"# get range of upper right corner crop_range <-    getCoordsRange(object) %>%   purrr::map(.f = ~ c(mean(.x), max(.x)))  # show results crop_range ## $x ## [1]  5493.139 10873.031 ##  ## $y ## [1] 1895.419 3302.554  p_before <-    plotSurface(object, pt_clr = \"red\") +    ggpLayerTissueOutline(object) +    ggpLayerRect(object, xrange = crop_range$x, yrange = crop_range$y)  # crop with a rectangular object_subset <- cropSpataObject(object, xrange = crop_range$x, yrange = crop_range$y)  p_subset <- plotSurface(object_subset, pt_clr = \"red\")  # left plot p_before  # right plot p_subset"},{"path":"/articles/initiation-and-preprocessing-xenium.html","id":"conclusion-and-more-data-sets","dir":"Articles","previous_headings":"","what":"6. Conclusion and more data sets","title":"Initiation & Preprocessing Xenium","text":"’s . object can used downstream analyses dimensional reduction, clustering, spatial annotation screening spatial trajectory screening. Refer tab Tutorials links. Furthermore, can skim curated data base spatial data sets platform Xenium using SPATAData.","code":"# load package library(SPATAData)  # filter for samples from platform VisiumHD sourceDataFrame(platform == \"Xenium\") ## # A tibble: 0 × 0"},{"path":"/articles/molecular-variables.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Molecular Variables","text":"Molecular variables directly linked molecular expression data SPATA2 object, like gene expression gene sets. concept genes gene sets embedded broader framework molecular data since spatial multi-omic studies include gene expression also proteins metabolites. Developed initially Visium platform, focuses spatial gene expression, SPATA2 aims evolve support analysis various molecular data types. Hence, introduce term molecular modalities refer different types molecular data can analyzed within SPATA2 package. SPATA2, concept molecular modalities crucial ensures specific functions analyses applied correctly based type molecular data. can always specifiy modality, package recognizes three primary molecular modalities: Gene expression: Represented modality = 'gene'. modality deals spatial distribution analysis mRNA transcripts. Protein expression: Represented modality = 'protein'. modality focuses spatial distribution analysis protein expression data. Metabolites expression: Represented modality = 'metabolite'. modality concerned spatial distribution analysis metabolite data. modalities essential performing specific functions well dealing molecular signatures - sets molecules (genes proteins) associated specific biological states, processes, conditions. tutorial guides work SPATA2 functions adress concept.","code":"# load required packages library(SPATA2) library(tidyverse)  # load SPATA2 inbuilt example data object_t269 <- loadExampleObject(\"UKF269T\", process = TRUE)  show(object_t269) show(object_t269) ## SPATA2 object of size: 3213 x 15000 (observations x molecules) ## Sample name: UKF269T_diet  ## Platform: VisiumSmall  ## Contains 1 assay: gene (active)  ## Matrices for assay: gene ##  -counts ##  -LogNormalize (active) ## Meta variables (6): sample, sp_outlier, tissue_section, n_counts_gene, n_distinct_gene, avg_cpm_gene ## Spatial Trajectories: horizontal_mid"},{"path":"/articles/molecular-variables.html","id":"molecule-names","dir":"Articles","previous_headings":"","what":"2. Molecule names","title":"Molecular Variables","text":"Whether analyzing transcriptomic, proteomic metabolomic data assays feature counts molecules (mRNA transcripts, proteins metabolites). names molecules stored molecular assays SPATA2 object can extracted character vectors using either getMolecules() argument assay_name specified (defaults active assay, relevant exists one assay object) “wrapper-functions” getGenes(), getProteins() getMetabolites() depending molecular modality assay(s) SPATA2 object. Using getProteins() SPATA2 object contain assay molecular modality protein fail. Since gene expression data stored example object, can stick getGenes() wrapper. Note, can use function extract rownames count matrix respective assay. can also use subset genes molecular signatures (see section molecular signatures information).  concept applies members getMolecules() family functions: getMetabolites() getProteins().","code":"# contains only one assay (molecular modality: gene) getAssayNames(object_t269) ## [1] \"gene\" activeAssay(object_t269) ## [1] \"gene\" # use the wrapper function genes <- getGenes(object_t269)  str(genes) ##  chr [1:15000] \"AL669831.5\" \"FAM87B\" \"FAM41C\" \"AL645608.1\" \"KLHL17\" \"PERM1\" ... # getMolecules() works, too genes <- getMolecules(object_t269, assay_name = \"gene\")  str(genes) ##  chr [1:15000] \"AL669831.5\" \"FAM87B\" \"FAM41C\" \"AL645608.1\" \"KLHL17\" \"PERM1\" ... containsModality(object_t269, modality = \"protein\") ## [1] FALSE tryCatch(   expr = { getProteins(object_t269) },   error = function(error){ message(error$message)}   ) ## error in evaluating the argument 'object' in selecting a method for function 'getCountMatrix': This SPATA2 object does not contain an assay of molecular modality 'protein'. ## using signatures argument # character vector of molecules of specific signatures (simplify defaults to TRUE) synapse_genes <- getGenes(object_t269, signatures = \"CC.GO_SYNAPSE\")  str(synapse_genes) ##  chr [1:744] \"CDH2\" \"GJC1\" \"CDH8\" \"CDH9\" \"CDH10\" \"GPC6\" \"USH1C\" \"CDH11\" ... plotSurfaceComparison(object_t269, color_by = tail(synapse_genes, 9)) # list of gene sets tcr_gs <- c(\"RCTM_TCR_SIGNALING\", \"RCTM_DOWNSTREAM_TCR_SIGNALING\")  # simplify = TRUE (default) merges the output to a character vector of unique names tcr_genes_vec <- getGenes(object_t269, signatures = tcr_gs, simplify = TRUE)  str(tcr_genes_vec) ##  chr [1:101] \"PSMB1\" \"CD4\" \"WAS\" \"PSMA4\" \"LCP2\" \"TAB2\" \"UBE2D1\" \"PAG1\" ... # simplify = FALSE returns a list tcr_genes_lst <- getGenes(object_t269, signatures = tcr_gs, simplify = FALSE)  str(tcr_genes_lst) ## List of 2 ##  $ RCTM_TCR_SIGNALING           : chr [1:58] \"PSMB1\" \"CD4\" \"WAS\" \"PSMA4\" ... ##  $ RCTM_DOWNSTREAM_TCR_SIGNALING: chr [1:43] \"PSMB1\" \"CD4\" \"PSMA4\" \"TAB2\" ... lapply(tcr_genes_lst, head) ## $RCTM_TCR_SIGNALING ## [1] \"PSMB1\" \"CD4\"   \"WAS\"   \"PSMA4\" \"LCP2\"  \"TAB2\"  ##  ## $RCTM_DOWNSTREAM_TCR_SIGNALING ## [1] \"PSMB1\"  \"CD4\"    \"PSMA4\"  \"TAB2\"   \"UBE2D1\" \"PSME1\""},{"path":"/articles/molecular-variables.html","id":"molecular-signatures","dir":"Articles","previous_headings":"","what":"3. Molecular signatures","title":"Molecular Variables","text":"SPATA2, molecular signature represented vector named list, character values molecules signature consists. Included package list named signatures, corresponding slots signatures$gene, signatures$protein, signatures$metabolite. list default signatures stored respective data modality. Depending SPATA2 object initiated, created molecular assays already contain respective signatures signatures slot. scores signatures computed upon extraction upon usage computation visualization using active data matrix respective assay.","code":""},{"path":"/articles/molecular-variables.html","id":"extract-molecular-signature-names","dir":"Articles","previous_headings":"3. Molecular signatures","what":"3.1 Extract molecular signature names","title":"Molecular Variables","text":"obtain names signatures currently stored, use getSignatureNames() ’s wrappers: getGeneSets(), getProteinSets() getMetaboliteSets() depending molecular modality interest. code chunk exemplifies can subset extracted signatures class. SPATA2, signature name consists two parts: class _ biological function instance, gene set HM_HYPOXIA class HM (short Hallmark) contains genes associated increased presence response hypoxic circumstances. class indicates source signature derives separated biological function part first _. Underscores afterwards ignored interpreted part biological function, RCTM_TCR_SIGNALING (class: RCTM; biological function: TCR_SIGNALING).","code":"## extraction # opt 1 all_signatures <- getSignatureNames(object_t269, assay_name = \"gene\")  str(all_signatures) ##  chr [1:11654] \"BC_41BB_PATHWAY\" \"BC_ACE2_PATHWAY\" ... # whether you specify assay_name or not does not make a difference since # the object only contains one assay hallmark_signatures <- getSignatureNames(object_t269, class = \"HM\")  str(hallmark_signatures) ##  chr [1:50] \"HM_ADIPOGENESIS\" \"HM_ALLOGRAFT_REJECTION\" ..."},{"path":"/articles/molecular-variables.html","id":"add-molecular-signatures","dir":"Articles","previous_headings":"3. Molecular signatures","what":"3.2 Add molecular signatures","title":"Molecular Variables","text":"add molecular signature, gene set, SPATA2 object (example, UKF269T object gene expression assay), can use addSignature() modality specific functions like addGeneSet(). class argument defaults ‘UD’ (short user defined), indicating signature added user. example class argument explicitly specified, necessary , since default. can provide different input argument want categorize individually added molecular signatures different classes easier extraction organization.","code":"# example genes of an hypothetical gene signature (gene set) genes <-  c('CYFIP1', 'SLC16A3', 'AKAP5', 'ADCY8', 'CALB2', 'GRIN1', 'NLGN4X', 'NLGN1',    'ITGA3', 'NLGN4Y', 'ELFN1', 'BSN', 'CNTN6', 'PDE4B', 'DGKI', 'LRRTM2', 'LRRTM1',    'SRPX2', 'SHANK1', 'SLC17A7')  # both, opt1 and opt2, have the same effect (addSignature() just allows to specify the # assay of interest, which is fixed to 'gene' for addGeneSet()). # opt1 object_t269 <- addSignature(object_t269, class = \"UD\", name = \"EXCITATORY_SYNAPSE\", molecules = genes)  # opt2 # object <- addGeneSet(object, name = \"EXCITATORY_SYNAPSE\", class = \"HM\", genes = genes)  gs <- \"UD_EXCITATORY_SYNAPSE\"  # extract genes of signature getGenes(object_t269, signatures = gs) ##  [1] \"CYFIP1\"  \"SLC16A3\" \"AKAP5\"   \"ADCY8\"   \"CALB2\"   \"GRIN1\"   \"NLGN4X\"  ##  [8] \"NLGN1\"   \"ITGA3\"   \"NLGN4Y\"  \"ELFN1\"   \"BSN\"     \"CNTN6\"   \"PDE4B\"   ## [15] \"DGKI\"    \"LRRTM2\"  \"LRRTM1\"  \"SRPX2\"   \"SHANK1\"  \"SLC17A7\" # visualize signature expression plotSurface(object_t269, color_by = gs)"},{"path":"/articles/molecular-variables.html","id":"signature-content","dir":"Articles","previous_headings":"3. Molecular signatures","what":"3.3 Signature content","title":"Molecular Variables","text":"Note difference two ways obtain molecule names specific signatures. function getGenes() primarily refers gene names count matrix. extracts gene names subsets based input signatures argument, provided. method useful need work actual genes present count matrix. function getGeneSet() extracts genes gene set directly. particularly important gene set interest contains genes found count matrix removed processing exist count matrix first place. Note, genes_directly contains genes, also includes genes present data set.","code":"# extracts genes for which data exist in the SPATA2 object # that are part of the HM_HYPOXIA gene set genes_from_mtr <- getGenes(object_t269, signature = \"HM_HYPOXIA\")  str(genes_from_mtr) ##  chr [1:121] \"GBE1\" \"ENO2\" \"HK2\" \"SLC2A1\" \"P4HA1\" \"ADM\" \"P4HA2\" \"PFKFB3\" ... # extracts all gene names that make up the HM_HYPOXIA gene set # regardless of whether data (counts) exist genes_directly <- getGeneSet(object_t269, \"HM_HYPOXIA\")  str(genes_directly) ##  chr [1:188] \"PGK1\" \"PDK1\" \"GBE1\" \"PFKL\" \"ALDOA\" \"ENO2\" \"PGM1\" \"NDRG1\" ..."},{"path":"/articles/molecular-variables.html","id":"multiple-assays","dir":"Articles","previous_headings":"","what":"4. Multiple assays","title":"Molecular Variables","text":"example can download SPATA2 object hat created dataset contains gene- protein expression. Note gene names protein names can equal. SPATA2 differentiate must stored differently. created initiateSpataObjectVisium(), protein names forced lower case. allows refer either gene protein conveniently unambiguously.  want extract data matrices, can rely activeAssay() system. Alternatively, can always specify assay interest argument assay_name.","code":"library(SPATAData)  object <- downloadSpataObject(\"HumanTonsilGP\")  proteins <- getProteins(object)  str(proteins) ##  chr [1:34] \"cd163\" \"cr2\" \"pcna\" \"vim\" \"krt5\" \"cd68\" \"ceacam8\" \"ptprc\" ... genes <- getGenes(object)  str(genes) ##  chr [1:18085] \"SAMD11\" \"NOC2L\" \"KLHL17\" \"PLEKHN1\" \"PERM1\" \"HES4\" \"ISG15\" ... # plot left - gene plotSurface(object, color_by = \"cd4\")  # plot right - protein plotSurface(object, color_by = \"CD4\") # currently gene activeAssay(object) ## [1] \"gene\" # gene counts gcount_mtr <- getCountMatrix(object)  str(gcount_mtr) ## Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots ##   ..@ i       : int [1:34215510] 11 12 16 17 19 20 21 23 25 26 ... ##   ..@ p       : int [1:4195] 0 8790 17541 24451 32174 40302 49340 57399 66681 74474 ... ##   ..@ Dim     : int [1:2] 18085 4194 ##   ..@ Dimnames:List of 2 ##   .. ..$ : chr [1:18085] \"SAMD11\" \"NOC2L\" \"KLHL17\" \"PLEKHN1\" ... ##   .. ..$ : chr [1:4194] \"AACACGTGCATCGCAC-1\" \"AACACTTGGCAAGGAA-1\" \"AACAGGAAGAGCATAG-1\" \"AACAGGATTCATAGTT-1\" ... ##   ..@ x       : num [1:34215510] 1 1 1 1 1 4 4 3 3 18 ... ##   ..@ factors : list() # protein counts pcount_mtr <- getCountMatrix(object, assay_name = \"protein\")  str(pcount_mtr) ## Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots ##   ..@ i       : int [1:142550] 0 1 2 3 4 5 6 7 8 9 ... ##   ..@ p       : int [1:4195] 0 34 68 102 136 170 204 238 272 306 ... ##   ..@ Dim     : int [1:2] 34 4194 ##   ..@ Dimnames:List of 2 ##   .. ..$ : chr [1:34] \"cd163\" \"cr2\" \"pcna\" \"vim\" ... ##   .. ..$ : chr [1:4194] \"AACACGTGCATCGCAC-1\" \"AACACTTGGCAAGGAA-1\" \"AACAGGAAGAGCATAG-1\" \"AACAGGATTCATAGTT-1\" ... ##   ..@ x       : num [1:142550] 19675 35856 57685 48611 4606 ... ##   ..@ factors : list()"},{"path":"/articles/molecular-variables.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"5. Conclusion","title":"Molecular Variables","text":"functions presented tutorial, exists general function well wrappers specific modalities. general function always works requires specifying assay interest argument assay_name.","code":""},{"path":"/articles/newslog.html","id":"spata2-v2-0-4---v3-0-0","dir":"Articles","previous_headings":"","what":"SPATA2 v2.0.4 -> v3.0.0","title":"Newslog","text":"publication manuscript Kueckelhaus et al. 2024 delighted release Version 3.0.0 SPATA2. come several changes improvements regarding analysis approach gene expression gradients well S4 object structure, function arguments naming well compatibility platforms beyond Visium.","code":""},{"path":"/articles/newslog.html","id":"s4-architecture","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0","what":"S4 architecture","title":"Newslog","text":"Similar Seurat, SPATA2 centered around S4 object contains data tracks progress preprocessing downstream analysis. version 3.0.0, object architecture significantly revised, introducing new S4 class. previous spata2 class, designed 2019, replaced new SPATA2 class. update includes new renamed slots, spatial multi-omic study components now elegantly divided new S4 classes, inspired partly Seurat’s structure (e.g., creating S4 object raw count matrix MolecularAssay object). Understanding exact architecture SPATA2 objects complex generally unnecessary. However, detailed documentation available interested. class subclasses extensively documented. Use question mark operator like ?SPATA2, ?MolecularAssay, ?SpatialData get details, visit S4-classes section reference page.","code":""},{"path":"/articles/newslog.html","id":"platform-support","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0","what":"Platform support","title":"Newslog","text":"SPATA2 v3.0.0 offers enhanced support platforms like MERFISH, SlideSeq, Xenium, . new S4 structure classes SPATA2 uses provide clearer framework creating individual SPATA2 objects specific spatial data sets. platform, created specialized tutorials initiation suggested processing steps. Note initiateSpataObject_*() functions version 2.0.4 deprecated favor new initiation functions. Please refer respective tutorials via dropdown button: Articles >> Object Initiation & Processing.","code":""},{"path":"/articles/newslog.html","id":"deprecated-functions-renaming-and-new-naming-conventions","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0","what":"Deprecated functions, renaming and new naming conventions","title":"Newslog","text":"“two hard things Computer Science: cache invalidation naming things.” - Phil Carlton improvements made SPATA2 v3.0.0, multiple aspects concepts renamed naming expanded. consequences function naming thus code. deprecated multiple functions, way automatically calls new function background prints warning function just used longer use likely disappear near future. However, multiple changes made might code wrote past work longer SPATA2 v3.0.0. apologize . automatically generated warning messages guide function want use simply exist longer, please raise issue including code SPATA2 v2.0.4 help write code obtain results SPATA2 v3.0.0.","code":"## the term expression matrix has been abandoned in favor of processed matrix # this function throws a warning... getExpressionMatrix(object, mtr_name = \"LogNormalize\")[1:5, 1:5] ## Warning in confuns::give_feedback(msg = msg, fdb.fn = fdb_fn, with.time = ## FALSE): Function `getExpressionMatrix()` is deprecated and will be deleted in ## the near future. Please use `getProcessedMatrix() or getMatrix()` instead. ## 5 x 5 sparse Matrix of class \"dgCMatrix\" ##            AAACAAGTATCTCCCA-1 AAACAATCTACTAGCA-1 AAACACCAATAACTGC-1 ## AL627309.1                  .                  .                  . ## AL627309.3                  .                  .                  . ## AL669831.5                  .                  .                  . ## FAM87B                      .                  .                  . ## LINC00115                   .                  .                  . ##            AAACAGAGCGACTCCT-1 AAACAGCTTTCAGAAG-1 ## AL627309.1                  .                  . ## AL627309.3                  .                  . ## AL669831.5                  .                  . ## FAM87B                      .                  . ## LINC00115                   .                  .  # ... and calls this one right after - your code should still work getProcessedMatrix(object, mtr_name = \"LogNormalize\")[1:5, 1:5] ## 5 x 5 sparse Matrix of class \"dgCMatrix\" ##            AAACAAGTATCTCCCA-1 AAACAATCTACTAGCA-1 AAACACCAATAACTGC-1 ## AL627309.1                  .                  .                  . ## AL627309.3                  .                  .                  . ## AL669831.5                  .                  .                  . ## FAM87B                      .                  .                  . ## LINC00115                   .                  .                  . ##            AAACAGAGCGACTCCT-1 AAACAGCTTTCAGAAG-1 ## AL627309.1                  .                  . ## AL627309.3                  .                  . ## AL669831.5                  .                  . ## FAM87B                      .                  . ## LINC00115                   .                  ."},{"path":"/articles/newslog.html","id":"active-and-inactive","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0 > Deprecated functions, renaming and new naming conventions","what":"Active and inactive","title":"Newslog","text":"new SPATA2 object facilitates handling multiple data modalities. Often, SPATA2 object contains one image (e.g., lowres hires) one data matrix (e.g. raw counts, log normalized counts, scaled). Functions access data must choose one default. Whenever two options, function default declared active activate*() functions. current active state can checked corresponding active*() functions. previous versions, uniform naming convention functions dealing activation. Now, . Consequently, functions like setActive*() getActive*() deprecated.","code":"# names of all registered images getImageNames(object) ## [1] \"lowres\" \"hires\"  # currently active image is \"lowres\" activeImage(object) ## [1] \"lowres\"  # activate different image object <- activateImage(object, img_name = \"hires\") ## 10:11:10 Unloading image lowres. ## 10:11:10 Loading image hires. ## 10:11:11 Active image: 'hires'.  # currently active image has changed to \"hires\" activeImage(object) ## [1] \"hires\""},{"path":"/articles/newslog.html","id":"spatial-annotation-screening-previously-image-annotation-screening","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0 > Deprecated functions, renaming and new naming conventions","what":"Spatial Annotation Screening (previously Image Annotation Screening)","title":"Newslog","text":"concept expanded include screening based annotations highlight image-related histomorphological features also areas high (low) expression numeric features specific clusters. Image annotations now part broader term Spatial Annotations, includes Image Annotations, Numeric Annotations, Group Annotations. type provides high-level functions create necessary spatial reference outlines gradient-based analysis. Consequently, Image Annotation Screening (IAS) renamed Spatial Annotation Screening (SAS). affects every function, changing Ias Sas, binwidth resolution. See new tutorial . Additionally, mathematical approach obtaining gradients changed review process. includes distance spatial outline integrated, allowing integration multiple annotations kind (see Main Figure 4a-b Kueckelhaus et al. 2024). parameter binwidth replaced resolution, input remaining . term binwidth longer fits approach, hence change. detailed description gradients obtained p-values computed, refer methods section supplementary figures manuscript Kueckelhaus et al. 2024. Apart renaming binwidth resolution, Spatial Trajectory Screening largely unaffected changes. methodology calculating gradients based spatial trajectories adjusted accordingly, binwidth resolution change, much altered. Furthermore, overall concept inferring expression gradients related spatial reference features (Spatial Trajectories Spatial Annotations) now termed Spatial Gradient Screening.","code":"## the algorithm # previously (now deprecated) ias_out <- imageAnnotationScreening(object, ids = c(\"first_id\", \"sec_id\"), binwidth = \"100um\", ...)  # now sas_out <- spatialAnnotationScreening(object, ids = c(\"first_id\", \"sec_id\"), resolution = \"100um\", ...)  ## plotting functions # previously (now deprecated) plotIasLineplot(object, ids  = c(\"first_id\", \"second_id\"), variables = \"EGFR\", binwidth = \"100um\")  # now plotSasLineplot(object, ids = c(\"first_id\", \"second_id\"), variables = \"EGFR\", resolution = \"100um\")"},{"path":"/articles/newslog.html","id":"molecular-assays","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0 > Deprecated functions, renaming and new naming conventions","what":"Molecular assays","title":"Newslog","text":"core spatial transcriptomcis data set raw integer matrix mRNA counts rows correspond gene names columns corresponding observation identifiers - SPATA2 terms barcodes. count matrix can processed multiple different ways downstream analysis can follow multiple steps. gene expression paramount importance spatial omic studies, spatial analysis can also focus integrate metabolomics proteomic data. Hence, expanded naming concept molecules allow future integration kinds data, . assay name corresponds data modality assay. SPATA2 knows gene, protein metabolite. Molecular data matrices used stored loose list slot @data. Within new SPATA2 object, molecular data now structured objects class MolecularAssay (partly inspired Seurat Assay-class). Among things objects contain slot called @mtr_counts contains raw count matrix slot called @mtr_proc, named list matrices resulted different processing steps. Hence, SPATA2 differentiates raw count matrix obtained via getCountMatrix() processed matrices obtained via getProcessedMatrix(). previous versions SPATA2, used term expression matrix refer processed gene expression matrices. naming convention abandoned favor raw counts vs. processed. Analysis results directly linked molecular data SPARKX, DEA, GSEA, CNV etc. stored slot @analysis assay. functions extract plot data remain like getSparkxGeneDf(), getDeaResultsDf(), etc.","code":"## assume that you have a SPATA2 object from the Visium platform # and you vertically integrated protein expression data   # works as usual gene_names <- getGenes(object)  # results in the same output  gene_names <- getMolecules(object, assay_name = \"gene\")  # hypothetical data set contains also an assay of spatially resolved protein data protein_names <- getProteins(object)  protein_names <- getMolecules(object, assay_name = \"protein\") ## extraction of raw coutns remains the same apart from the new assay_name argument which defaults # to the name of the active assay as obtained by activeAssay(object) count_mtr <- getCountMatrix(object)  ## extract a normalized matrix # previously (now deprecated) norm_mtr <- getExpressionMatrix(object, mtr_name = \"LogNormalize\") ## Warning in confuns::give_feedback(msg = msg, fdb.fn = fdb_fn, with.time = ## FALSE): Function `getExpressionMatrix()` is deprecated and will be deleted in ## the near future. Please use `getProcessedMatrix() or getMatrix()` instead.  # now norm_mtr <- getProcessedMatrix(object, mtr_name = \"LogNormalize\")"},{"path":"/articles/newslog.html","id":"meta-data-previously-feature-data","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0 > Deprecated functions, renaming and new naming conventions","what":"Meta data (previously feature data)","title":"Newslog","text":"Previously, stored meta variables like clustering quality control variables slot @fdata, short feature data, based idea “features directly related molecular counts.” However, packages like Seurat Squidpy, term feature often refers numeric variables, including gene expression, causing understandable confusion. address , renamed slot. shown documentation new SPATA2 class, slot now called @meta_obs, short metadata SPATA2 object’s observations (barcoded spots, cells, etc.).","code":"# previously (now deprecated) getFeatureDf(object) ## Warning in confuns::give_feedback(msg = msg, fdb.fn = fdb_fn, with.time = ## FALSE): Function `getFeatureDf()` is deprecated and will be deleted in the near ## future. Please use `getMetaDf()` instead. ## # A tibble: 3,517 × 128 ##    barcodes         sample nCount_Spatial nFeature_Spatial percent.mt percent.RB ##    <chr>            <chr>           <dbl>            <int>      <dbl>      <dbl> ##  1 AAACAAGTATCTCCC… T313             4319             2164      2.17        6.54 ##  2 AAACAATCTACTAGC… T313             6005             2796      2.10        8.46 ##  3 AAACACCAATAACTG… T313              349              254      4.18        7.74 ##  4 AAACAGAGCGACTCC… T313            11394             4248      2.85        8.63 ##  5 AAACAGCTTTCAGAA… T313              902              616      1.72        6.33 ##  6 AAACAGGGTCTATAT… T313              175              144      5.49        6.33 ##  7 AAACATGGTGAGAGG… T313             8327             2958      0.870       8.11 ##  8 AAACCCGAACGAAAT… T313             2940             1595      2.21        7.21 ##  9 AAACCGGGTAGGTAC… T313               96               83      1.57       10.2  ## 10 AAACCGTTCGTCCAG… T313              671              394      1.99        8.18 ## # ℹ 3,507 more rows ## # ℹ 122 more variables: Spatial_snn_res.0.8 <fct>, seurat_clusters <fct>, ## #   AC_like <dbl>, AC_like_Prolif <dbl>, MES_like_hypoxia_independent <dbl>, ## #   MES_like_hypoxia_MHC <dbl>, NPC_like_neural <dbl>, NPC_like_OPC <dbl>, ## #   NPC_like_Prolif <dbl>, OPC_like <dbl>, OPC_like_Prolif <dbl>, cDC1 <dbl>, ## #   cDC2 <dbl>, DC1 <dbl>, DC2 <dbl>, DC3 <dbl>, Mast <dbl>, ## #   Mono_anti_infl <dbl>, Mono_hypoxia <dbl>, Mono_naive <dbl>, pDC <dbl>, …  # now  getMetaDf(object) ## # A tibble: 3,517 × 128 ##    barcodes         sample nCount_Spatial nFeature_Spatial percent.mt percent.RB ##    <chr>            <chr>           <dbl>            <int>      <dbl>      <dbl> ##  1 AAACAAGTATCTCCC… T313             4319             2164      2.17        6.54 ##  2 AAACAATCTACTAGC… T313             6005             2796      2.10        8.46 ##  3 AAACACCAATAACTG… T313              349              254      4.18        7.74 ##  4 AAACAGAGCGACTCC… T313            11394             4248      2.85        8.63 ##  5 AAACAGCTTTCAGAA… T313              902              616      1.72        6.33 ##  6 AAACAGGGTCTATAT… T313              175              144      5.49        6.33 ##  7 AAACATGGTGAGAGG… T313             8327             2958      0.870       8.11 ##  8 AAACCCGAACGAAAT… T313             2940             1595      2.21        7.21 ##  9 AAACCGGGTAGGTAC… T313               96               83      1.57       10.2  ## 10 AAACCGTTCGTCCAG… T313              671              394      1.99        8.18 ## # ℹ 3,507 more rows ## # ℹ 122 more variables: Spatial_snn_res.0.8 <fct>, seurat_clusters <fct>, ## #   AC_like <dbl>, AC_like_Prolif <dbl>, MES_like_hypoxia_independent <dbl>, ## #   MES_like_hypoxia_MHC <dbl>, NPC_like_neural <dbl>, NPC_like_OPC <dbl>, ## #   NPC_like_Prolif <dbl>, OPC_like <dbl>, OPC_like_Prolif <dbl>, cDC1 <dbl>, ## #   cDC2 <dbl>, DC1 <dbl>, DC2 <dbl>, DC3 <dbl>, Mast <dbl>, ## #   Mono_anti_infl <dbl>, Mono_hypoxia <dbl>, Mono_naive <dbl>, pDC <dbl>, …"},{"path":"/articles/newslog.html","id":"management-of-spatial-data","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0","what":"Management of spatial data","title":"Newslog","text":"SPATA2 focuses spatial data integrating multiple spatial analysis approaches. Consequently, spatial data now slot @spatial, previously used random miscellaneous spatial data, now clearly structured S4 object called SpatialData. details class, call ?SpatialData. new architecture improves management spatial aspects alignment challenges. important aspects:","code":""},{"path":"/articles/newslog.html","id":"image","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0 > Management of spatial data","what":"Image","title":"Newslog","text":"SPATA2 object allows storage multiple images registering individually using registerImage(). registered image creates container object class HistoImage, storing image file directory, along additional information data image processing steps (e.g., tissue outline, alignment). Working multiple images, alongside coordinates data points spatial reference features (SpatialAnnotation, SpatialTrajectory), requires careful alignment. Alignment involves matching image resolution adjusting images angle, horizontal vertical translation, stretching. crucial images neighboring tissue sections similar perfectly overlapping.","code":""},{"path":"/articles/newslog.html","id":"the-reference-image","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0 > Management of spatial data > Image","what":"The Reference Image","title":"Newslog","text":"facilitate alignment integration multiple images, coordinates, spatial reference features, reference image designated. default, first image loaded SPATA2 object. SPATA2 assumes coordinates reference image align perfectly terms vertical horizontal justification (scaling may still needed). Aligning additional images reference image ensures alignment data point coordinates. Additionally, reference image allows automatic transfer scale factors newly registered images.","code":""},{"path":"/articles/newslog.html","id":"the-active-image","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0 > Management of spatial data > Image","what":"The Active Image","title":"Newslog","text":"active image default image used functions requiring image input, createImageAnnotations() plotSpatialAnnotations(), extracting coordinates. extraction, coordinates scaled resolution currently active image. reference image can also serve active image.","code":""},{"path":"/articles/newslog.html","id":"scaling-coordinates","dir":"Articles","previous_headings":"SPATA2 v2.0.4 -> v3.0.0 > Management of spatial data","what":"Scaling coordinates","title":"Newslog","text":"SPATA2 objects allow simultaneous storage multiple images, may differ resolution, requiring different scale factors align spatial data coordinates accurately images. version 3.0.0, coordinate variables differentiated x_orig, y_orig (original coordinates) x, y (scaled coordinates). rationale: Whenever spatial data (coordinates barcode spots, coordinates cells, tissue outlines, spatial annotations, spatial trajectories, etc.) stored, recorded x_orig y_orig. Even currently working within resolution different image coordinates scaled back “original resolution” reference image. Upon extraction, scaling process applied spatial data, getSpatAnnOutlineDf() getTissueOutlineDf(). process ensures coordinates appropriately scaled resolution active image. instance, scaling occurs background extracting plotting barcoded spots Visium data set context hypothetical image, lowres. First, original data.frame obtained. ` Second, image scale factor image lwores extracted. Third, variables transformed (scaled) x y. object contain image, MERFISH Xenium, @images slot SpatialData object empty. Without images, need alignment image scale factors. case, x y variables data frame equal x_orig y_orig. might sound redundant unnecessary. However, accommodate potential future options aligning images adjacent tissue slides datasets without original images, *_orig coordinate structure maintained, even images present initial object creation.","code":"# `as_is` = TRUE, skips any processing steps coords_df <- getCoordsDf(object, as_is = TRUE)[1:10, ]  coords_df ## # A tibble: 10 × 7 ##    barcodes           x_orig y_orig   row   col section          section_dbscan ##    <chr>               <dbl>  <dbl> <int> <int> <fct>            <chr>          ##  1 TAACCGTCCAGTTCAT-1   4002   2342     1    15 tissue_section_1 1              ##  2 CGCGTGCTATCAACGA-1   5189   2340     1    27 tissue_section_1 1              ##  3 TGGTGTGACAGACGAT-1   2716   2516     2     2 tissue_section_1 1              ##  4 ATCTATCGATGATCAA-1   2815   2688     3     3 tissue_section_1 1              ##  5 CGGTAACAAGATACAT-1   2914   2516     2     4 tissue_section_1 1              ##  6 TCGCCGGAGAGTCTTA-1   3013   2688     3     5 tissue_section_1 1              ##  7 GGAGGAGTGTGTTTAT-1   3112   2515     2     6 tissue_section_1 1              ##  8 TTAGGTGTGACTGGTC-1   3211   2687     3     7 tissue_section_1 1              ##  9 CAGGGCTAACGAAACC-1   3310   2515     2     8 tissue_section_1 1              ## 10 CCCGTGGGTTAATTGA-1   3409   2687     3     9 tissue_section_1 1 # extract an image scale factor for the image named \"lowres\" isf <- getScaleFactor(object, img_name = \"lowres\", fct_name = \"image\")  isf ## [1] 0.03460208 # create variables x and y by applying the scale factor to the original coordinates coords_df$x <- coords_df$x_orig * isf coords_df$y <- coords_df$y_orig * isf  coords_df[,c(\"barcodes\", \"x_orig\", \"y_orig\", \"x\", \"y\")] ## # A tibble: 10 × 5 ##    barcodes           x_orig y_orig     x     y ##    <chr>               <dbl>  <dbl> <dbl> <dbl> ##  1 TAACCGTCCAGTTCAT-1   4002   2342 138.   81.0 ##  2 CGCGTGCTATCAACGA-1   5189   2340 180.   81.0 ##  3 TGGTGTGACAGACGAT-1   2716   2516  94.0  87.1 ##  4 ATCTATCGATGATCAA-1   2815   2688  97.4  93.0 ##  5 CGGTAACAAGATACAT-1   2914   2516 101.   87.1 ##  6 TCGCCGGAGAGTCTTA-1   3013   2688 104.   93.0 ##  7 GGAGGAGTGTGTTTAT-1   3112   2515 108.   87.0 ##  8 TTAGGTGTGACTGGTC-1   3211   2687 111.   93.0 ##  9 CAGGGCTAACGAAACC-1   3310   2515 115.   87.0 ## 10 CCCGTGGGTTAATTGA-1   3409   2687 118.   93.0"},{"path":"/articles/plotting-surface.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Surface Plotting","text":"Surface plotting allows visualize barcode-spot’s information spatial dimension. Behind scenes scatterplots whereby x-aesthetic y-aesthetic plot mapped respective coordinate-variable. SPATA2 offers variety functions options visualize expression genes variables surface tissue sample.","code":"# load required packages library(SPATA2) library(tidyverse)  # load object and process for this tutorial object_t313 <-    loadExampleObject(\"UKF313T\", process = TRUE, meta = TRUE) %>%    spatialAnnotationToGrouping(     object = .,     ids = c(\"necrotic_area\", \"necrotic_edge\", \"necrotic_edge2\"),     grouping_name = \"histology\",      inside = \"necrotic\",     outside = \"vivid\"     )  object_t313 <- setDefault(object_t313, display_image = FALSE)  plotImage(object_t313)"},{"path":"/articles/plotting-surface.html","id":"basic-surface-plots-one-by-one","dir":"Articles","previous_headings":"","what":"2. Basic surface plots one by one","title":"Surface Plotting","text":"important function visualize gene expression top slide plotSurface(). comes variety options plotting , continuous categorical data.","code":""},{"path":"/articles/plotting-surface.html","id":"categorical-data","dir":"Articles","previous_headings":"2. Basic surface plots one by one","what":"2.1 Categorical data","title":"Surface Plotting","text":"Categorical data includes usually grouping spots via clustering spatial manual annotation.  Using pt_clrp can adjust color palette used display groups. following predefined within SPATA2 can used referring name. Inspect via showColorPalettes(). adjust single colors groups use clrp_adjust argument.  can use ggpLayerGroupOutline() function highlight spatial extent groups grouping variables. Note, ggpLayerGroupOutline() outlines observations one group. Use ggpLayerSpatAnnOutline() outline spatial annotations.","code":"plotSurface(   object = object_t313,    color_by = \"bayes_space\",    pt_clrp = \"uc\" )  plotSurface(   object = object_t313,    color_by = \"histology\",    pt_clrp = \"npg\" ) plotSurface(   object = object_t313,    color_by = \"bayes_space\",    pt_clrp = \"jama\",    clrp_adjust = c(\"B5\" = \"black\") # for single adjustments )  plotSurface(   object = object_t313,    color_by = \"histology\",    pt_clrp = \"npg\",    clrp_adjust = c(\"necrotic\" = \"black\", \"vivid\" = \"forestgreen\") # ... or for multiple/all ) # creates ggproto objects that can be added via `+` necrosis_outline <-    ggpLayerGroupOutline(     object = object_t313,      grouping = \"histology\",     group_subset = \"necrotic\",      line_size = 1.5   )   cluster_outline <-    ggpLayerGroupOutline(     object = object_t313,      grouping = \"bayes_space\",     group_subset = c(\"B1\", \"B6\"),      line_size = 1.5   )   # plot with additional layers plotSurface(   object = object_t313,    color_by = \"bayes_space\",    pt_clrp = \"uc\" ) +    cluster_outline +    labs(subtitle = \"Cluster Outline\")   plotSurface(   object = object_t313,    color_by = \"bayes_space\",    pt_clrp = \"uc\" ) +    necrosis_outline +    labs(subtitle = \"Necrosis Outline\")"},{"path":"/articles/plotting-surface.html","id":"continuous-data-on-the-surface","dir":"Articles","previous_headings":"2. Basic surface plots one by one","what":"2.2 Continuous data on the surface","title":"Surface Plotting","text":"Continuous data, gene expression, gene set expression, RNA-count etc. Albeit viridis spectra commonly used might want try different ones. color spectra implemented SPATA2 can obtained via validColorSpectra() inspected via showColorSpectra().","code":"plotSurface(   object = object_t313,   color_by = \"HM_HYPOXIA\",    pt_clrsp = \"inferno\"  )    plotSurface(   object = object_t313,   color_by = \"HM_HYPOXIA\",   alpha_by = \"HM_HYPOXIA\", # use alpha, too    pt_clrsp = \"inferno\",    display_image = TRUE )"},{"path":"/articles/plotting-surface.html","id":"variable-transformation","dir":"Articles","previous_headings":"2. Basic surface plots one by one > 2.2 Continuous data on the surface","what":"2.2.1 Variable transformation","title":"Surface Plotting","text":"plot look insightful due distribution plotted variable. argument transform_with allows perform mathematical transformation plotting needed. n_counts_gene normally distributed might want transform better visualize important information.","code":"plotSurface(   object = object_t313,    color_by = \"n_counts_gene\",    pt_clrsp = \"plasma\"  )   plotDensityplot(object = object_t313, variables = \"n_counts_gene\") plotSurface(   object = object_t313,    color_by = \"n_counts_gene\",    pt_clrsp = \"plasma\",    transform_with = log10 # provide the function ) +    labs(color = \"Counts (log10)\", subtitle = \"No Outline\")  plotSurface(   object = object_t313,    color_by = \"n_counts_gene\",    pt_clrsp = \"plasma\",    transform_with = log10 # or a named list with a function to apply ) +    labs(color = \"Counts (log10)\", subtitle = \"Necrosis Outline\") +   necrosis_outline"},{"path":"/articles/plotting-surface.html","id":"tissue-outline","dir":"Articles","previous_headings":"2. Basic surface plots one by one > 2.2 Continuous data on the surface","what":"2.2.2 Tissue outline","title":"Surface Plotting","text":"Color spectra plot white require outline tissue. Use ggpLayerTissueOutline() matter.","code":"# obtain computed tissue outline layer to plot against white  tissue_outline <-    ggpLayerTissueOutline(object = object_t313, line_color = \"grey\")  plotSurface(   object = object_t313,    color_by = \"VEGFA\",    pt_clrsp = \"Greens 3\" ) + tissue_outline  plotSurface(   object = object_t313,   color_by = \"VEGFA\",   pt_clrsp = \"Greens 3\",    outline = TRUE # black with black/white points in the background )"},{"path":"/articles/plotting-surface.html","id":"spatial-smoothing","dir":"Articles","previous_headings":"2. Basic surface plots one by one > 2.2 Continuous data on the surface","what":"2.2.3 Spatial smoothing","title":"Surface Plotting","text":"Smoothing continuous variables possible, . Use smooth smooth_span matter.","code":"plotSurface(   object = object_t313,    color_by = \"HM_HYPOXIA\",    smooth = FALSE, # the default   pt_clrsp = \"Greens 3\",    outline = TRUE )   plotSurface(   object = object_t313,    color_by = \"HM_HYPOXIA\",    pt_clrsp = \"Greens 3\",   smooth = TRUE,    smooth_span = 0.2,    outline = T )"},{"path":"/articles/plotting-surface.html","id":"surface-plots-in-comparison","dir":"Articles","previous_headings":"","what":"3. Surface plots in comparison","title":"Surface Plotting","text":"order quickly compare spatial distribution set variables kind use plotSurfaceComparison().","code":"# compare gene expression on the surface plotSurfaceComparison(   object = object_t313,    color_by = c(\"CSTB\", \"HM_HYPOXIA\", \"MYL6\", \"CCL2\"),    pt_clrsp = \"Greens 3\",    display_image = TRUE,    #smooth = TRUE,    alpha_by = TRUE )"},{"path":"/articles/spata-data.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"SPATAData","text":"package SPATAData gives access data base spatial transcriptomic samples. Furthermore, provides easy access data sets already published. continuously updating collection make sure check package updates regular basis. Please note many data sets owned us! Make sure use correct citation download use analysis. See section 4. Citation. , MILOlab, workgroup focused neurooncology. database predominantly composed human samples human cerebrum (panel ). Nonetheless, also curated multiple objects various organs distinct histological classifications (panel b). Utilize source data.frame described obtain overview filter samples may relevant research. Note differentiation organ Brain mice tissue donors Cerebrum human tissue donors. distinction important , case Visium datasets, mouse samples usually encompass entire intracranial central nervous system (commonly referred Brain). Due size, human brain samples derived specific organs (column: organ, values Cerebrum, Midbrain, Cerebellum) specific locations (column: organ_part, values frontal lobe, temporal lobe, corpus callosum). number platforms (panel c) currently dominated VisiumSmall aim expand collection data sets future include everything.","code":"# install SPATAData with: devtools::install_github(repo = \"theMILOlab/SPATAData\")  # and if you have not already:   devtools::install_github(\"kueckelj/confuns\")"},{"path":"/articles/spata-data.html","id":"the-source-data-frame","dir":"Articles","previous_headings":"","what":"2. The source data.frame","title":"SPATAData","text":"last version SPATAData used interactive interface data samples viewed downloaded mouse click. interface currently available (, hopefully, months come.) Till , can make use source data.frame directly combination dplyr logic.","code":""},{"path":"/articles/spata-data.html","id":"structure","dir":"Articles","previous_headings":"","what":"2.1 Structure","title":"SPATAData","text":"source data.frame SPATAData, obtained sourceDataFrame(), contains web links well meta data multiple spatial data sets published far. Currently counts total 163 samples across 17 organs 19 histological classifications. source data.frame every row corresponds data set. Hence, can use dplyr filter data sets fit interest filtering specific characteristics. following variables provide meta data data set. sample_name: unique identifier sample refer . comment: Additional comments sample. donor_id: Unique identifier donor (useful identify matching samples). donor_species: species donor (currently Homo sapiens Mus musculus). grade: case cancer samples grade sample. grade_sub: Sub-grade sample. histo_class: Character. histological classification, particularly important pathological samples. histo_class_sub: Character. Sub-classification histological class. institution: Institution sample collected workgroup belongs. lm_source: Date-time. Last instance sample modified. organ: organ sample taken. organ_part: Specific part organ sample taken. E.g. frontal temporal lobe case samples central nervous system. pathology: Loose description pathological type sample. NA tissue healthy. platform: platform used experiment (VisiumSmall, VisiumLarge, MERFISH, …). pub_citation: proper citation publication related sample. pub_doi: DOI publication related sample. pub_journal: journal related publication published. pub_year: Year publication. sex: Sex donor. side: Side organ sample taken. tags: Additional tags related sample providing miscellaneous information. tissue_age: Age tissue years - age donor extraction. web_link: weblink download SPATA2 object. workgroup: Workgroup team responsible sample. Furthermore, variables describe sample data set quality control results. mean_counts: Mean molecular counts per observation. median_counts: Median molecular counts per observation. modality_gene: Indicates data modalities object include gene expression. modality_metabolite: Indicates data modalities object include metabolites. modality_protein: Indicates data modality object include protein expressoin. n_obs: number observations. n_tissue_sections: number tissue sections default set (can overriden)! obs_unit: observational unit platform (cells, spots, beads, …).","code":""},{"path":"/articles/spata-data.html","id":"usage","dir":"Articles","previous_headings":"","what":"2.2 Usage","title":"SPATAData","text":"can use unique() non numeric variable obtain groups filter object. filter source data.frame takes logical tests represent idea dataset need. instance, want glioblastoma samples frontal temporal lobe code look like : want samples specific publication: number conditions unlimited. Make familiar variables source data.frame well dplyr::filter() logic. can even process data.frame filter specific queries. E.g. want patient wise matching samples.","code":"# load required packages library(SPATA2) library(SPATAData) library(dplyr) library(stringr)  #assign the data.frame source_df <- sourceDataFrame()  # get unique donor species types unique(source_df$donor_species) ## [1] \"Homo sapiens\" \"Mus musculus\" # get the different organs for which data exists unique(source_df$organ) ##  [1] \"Breast\"        \"Cerebrum\"      \"Tonsil\"        \"Lung\"          ##  [5] \"Pancreas\"      \"Colon\"         \"Kidney\"        \"Ovary\"         ##  [9] \"Prostate\"      \"Brain\"         \"Heart\"         \"Thyroid Gland\" ## [13] \"Brainstem\"     \"Cerebellum\"    \"Lymph Node\"    \"Spinal Cord\"   ## [17] \"Rectum\" # get additional specifications of anatomical location unique(source_df$organ_part) ##  [1] NA                \"frontal\"         \"parietal\"        \"frontotemporal\"  ##  [5] \"occipital\"       \"temporal\"        \"prefrontal\"      \"hemisphere\"      ##  [9] \"thalamus\"        \"corpus_callosum\" \"Ascending\"       \"Cecum\"           ## [13] \"Sigmoid\" # get the different histo subclasses for which data exists unique(source_df$histo_class) ##  [1] NA                                           ##  [2] \"Glioblastoma\"                               ##  [3] \"Oligodendroglioma\"                          ##  [4] \"Astrocytoma\"                                ##  [5] \"Cardiac Muscle\"                             ##  [6] \"Healthy tissue\"                             ##  [7] \"Graves disease\"                             ##  [8] \"Hashimoto's thyroiditis and thyroid nodule\" ##  [9] \"Hashimoto's thyroiditis\"                    ## [10] \"Cortex\"                                     ## [11] \"Giant cell glioblastoma\"                    ## [12] \"Gliosarcoma\"                                ## [13] \"Astrocytoma IDH mutated\"                    ## [14] \"Ganglioglioma\"                              ## [15] \"Diffuse midline glioma, H3K27M-mutant\"      ## [16] \"Lymph Node\"                                 ## [17] \"Spinal Cord\"                                ## [18] \"Kidney\"                                     ## [19] \"Adenocarcinoma\" # filter for frontal and temporal glioblastoma sourceDataFrame(histo_class == \"Glioblastoma\" & organ_part %in% c(\"frontal\", \"temporal\")) ## # A tibble: 24 × 31 ##    sample_name donor_id donor_species grade histo_class  institution             ##    <chr>       <chr>    <chr>         <chr> <chr>        <chr>                   ##  1 MGH258      MGH258   Homo sapiens  IV    Glioblastoma Massachusetts General … ##  2 ZH1019_inf  ZH1007   Homo sapiens  IV    Glioblastoma University Hospital Zu… ##  3 ZH1019_T1   ZH1007   Homo sapiens  IV    Glioblastoma University Hospital Zu… ##  4 ZH881_inf   ZH881    Homo sapiens  IV    Glioblastoma University Hospital Zu… ##  5 ZH881_T1    ZH881    Homo sapiens  IV    Glioblastoma University Hospital Zu… ##  6 ZH916_bulk  ZH916    Homo sapiens  IV    Glioblastoma University Hospital Zu… ##  7 ZH916_inf   ZH916    Homo sapiens  IV    Glioblastoma University Hospital Zu… ##  8 ZH916_T1    ZH916    Homo sapiens  IV    Glioblastoma University Hospital Zu… ##  9 UKF242T     UKF242   Homo sapiens  IV    Glioblastoma University Clinic Frei… ## 10 UKF243T     UKF243   Homo sapiens  IV    Glioblastoma University Clinic Frei… ## # ℹ 14 more rows ## # ℹ 25 more variables: lm_source <dttm>, organ <chr>, organ_part <chr>, ## #   organ_side <chr>, pathology <chr>, platform <chr>, pub_citation <chr>, ## #   pub_doi <chr>, pub_journal <chr>, pub_year <dbl>, sex <chr>, source <chr>, ## #   tags <chr>, tissue_age <dbl>, web_link <chr>, workgroup <chr>, ## #   mean_counts <dbl>, median_counts <dbl>, modality_gene <lgl>, ## #   modality_metabolite <lgl>, modality_protein <lgl>, n_obs <int>, … # look for publications and journals with string subsetting sourceDataFrame(str_detect(pub_citation, pattern = \"^Kuppe\")) ## # A tibble: 27 × 27 ##    sample_name donor_id donor_species histo_class    histo_class_sub institution ##    <chr>       <chr>    <chr>         <chr>          <chr>           <chr>       ##  1 10X001      P1       Homo sapiens  Cardiac Muscle fibrotic_zone   University… ##  2 10X0017     P3       Homo sapiens  Cardiac Muscle ischaemic_zone  University… ##  3 10X0018     P2       Homo sapiens  Cardiac Muscle border_zone     University… ##  4 10X0020     P3       Homo sapiens  Cardiac Muscle remote_zone     University… ##  5 10X0025     P2       Homo sapiens  Cardiac Muscle ischaemic_zone  University… ##  6 10X0026     P3       Homo sapiens  Cardiac Muscle border_zone     University… ##  7 10X0027     P5       Homo sapiens  Cardiac Muscle fibrotic_zone   University… ##  8 10X009      P4       Homo sapiens  Cardiac Muscle control         University… ##  9 ACH0010     P13      Homo sapiens  Cardiac Muscle control         University… ## 10 ACH0011     P15      Homo sapiens  Cardiac Muscle border_zone     University… ## # ℹ 17 more rows ## # ℹ 21 more variables: lm_source <dttm>, organ <chr>, pathology <chr>, ## #   platform <chr>, pub_citation <chr>, pub_doi <chr>, pub_journal <chr>, ## #   pub_year <dbl>, source <chr>, tags <chr>, web_link <chr>, workgroup <chr>, ## #   mean_counts <dbl>, median_counts <dbl>, modality_gene <lgl>, ## #   modality_metabolite <lgl>, modality_protein <lgl>, n_obs <int>, ## #   n_tissue_sections <int>, obs_unit <chr>, obj_size <lbstr_by> # look for several samples from one single patient sourceDataFrame(!is.na(donor_id) & organ == \"Cerebrum\") %>%    group_by(donor_id) %>% # count the Cerebrum samples by donor   mutate(ns_by_donor = n()) %>%    filter(ns_by_donor > 1) %>% # keep only those samples with n > 1   arrange(donor_id) ## # A tibble: 30 × 32 ## # Groups:   donor_id [12] ##    sample_name donor_id donor_species grade histo_class  institution             ##    <chr>       <chr>    <chr>         <chr> <chr>        <chr>                   ##  1 UKF242C     UKF242   Homo sapiens  NA    Cortex       University Clinic Frei… ##  2 UKF242T     UKF242   Homo sapiens  IV    Glioblastoma University Clinic Frei… ##  3 UKF248C     UKF248   Homo sapiens  NA    Cortex       University Clinic Frei… ##  4 UKF248T     UKF248   Homo sapiens  IV    Glioblastoma University Clinic Frei… ##  5 UKF256C     UKF256   Homo sapiens  NA    Cortex       University Clinic Frei… ##  6 UKF256TC    UKF256   Homo sapiens  IV    Cortex       University Clinic Frei… ##  7 UKF256TI    UKF256   Homo sapiens  IV    Glioblastoma University Clinic Frei… ##  8 UKF259C     UKF259   Homo sapiens  NA    Cortex       University Clinic Frei… ##  9 UKF259T     UKF259   Homo sapiens  IV    Glioblastoma University Clinic Frei… ## 10 UKF260T     UKF260   Homo sapiens  IV    Glioblastoma University Clinic Frei… ## # ℹ 20 more rows ## # ℹ 26 more variables: lm_source <dttm>, organ <chr>, organ_part <chr>, ## #   organ_side <chr>, pathology <chr>, platform <chr>, pub_citation <chr>, ## #   pub_doi <chr>, pub_journal <chr>, pub_year <dbl>, sex <chr>, source <chr>, ## #   tags <chr>, tissue_age <dbl>, web_link <chr>, workgroup <chr>, ## #   mean_counts <dbl>, median_counts <dbl>, modality_gene <lgl>, ## #   modality_metabolite <lgl>, modality_protein <lgl>, n_obs <int>, …"},{"path":"/articles/spata-data.html","id":"downloads","dir":"Articles","previous_headings":"","what":"3. Downloads","title":"SPATAData","text":"Whether get filtering source data.frame know name, download SPATA2 objects sample names required. two functions download SPATA2 object. downloaded objects completely unprocessed. Hence, plots see derive raw counts. Refer vignettes object creation processing find pipeline see fit data samples. downloadSpataObject(): download single objects. can saved disc automatically function particularly equipped quick downloads assignment variable R session. downloadSpataObjects(): Takes character vector sample names, downloads stores together specified directory.","code":""},{"path":"/articles/spata-data.html","id":"download-and-assign","dir":"Articles","previous_headings":"","what":"3.1 Download and assign","title":"SPATAData","text":"code chunk downloads single objects sample name. assigns result variable global environment can immediately start analysis visualization.","code":"# download objects by sample name and assign them to environment variables object_heart <- downloadSpataObject(sample_name = \"ACH0010\") object_gbm <- downloadSpataObject(sample_name = \"UKF242T\")  # left plot plotSurface(object_heart, color_by = \"HM_HYPOXIA\")  # right plot plotSurface(object_gbm, color_by = \"GFAP\", alpha_by = \"GFAP\")"},{"path":"/articles/spata-data.html","id":"download-and-saving-on-disk","dir":"Articles","previous_headings":"","what":"3.2 Download and saving on disk","title":"SPATAData","text":"code chunk uses filtering downloadSpataObjects() download complete set single folder.","code":"# filter source data.frame healthy_human_cortex_samples <-    sourceDataFrame(organ == \"Cerebrum\" & histo_class == \"Cortex\") %>%    pull(sample_name)  # show results healthy_human_cortex_samples  # create this directory or adjust it to your liking folder <- \"spata_objects/healthy_cortex\"  dir.create(folder, recursive = TRUE)  # download samples downloadSpataObjects(   sample_names = healthy_human_cortex_samples,    folder = folder   ) ##  [1] \"151507\"   \"151508\"   \"151509\"   \"151510\"   \"151669\"   \"151670\"   ##  [7] \"151671\"   \"151672\"   \"151673\"   \"151674\"   \"151675\"   \"151676\"   ## [13] \"UKF241C\"  \"UKF242C\"  \"UKF248C\"  \"UKF256C\"  \"UKF256TC\" \"UKF259C\"  ## [19] \"UKF265C\"  \"UKF313C\"  \"UKF334C\"  \"GBM5_2\""},{"path":"/articles/spata-data.html","id":"citation","dir":"Articles","previous_headings":"","what":"4. Citation","title":"SPATAData","text":"mentioned introduction, many samples provided owned us, MILOlab. collected samples openly accessible sources curated offer example data sets use SPATA2. use data sets, please ensure cite corresponding papers correctly. download SPATA2 object using SPATAData, citation information stored object’s metadata, specifically @meta_sample slot alongside meta-information find source data frame. can easily obtain citation instructions via getCitation() function.","code":"# cite Kuppe et al. 2022 getCitation(object_heart) ## Citation: Kuppe, C., Ramirez Flores, R.O., Li, Z. et al. Spatial multi-omic map of human myocardial infarction. Nature 608, 766–777 (2022). https://doi.org/10.1038/s41586-022-05060-x ## Source: Kuppe et al 2022 # cite Ravi et al. 2022 getCitation(object_gbm) ## Citation: VM Ravi, P Will, J Kueckelhaus, et al. Spatially resolved multi-omics deciphers bidirectional tumor-host interdependence in glioblastoma. Cancer Cell. 2022 Jun 13;40(6):639-655.e13. doi: 10.1016/j.ccell.2022.05.009. PMID: 35700707. ## Source: Ravi et al 2022"},{"path":"/articles/spata-data.html","id":"sample-meta-data","dir":"Articles","previous_headings":"","what":"5. Sample meta data","title":"SPATAData","text":"Meta data sample stored slot @@meta_sample. list can extended flexibly addSampleMetaData() recommend, however, stick naming suggested source data.frame.","code":"getSampleMetaData(object_heart) ## $sample_name ## [1] \"ACH0010\" ##  ## $donor_id ## [1] \"P13\" ##  ## $donor_species ## [1] \"Homo sapiens\" ##  ## $histo_class ## [1] \"Cardiac Muscle\" ##  ## $histo_class_sub ##      CTRL  ## \"control\"  ##  ## $institution ## [1] \"University Clinic Aachen\" ##  ## $lm_source ## [1] \"2024-08-04 22:22:33 CEST\" ##  ## $organ ## [1] \"Heart\" ##  ## $pathology ## [1] \"myocardial_infarction\" ##  ## $platform ## [1] \"VisiumSmall\" ##  ## $pub_citation ## [1] \"Kuppe, C., Ramirez Flores, R.O., Li, Z. et al. Spatial multi-omic map of human myocardial infarction. Nature 608, 766–777 (2022). https://doi.org/10.1038/s41586-022-05060-x\" ##  ## $pub_doi ## [1] \"doi.org/10.1038/s41586-022-05060-x\" ##  ## $pub_journal ## [1] \"Nature\" ##  ## $pub_year ## [1] 2022 ##  ## $tags ## [1] \"CTRL\" ##  ## $workgroup ## [1] \"KuppeLab\" ##  ## $patient_group ## [1] \"group_2\" ##  ## $patient_region_id ## [1] \"GT/IZ_P13\""},{"path":"/articles/spata-data.html","id":"source-code-sharing","dir":"Articles","previous_headings":"","what":"6. Source code & Sharing","title":"SPATAData","text":"SPATA2 objects curated manually us without processing. Data sets derive publications acessessed suggested respective data availability statement. SPATA2 objects created batches can tracked script /scripts/populate_spata2v3_objects.R main repository SPATAData. want make data set easily accessible users via SPATAData please contact jan.kueckelhaus@uk-erlangen.de.","code":""},{"path":"/articles/spatial-annotation-screening.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Spatial Annotation Screening","text":"vignette exemplifies use Spatial Annotation Screening SPATA2. builds spatial annotations created vignette creating spatial annotations.  Spatial Annotation Screening (SAS) pursues hypothesis specific genes - numeric features matter - display non-random expression patterns relation spatial reference features, spatial annotations. SAS utilizes reference features incorporate integration potential biological forces identification spatially variable genes, presence necrosis within tumor. allows supervised, hypothesis-driven screening spatial patterns, , unlike differential expression analysis (DEA), acknowledges continuous nature gene expression avoids limitations group-based testing.","code":"library(SPATA2) library(tidyverse)  # load SPATA2 inbuilt data and process object_t313 <- loadExampleObject(\"UKF313T\", process = TRUE, meta = TRUE)  necrotic_ids <- c(\"necrotic_area\", \"necrotic_edge\", \"necrotic_edge2\")  plotSpatialAnnotations(object_t313, ids = necrotic_ids, nrow = 1)"},{"path":"/articles/spatial-annotation-screening.html","id":"running-the-algorithm","dir":"Articles","previous_headings":"","what":"2. Running the algorithm","title":"Spatial Annotation Screening","text":"algorithm wrapped function spatialAnnotationScreening(). Note parameters core distance essential outcome. Make sure align either input questioning. See vignette using spatial annotations information. output spatialAnnotationScreening() S4 object class SpatialAnnotationScreening contains set well results algorithm.","code":"# prefiltering genes for spatial variability with SPARKX is recommended object_t313 <- runSPARKX(object_t313)  sparkx_genes <- getSparkxGenes(object_t313, threshold_pval = 0.05)  sas_out <-    spatialAnnotationScreening(     object = object_t313,      ids = necrotic_ids,      variables = sparkx_genes,      core = FALSE, # do not include the core of the annotations     distance = \"dte\" # distance to edge    ) # an S4 object that contains the results  class(sas_out) ## [1] \"SpatialAnnotationScreening\" ## attr(,\"package\") ## [1] \"SPATA2\" slotNames(sas_out) ## [1] \"annotations\" \"coordinates\" \"models\"      \"qc\"          \"results\"     ## [6] \"sample\"      \"set_up\" # prepare plotting  screening_dir_layer <- ggpLayerScreeningDirectionSAS(object_t313, ids = necrotic_ids, line_size = 0.5) sas_areas <- color_vector(clrp = \"npg\", names = c(\"core\", \"environment\", \"periphery\"))  # left plot # use information within the SAS output to recreate the set up  plotSurface(sas_out, color_by = \"rel_loc\", clrp_adjust = sas_areas) +   screening_dir_layer  # right plot plotSurface(sas_out, color_by = \"dist\", fill = alpha(\"lightgrey\", 0.25)) +   labs(color = \"Dist [mm]\") +    screening_dir_layer"},{"path":"/articles/spatial-annotation-screening.html","id":"extracting-results","dir":"Articles","previous_headings":"","what":"3. Extracting results","title":"Spatial Annotation Screening","text":"Results stored slot @results. Slot @results$significance contains data.frame one row screened variable provides information regarding degree randomness inferred pattern contains quantified total variation (tot_var). p-value gives probability obtain total variation complete randomness indicates degree significance. Column fdr contains adjusted p-value according False Discovery Rate. Slot @results$model_fits contains model fitting results. data.frame row corresponds variable ~ model pair. columns mae (mean absolute error) rmse (root mean squared error) indicate quality fit. lower value better. can easily subset results dplyr verbs. Alternatively, can use getSgsResultsDf() getSgsResultsVec() convenient wrappers around conditions subset results. can filter results significant variables certain threshold specific models obtain genes potential interest. instance, obtain genes feature non random, descending gradient increasing distance necrosis - associated necrosis - use following: Alternatively, can extract opposite gradient - ascending ones - correspond genes rather repelled necrosis.","code":"# e.g. filter output for gradients with a p-value less than 0.05 filter(sas_out@results$significance, p_value < 0.05) ## # A tibble: 560 × 6 ##    variables  rel_var tot_var p_value norm_var    fdr ##    <chr>        <dbl>   <dbl>   <dbl>    <dbl>  <dbl> ##  1 A2M          0.112    2.34  0.0091   0.117  0.0559 ##  2 AC245595.1   1        2.33  0.0083   0.117  0.0513 ##  3 ACTA2        0.516    2.13  0.0026   0.107  0.0235 ##  4 ACTB         0.886    1.69  0        0.0846 0      ##  5 ACTG1       -0.569    1.82  0        0.0911 0      ##  6 ADAM12       0.361    2.50  0.0185   0.125  0.0852 ##  7 ADD1        -0.426    2.32  0.0074   0.116  0.0474 ##  8 ADM         -0.959    1.80  0        0.0898 0      ##  9 ADRM1        0.915    2.69  0.0361   0.135  0.125  ## 10 AKR1B1       1        2.26  0.0059   0.113  0.0418 ## # ℹ 550 more rows # e.g. filter model fits for best fit by variable group_by(sas_out@results$model_fits, variables) %>%    slice_min(rmse, n = 1) ## # A tibble: 265 × 4 ## # Groups:   variables [265] ##    variables models                mae   rmse ##    <chr>     <chr>               <dbl>  <dbl> ##  1 ACTA2     ascending_linear   0.236  0.266  ##  2 ACTB      ascending_linear   0.230  0.263  ##  3 ACTG1     peak_gradual       0.301  0.388  ##  4 ADD1      peak_gradual       0.290  0.353  ##  5 ADM       descending_gradual 0.0725 0.0970 ##  6 AKR1B1    ascending_linear   0.153  0.206  ##  7 ANAPC11   ascending_linear   0.0976 0.123  ##  8 ANGPTL4   descending_linear  0.130  0.162  ##  9 APOC1     ascending_linear   0.102  0.131  ## 10 APOE      ascending_gradual  0.114  0.141  ## # ℹ 255 more rows # the default:  getSgsResultsDf(sas_out, pval = \"fdr\", threshold_pval = 0.05, eval = \"mae\", threshold_eval = 0.2) ## # A tibble: 207 × 9 ## # Groups:   models [6] ##    variables models          mae   rmse rel_var tot_var p_value norm_var     fdr ##    <chr>     <chr>         <dbl>  <dbl>   <dbl>   <dbl>   <dbl>    <dbl>   <dbl> ##  1 CD74      ascending_l… 0.0550 0.0671   0.856    1.31  0        0.0655 0       ##  2 C1QB      ascending_l… 0.0570 0.0758   0.976    1.49  0        0.0743 0       ##  3 P4HA2     descending_… 0.0611 0.0782  -0.822    1.57  0        0.0783 0       ##  4 PSME2     ascending_l… 0.0627 0.0826   0.783    2.22  0.0041   0.111  0.0313  ##  5 FN1       descending_… 0.0653 0.0822  -0.910    1.77  0        0.0884 0       ##  6 NDUFA13   ascending_l… 0.0691 0.0883   1        1.77  0        0.0883 0       ##  7 THBS2     descending_… 0.0702 0.0919  -0.780    1.53  0        0.0763 0       ##  8 MFAP2     ascending_l… 0.0713 0.0853   0.994    1.30  0        0.0648 0       ##  9 ADM       descending_… 0.0725 0.0970  -0.959    1.80  0        0.0898 0       ## 10 IFITM3    ascending_l… 0.0727 0.105    0.720    1.92  0.0004   0.0962 0.00555 ## # ℹ 197 more rows # (pval = \"fdr\", threshold_pval = 0.05) desc_genes <- getSgsResultsVec(sas_out, model_subset = \"descending\")  length(desc_genes) ## [1] 63 head(desc_genes, 9) ## [1] \"P4HA2\"  \"FN1\"    \"THBS2\"  \"ADM\"    \"BRI3\"   \"EEF1A1\" \"CA12\"   \"ENO2\"   ## [9] \"SLC2A1\" desc_genes_sub <- desc_genes[1:9]  # left plot plotSurfaceComparison(   object = object_t313,    color_by = desc_genes_sub,   normalize = T,    outline = T,    pt_clrsp = \"BuPu\"   ) +    ggpLayerSpatAnnOutline(object_t313, ids = necrotic_ids, fill = \"grey\", incl_edge = T)  # right plot plotSasLineplot(   object = object_t313,    variables = desc_genes_sub,   ids = necrotic_ids,    line_color = \"blue\"   ) +    labs(x = \"Distance to Necrosis (mm)\") # (pval = \"fdr\", threshold_pval = 0.05) asc_genes <- getSgsResultsVec(sas_out, model_subset = \"ascending\")  length(asc_genes) ## [1] 176 head(asc_genes, 9) ## [1] \"CD74\"    \"C1QB\"    \"PSME2\"   \"NDUFA13\" \"MFAP2\"   \"IFITM3\"  \"S100A11\" ## [8] \"COL5A3\"  \"TDO2\" asc_genes_sub <- asc_genes[1:9]  # show genes asc_genes_sub ## [1] \"CD74\"    \"C1QB\"    \"PSME2\"   \"NDUFA13\" \"MFAP2\"   \"IFITM3\"  \"S100A11\" ## [8] \"COL5A3\"  \"TDO2\" # left plot plotSurfaceComparison(   object = object_t313,   color_by = asc_genes_sub,    normalize = T,    outline = T,    pt_clrsp = \"Reds 3\"   ) +    ggpLayerSpatAnnOutline(object_t313, ids = necrotic_ids, fill = \"grey\", incl_edge = T)  # right plot plotSasLineplot(   object = object_t313,    variables = asc_genes_sub,    ids = necrotic_ids,    line_color = \"red\"   ) +    labs(x = \"Distance to Necrosis (mm)\")"},{"path":"/articles/spatial-annotation-screening.html","id":"pitfalls","dir":"Articles","previous_headings":"","what":"4. Pitfalls","title":"Spatial Annotation Screening","text":"pitfalls regarding spatial annotation screening comes setting screening parameters.","code":""},{"path":"/articles/spatial-annotation-screening.html","id":"incomplete-annotation","dir":"Articles","previous_headings":"4. Pitfalls","what":"4.1 Incomplete annotation","title":"Spatial Annotation Screening","text":"Comprehensive annotation important order include areas screening actually nature annotation (based screening conducted) . distort pattern inferred gradient. instance, compare inferred gradient disregarding annotated necrotic area right bottom - labeled necrotic_edge. distance parameter defines maximum distance observations included screening. defaults edge tissue (maximal distance observations assigned tissue section located ).  Suddenly, gradient VEGFA look interesting necrotic areas included. Note peak 2.7mm omitted necrotic edge located. Therefore, make sure include areas screening set big enough impact screening results.","code":"all_necr_ids <- c(\"necrotic_area\", \"necrotic_edge\", \"necrotic_edge2\")  # plot left, red outlines highlight the omitted annotations plotSurface(object_t313, color_by = \"VEGFA\", display_image = F, pt_clrsp = \"PuBu\") +    ggpLayerSpatAnnOutline(object_t313, ids = \"necrotic_area\", fill = alpha(\"lightgrey\", 0.25)) +   # decrease resolution to 250um for visualization purpose    ggpLayerExprEstimatesSAS(object_t313, ids  = \"necrotic_area\", resolution = \"250um\") +    ggpLayerSpatAnnOutline(object_t313, ids = c(\"necrotic_edge\", \"necrotic_edge2\"), line_size = 1.5, line_color = \"red\")  # plot right, distance = \"dte\": default getCoordsDfSA(object_t313, ids = \"necrotic_area\", distance = \"dte\")  %>%    plotSurface(object = ., color_by = \"dist\", pt_clrsp = \"inferno\") +    ggpLayerSpatAnnOutline(object_t313, ids = \"necrotic_area\", fill = alpha(\"lightgrey\", 0.25)) # plot left, only necrotic area, distance = \"dte\" screens the whole sample and includes other necrotic areas plotSasLineplot(object_t313, variables = \"VEGFA\", ids = \"necrotic_area\", line_color = \"blue\")   # plot right, comprehensive annotation as used in the example run above plotSasLineplot(object_t313, variables = \"VEGFA\", ids = all_necr_ids, line_color = \"blue\")"},{"path":"/articles/spatial-annotation-screening.html","id":"the-tissue-edge","dir":"Articles","previous_headings":"4. Pitfalls","what":"4.2 The tissue edge","title":"Spatial Annotation Screening","text":"Make sure appropriate results identifyTissueOutline() exist SPATA2 object. Consider following sample two mouse brain tissue sections two stab wound injuries located cortex. clustering indicates significant impact stab wounds local surrounding, impact can logically affect tissue section located . Inferring gene expression gradients distance transgresses gab tissue sections can happen distance parameter set carelessely /tissue outline identified properly!  goes without saying right plot displayes screening set make sense. Gene expression estimated regions feature tissue regions completely distinct tissue section biological connection spatial annotation interest. Spatial annotation screening always makes sure screening transgresses border tissue (sense, incl_edge always TRUE). appropriately requires proper results variable tissue_section computed identifyTissueOutline()!  right plot shows even incl_edge TRUE, screening set nonsense information provided regarding tissue outline thus tissue edge messed . Make sure SPATA2 localizes spatial annotations correct tissue sections - general - tissue sections correctly identified.","code":"# load injured mouse brain data  object_mouse <- loadExampleObject(\"LMU_MCI\", process = TRUE, meta = TRUE)  # \"carelessly\" set distance to \"3mm\" dst <- \"3mm\"  # with tissue edge in mind (incl_edge = TRUE), only for inj1 expr_est_with_edge_in_mind <-    ggpLayerExprEstimatesSAS(object_mouse, ids = \"inj1\", incl_edge = T, distance = dst)  # without tissue edge in mind (incl_edge = FALSE), only for inj1 expr_est_without_edge_in_mind<-    ggpLayerExprEstimatesSAS(object_mouse, ids = \"inj1\", incl_edge = F, distance = dst)  # left plot plotSurface(object_mouse, color_by = \"clusters\") +    ggpLayerSpatAnnOutline(object_mouse, ids = c(\"inj1\", \"inj2\")) +    expr_est_with_edge_in_mind    # right plot plotSurface(object_mouse, color_by = \"clusters\") +    ggpLayerSpatAnnOutline(object_mouse, ids = c(\"inj1\", \"inj2\")) +    expr_est_without_edge_in_mind # left plot # color by the meta feature that just contains the sample name plotSurface(object_mouse, color_by = \"sample\")  # mess up the tissue_section variable manually  object_mouse <- useVarForTissueOutline(object_mouse, var_name = \"sample\")  # right plot, distance = \"3mm\" transgresses the edge of the upper section # because the two sections are not identified as separate sections plotSurface(object_mouse, color_by = \"tissue_section\") +    ggpLayerExprEstimatesSAS(object_mouse, ids = \"inj1\", incl_edge = T, distance = dst) # overwrite tissue_section again object_mouse <- identifyTissueOutline(object_mouse) ## 10:12:56 Identifying tissue outline with `method = obs`. # check on which tissue sections the annotations are located on whichTissueSection(object_mouse, id = \"inj1\") ## [1] \"tissue_section_2\" whichTissueSection(object_mouse, id = \"inj2\") ## [1] \"tissue_section_1\" # left plot plotSurface(object_mouse, color_by = \"tissue_section\") +    ggpLayerTissueOutline(object_mouse)  # set the distance way too high # -> no problem, since it is cut of at the tissue edge (which is now properly defined) dst_high <- \"10mm\"  ids <- c(\"inj1\", \"inj2\")  # right plot # plot both annotations on the surface # a warning informs you that the distance was adjusted based on the tissue edge plotSurface(object_mouse, color_by = \"tissue_section\") +    ggpLayerTissueOutline(object_mouse, line_size = ) +    ggpLayerSpatAnnOutline(object_mouse, ids = ids) +    ggpLayerExprEstimatesSAS(object_mouse, ids = ids, incl_edge = T, distance = dst_high) +   ggpLayerSpatAnnPointer(     object = object_mouse,      ids = c(\"inj1\", \"inj2\"),     ptr_lengths = c(\"0.75mm\", \"1.25mm\"),     ptr_angles = c(70, 270),     ptr_arrow = ggplot2::arrow(length = unit(0.1, \"inches\")),      text_dist = 25,      text_size = 6     ) ## Warning in get_coords_df_sa(object = object, id = id, distance = dist, ## resolution = resolution, : Parameter `distance` equals ~758.74px and exceeds ## the distance from spatial annotation 'inj1' to the edge of tissue section ## 'tissue_section_2' where it is located on: 298.74px. The parameter was adjusted ## accordingly. ## Warning in get_coords_df_sa(object = object, id = id, distance = dist, ## resolution = resolution, : Parameter `distance` equals ~758.74px and exceeds ## the distance from spatial annotation 'inj2' to the edge of tissue section ## 'tissue_section_1' where it is located on: 268.89px. The parameter was adjusted ## accordingly."},{"path":"/articles/spatial-measures.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Spatial Measures","text":"Many questions researchers try answer spatial transcriptomics image analysis space related. Coordinates observations often scaled resolution image currently use. case Visium platform, one exchanges tissue_lowres_image.png tissue_hires_image.png 10X Visium output, coordinates barcoded spots scaled accordingly ensure , coordinates image, stay aligned. Thus, coordinates can used answer spatial questions relative absolute measures. instance, statement: “necrotic region spans area approximately 400pixels.” useless. pixels used unit area always depend image resolution. tutorial explains SPATA2 computes transition pixel SI units Visium platform pixel scale factor. Furthermore, gives examples can leverage working SI distances.","code":"# load required packages library(SPATA2) library(tidyverse)  # load SPATA2 inbuilt example data (and rename an image for this tutorial) object_t275 <-   loadExampleObject(\"UKF275T\") %>%    renameImage(img_name = \"image1\", new_img_name = \"lowres\")  text_size <- theme(text = element_text(size = 17.5))  plotImage(object_t275, img_name = \"lowres\") +    text_size +    labs(subtitle = \"Normal resolution\")  # very_low_res image has been registered using `registerImage()` plotImage(object_t275, img_name = \"very_low_res\") +    text_size +    labs(subtitle = \"Very low resolution\")"},{"path":"/articles/spatial-measures.html","id":"the-pixel-scale-factor","dir":"Articles","previous_headings":"","what":"2. The pixel scale factor","title":"Spatial Measures","text":"answer questions absolute measures, distances must converted units *Système international d’unités (SI). , micrometers, millimeters, centimeters, etc. possible spatial -omic studies come ground truth.","code":""},{"path":"/articles/spatial-measures.html","id":"visium","dir":"Articles","previous_headings":"2. The pixel scale factor","what":"2.1 Visium","title":"Spatial Measures","text":"case 10X Visium ground truth center center distance two adjacent barcoded spots always 100um. Using information, actual distances areas can computed pixel scale factor. factor computed automatically initiateSpataObjectVisium(). (multiple images registered SPATA2 object, note , default, pixel scale factor active image used.)","code":"# how many um is one pixel in side lengths getPixelScaleFactor(object_t275, unit = \"um\") ## [1] 13.68328 ## attr(,\"unit\") ## [1] \"um/px\" # how many pixel is one um in side lengths getPixelScaleFactor(object_t275, unit = \"um\", switch = TRUE) ## [1] 0.07308187 ## attr(,\"unit\") ## [1] \"px/um\" # by default the pixel scale factor of the active image is used getImageNames(object_t275) ## [1] \"lowres\"       \"very_low_res\" # which is image 'lowres' in this example activeImage(object_t275) ## [1] \"lowres\" # how many um is one pixel in side lengths in case of an even lower resolution? getPixelScaleFactor(object_t275, unit = \"um\", img_name = \"very_low_res\") ## [1] 78.94202 ## attr(,\"unit\") ## [1] \"um/px\""},{"path":"/articles/spatial-measures.html","id":"merfish-and-co","dir":"Articles","previous_headings":"2. The pixel scale factor","what":"2.2 MERFISH and Co","title":"Spatial Measures","text":"term pixel scale factor derives time SPATA2 solely thought work Visium datasets. expanded include platforms MERFISH provides coordinates cells micrometer units. platform provides coordinates observations SI units pixel scale factor theoretically isn’t required code SPATA2 work, scale factor must exist SPATA2object. Therefore, set automatically respective initiateSpataObject*() function. E.g. MERFISH data, x- y-coordinates provided um units. Hence, pixel scale factor SPATA2 objects initiated initiateSpataObjectMERFISH() always 1mm/px.","code":""},{"path":"/articles/spatial-measures.html","id":"working-with-distances","dir":"Articles","previous_headings":"","what":"3. Working with distances","title":"Spatial Measures","text":"Multiple functions take arguments , way, refer distance measures. SPATA2 makes use units package work distances. explained otherwise documentation can provide distance pixel SI units. Behind scenes input converted pixel aligned current resolution. 4.1 Converting distances gives examples done.","code":""},{"path":"/articles/spatial-measures.html","id":"handling-distance-input-and-output","dir":"Articles","previous_headings":"3. Working with distances","what":"3.1 Handling distance input and output","title":"Spatial Measures","text":"Every SI unit length valid distance unit. Pixel valid distance unit units. Pixel, however, important image analysis. SPATA2 provides wrappers needed reconcile . named according unit interest. transform pixel SI units length SPATA2 object must provided scale factor needed. See documentation ?is_dist obtain information distance values must specified.","code":"validUnitsOfLength() ##  nanometer micrometer millimeter centimeter  decimeter      meter      pixel  ##       \"nm\"       \"um\"       \"mm\"       \"cm\"       \"dm\"        \"m\"       \"px\"  validUnitsOfLengthSI() ##  nanometer micrometer millimeter centimeter  decimeter      meter  ##       \"nm\"       \"um\"       \"mm\"       \"cm\"       \"dm\"        \"m\"  # wrappers around units::set_units() as_micrometer(input = \"4mm\") ## 4000 [um]  as_millimeter(input = \"4cm\") ## 40 [mm] ### convert from si -> pixel  # example 1: a simple string works as_pixel(input = \"4mm\", object = object_t275) ## [1] 292.3275 ## attr(,\"unit\") ## [1] \"px\"  # example 2: a unit object works, too unit_input <- units::set_units(x = 4, value = \"mm\")  unit_input ## 4 [mm]  class(unit_input) ## [1] \"units\"  as_pixel(input = unit_input, object = object_t275) ## [1] 292.3275 ## attr(,\"unit\") ## [1] \"px\"  ### convert from pixel -> si  # example 1: simple numeric input is interpreted as pixel as_millimeter(   input = c(100, 200, 300),    object = object_t275   ) ## Units: [mm] ## [1] 1.368328 2.736657 4.104985 # example 2: strings with px suffix work, too as_micrometer(   input = c(\"50px\", \"200px\", \"800px\"),    object = object_t275 ) ## Units: [um] ## [1]   684.1642  2736.6568 10946.6271"},{"path":"/articles/spatial-measures.html","id":"examples","dir":"Articles","previous_headings":"3. Working with distances","what":"3.2 Examples","title":"Spatial Measures","text":"following examples actual distances might come play.","code":"# specifying x- and y-range while handling images xrange = c(\"2.5mm\", \"6.5mm\") yrange = c(\"0.5mm\", \"4.5mm\")  # where to set the breaks is a measure of distance, too breaks <- str_c(0:8, \"mm\")  # vector of valid distance inputs print(breaks) ## [1] \"0mm\" \"1mm\" \"2mm\" \"3mm\" \"4mm\" \"5mm\" \"6mm\" \"7mm\" \"8mm\" axes_add_on <- ggpLayerAxesSI(object_t275, unit = \"mm\", breaks = breaks)  rect_add_on <-    ggpLayerRect(     object = object_t275,      xrange = xrange,      yrange = yrange     )  plotImage(object = object_t275) +    rect_add_on +   axes_add_on +    text_size  plotImage(   object = object_t275,   xrange = xrange, # crop the image with distance input   yrange = yrange  # crop the image with distance input   ) +    text_size plotImage(object_t275) +    ggpLayerAxesSI(object_t275, unit = \"mm\", breaks = breaks) +    ggpLayerSpatAnnOutline(object_t275, ids = \"img_ann_1\", fill = \"orange\") +    ggpLayerHorizonSAS(object_t275, id = \"img_ann_1\", distance = \"1mm\") +    ggpLayerScaleBarSI(object_t275, sb_dist = \"1mm\", sb_pos = c(\"5.5mm\", \"7.5mm\"), text_size = 15, text_nudge_y = 10) +    text_size"},{"path":"/articles/spatial-measures.html","id":"working-with-areas","dir":"Articles","previous_headings":"","what":"4. Working with areas","title":"Spatial Measures","text":"addition distances, areas can computed, . becomes interesting, instance, area image annotation relevance biological question.","code":""},{"path":"/articles/spatial-measures.html","id":"handling-area-input-and-output","dir":"Articles","previous_headings":"4. Working with areas","what":"4.1 Handling area input and output","title":"Spatial Measures","text":"Pixel definition squares means sides length. property used SPATA2 use pixel unit distance. can, however, unit area, . E.g. 4px side length 1um cover area 4um2 area 4px. However, number pixels cover specific area depends resolution image. , SPATA2 implements SI units area. Pixel among . SPATA2 allows resolution dependent conversion pixel SI units vice versa. pixel squares equal sizes scale factor used distance conversion can used squared form. Functions convert areas named similar convert distances. pixels involved, SPATA2 object must specified scale factor needed.","code":"validUnitsOfArea() ## [1] \"nm2\" \"um2\" \"mm2\" \"cm2\" \"dm2\" \"m2\"  \"px\" validUnitsOfAreaSI() ## [1] \"nm2\" \"um2\" \"mm2\" \"cm2\" \"dm2\" \"m2\" getPixelScaleFactor(object_t275, unit = \"um2\", img_name = \"lowres\") ## [1] 187.2323 ## attr(,\"unit\") ## [1] \"um2/px\" # more um2 per pixel in the very low resolution image  # -> pixels are smaller getPixelScaleFactor(object_t275, unit = \"um2\", img_name = \"very_low_res\") ## [1] 6231.843 ## attr(,\"unit\") ## [1] \"um2/px\" # numeric input is interpreted as pixel as_millimeter2(input = c(200, 400, 4000, 50000), object = object_t275) ## Units: [mm^2] ## [1] 0.03744645 0.07489290 0.74892903 9.36161289 # if character, different units can be specified as input as_centimeter2(input = c(\"4mm2\", \"400px\"), object = object_t275) ## Units: [cm^2] ## [1] 0.040000000 0.000748929"},{"path":"/articles/spatial-measures.html","id":"examples-1","dir":"Articles","previous_headings":"4. Working with areas","what":"4.2 Examples","title":"Spatial Measures","text":"Compute area covered tissue sample. Note tissue area computed tissue section requires tissue outline computed identifyTissueOutline(). Note tissue outline computed observations used returned area approximation can seen image. Using method = 'image' gives slightly exact outputs tissue appropriately recognized.  Compute area covered different image annotations filter accordingly. Extracting values can used subsetting.","code":"# process the diet example object object_t313 <- identifyTissueOutline(example_data$object_UKF313T_diet)  # set ids of example spatial annotations ids <- c(\"necrotic_area\", \"necrotic_edge\", \"necrotic_edge2\")  plotSpatialAnnotations(object_t313, ids = ids, nrow = 1) # process the diet example object object_mouse <- loadExampleObject(\"LMU_MCI\")  object_mouse <- identifyTissueOutline(object_mouse)  # get tissue area by tisse section getTissueArea(object_mouse, unit = \"mm2\") ## Units: [mm^2] ## tissue_section_1 tissue_section_2  ##         6.349445         7.945489 getTissueArea(object_t313, unit = \"mm2\") ## 29.67623 [mm^2] # left  plotImage(object_t313, unit = \"mm\") + ggpLayerTissueOutline(object_t313)  # right plotImage(object_mouse, unit = \"mm\") + ggpLayerTissueOutline(object_mouse) # use the three necrotic ids from above spat_ann_areas <-    getSpatAnnArea(object = object_t313, ids = ids, unit = \"mm2\")  print(spat_ann_areas) ## Units: [mm^2] ##  necrotic_area  necrotic_edge necrotic_edge2  ##      6.1849516      0.4618869      0.6252351 threshold <- units::set_units(x = 1, value = \"mm2\")  # keep only those with an area smaller than 1mm2 print(spat_ann_areas[spat_ann_areas < threshold]) ## Units: [mm^2] ##  necrotic_edge necrotic_edge2  ##      0.4618869      0.6252351"},{"path":"/articles/spatial-segmentation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Spatial Segmentation","text":"Spatial transcriptomic samples come along underlying histology image. integrate histological classification area specific observations covers, sample can manually segmented SPATA2. example using spatial transcriptomic sample central nervous system malignancy features three different, adjacent histological areas: Tumor, transition zone well infiltrated cortex.","code":"# load required packages library(tidyverse) library(SPATA2)  # load SPATA2 inbuilt data  object_t269 <- loadExampleObject(\"UKF269T\", meta = TRUE, process = TRUE)"},{"path":"/articles/spatial-segmentation.html","id":"create-spatial-segmentation-variables","dir":"Articles","previous_headings":"","what":"2. Create spatial segmentation variables","title":"Spatial Segmentation","text":"Spatial segmentation, sometimes referred manual annotation, means create grouping variables assign label observation based histomorphological features image. example object sample UKF269T, provide variable. just named histology.  create spatial segmentation variabl displayed figure , use function createSpatialSegmentation(). animation exemplifies workflow: create new segmentation variable click ‘Create new segmentation variable’. prompted enter name want give new variable. , simply call example_spat_segm. clicking ‘Add segmentation variable new’ variable created meta data.frame ’s values ‘unnamed’. default, haven’t segmented anything yet. Working segmentation variables means consecutively label observations depending histological area cover. achieve , encircle areas want label Interaction-plot. Start drawing double clicking plot shortcut keyboard d. drawing plot tells . double-clicking leave drawing mode. can used zoom reorientate. double-click endpoint line drawn connect position cursor can continue drawing. Encircle area till start endpoint line close enough connected circle closes. close circle click ‘Highlight’. highlights observations encircled way. highlighting observations name want label can entered ‘Highlight’-button. Click ‘Name’ save results. results immediately displayed plot left. can done till satisfied. Note label gave observation overwritten include another area. run function SPATA2 object first time, plot displayed left. currently segmentation variable meta data.frame can worked . example, already created spatial segmentation variable histology. bother much single data points drawn polygons omit. function dissolveGroups() might spare time trouble.","code":"# variables that have been created using spatial segmentation # curently only one: \"histology\" getSpatSegmVarNames(object_t269) ## [1] \"histology\" # plot the histology image in coordinates frame plotImage(object_t269) +    ggpLayerFrameByCoords(object_t269)  # grouping variable created with spatial segmentation plotSurface(object_t269, color_by = \"histology\") object_t269 <- createSpatialSegmentation(object_t269)"},{"path":"/articles/spatial-segmentation.html","id":"data-storage","dir":"Articles","previous_headings":"","what":"3. Data storage","title":"Spatial Segmentation","text":"Grouping variables transcriptomic studies often created cluster algorithms stored form factors meta data.frame. spatial segmentation variables grouping variables, , stored well.","code":"# show all grouping (factor) variables in the meta data.frame getMetaDf(object_t269) %>%   select(barcodes, where(is.factor)) ## # A tibble: 3,213 × 6 ##    barcodes           tissue_section   seurat_clusters histology  bayes_space ##    <chr>              <fct>            <fct>           <fct>      <fct>       ##  1 GTAGCGCTGTTGTAGT-1 tissue_section_1 1               tumor      2           ##  2 TTGTTTGTGTAAATTC-1 tissue_section_1 1               tumor      2           ##  3 CGTAGCGCCGACGTTG-1 tissue_section_1 2               tumor      2           ##  4 GTAGACAACCGATGAA-1 tissue_section_1 2               tumor      2           ##  5 ACAGATTAGGTTAGTG-1 tissue_section_1 9               tumor      2           ##  6 TGAGATCAAATACTCA-1 tissue_section_1 2               tumor      4           ##  7 CTGGTCCTAACTTGGC-1 tissue_section_1 9               tumor      4           ##  8 TGCACGAGTCGGCAGC-1 tissue_section_1 7               tumor      4           ##  9 ATAGTCTTTGACGTGC-1 tissue_section_1 9               transition 4           ## 10 GGGTGGTCCAGCCTGT-1 tissue_section_1 4               transition 4           ## # ℹ 3,203 more rows ## # ℹ 1 more variable: example_spat_segm <fct> # obtain only names from variables created with spatial segmentation spat_segm_vars <- getSpatSegmVarNames(object_t269)  spat_segm_vars ## [1] \"histology\"         \"example_spat_segm\" # show only variables that have been created by spatial segmentation getMetaDf(object_t269) %>%    select(barcodes, all_of(spat_segm_vars)) ## # A tibble: 3,213 × 3 ##    barcodes           histology  example_spat_segm ##    <chr>              <fct>      <fct>             ##  1 GTAGCGCTGTTGTAGT-1 tumor      unnamed           ##  2 TTGTTTGTGTAAATTC-1 tumor      unnamed           ##  3 CGTAGCGCCGACGTTG-1 tumor      unnamed           ##  4 GTAGACAACCGATGAA-1 tumor      unnamed           ##  5 ACAGATTAGGTTAGTG-1 tumor      unnamed           ##  6 TGAGATCAAATACTCA-1 tumor      unnamed           ##  7 CTGGTCCTAACTTGGC-1 tumor      unnamed           ##  8 TGCACGAGTCGGCAGC-1 tumor      unnamed           ##  9 ATAGTCTTTGACGTGC-1 transition unnamed           ## 10 GGGTGGTCCAGCCTGT-1 transition unnamed           ## # ℹ 3,203 more rows # visualize the (unfinished) spatial segmentation variable  # from the gif above plotSurface(object_t269, color_by = \"example_spat_segm\", clrp_adjust = c(\"unnamed\" = \"lightgrey\"))"},{"path":"/articles/spatial-segmentation.html","id":"working-with-segmentation-variables","dir":"Articles","previous_headings":"","what":"4. Working with segmentation variables","title":"Spatial Segmentation","text":"Segmentation variables can used like grouping variable usually referred via arguments group_by, grouping_variable across. Since new spatial segmentation variable meta feature grouping variables rules options apply getGroupNames(), renameGroups(), relevelGroups().  Spatial segmentation variables can also used conduct DEA GSEA based histology access results plotting functions.","code":"# histology variable is a grouping option ... getGroupingOptions(object_t269) ##              factor              factor              factor              factor  ##    \"tissue_section\"   \"seurat_clusters\"         \"histology\"       \"bayes_space\"  ##              factor  ## \"example_spat_segm\" # but not all grouping options derive from spatial segmentation getSpatSegmVarNames(object_t269) ## [1] \"histology\"         \"example_spat_segm\" # check group (segment) names getGroupNames(object_t269, grouping = \"histology\") ## [1] \"tumor\"       \"transition\"  \"infiltrated\" # rename groups (only temporary without storing the results) renameGroups(object_t269, grouping_variable = \"histology\", \"tumor_renamed\" = \"tumor\") %>%    plotSurface(object = ., color_by = \"histology\", pt_clrp = \"npg\") # run DEA based on histology object_t269 <- runDEA(object = object_t269, across = \"histology\")  plotDeaVolcano(   object = object_t269,   across = \"histology\",    use_pseudolog = TRUE,    label_genes = c(\"EGFR\", \"MBP\", \"SNAP25\")   ) plotSurfaceComparison(object_t269, color_by = c(\"EGFR\", \"MBP\", \"SNAP25\"), nrow = 1) plotBoxplot(object_t269, variables = c(\"EGFR\", \"MBP\", \"SNAP25\"), across = \"histology\", nrow = 1, clrp = \"npg\")"},{"path":"/articles/spatial-trajectory-screening.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Spatial Trajectory Screening","text":"Spatial Trajectory Screening (STS) pursues hypothesis specific genes - numeric features matter - display non-random expression patterns relation spatial reference features, spatial trajectories. STS utilizes reference features incorporate integration potential biological forces identification spatially variable genes, direction tumorous infiltration. allows supervised, hypothesis-driven screening spatial patterns, , unlike differential expression analysis (DEA), acknowledges continuous nature gene expression avoids limitations group-based testing. algorithm wrapped function spatialTrajectoryScreening(). See tutorial using example sample used tutorial creating spatial trajectories - glioblastoma sample UKF269T.","code":"# load required packages library(SPATA2) library(tidyverse)  # load SPATA2 inbuilt data object_t269 <- object_t269 <- loadExampleObject(\"UKF269T\", process = TRUE, meta = TRUE)  # show image  plotImage(object_t269)  # created with code  plotSpatialTrajectories(   object = object_t269,    ids = \"horizontal_mid\",    color_by = \"histology\" )"},{"path":"/articles/spatial-trajectory-screening.html","id":"run-the-algorithm","dir":"Articles","previous_headings":"","what":"2. Run the algorithm","title":"Spatial Trajectory Screening","text":"function use called spatialTrajectoryScreening(). parameter variables takes numeric variables supposed included screening process. Since sorts numeric variables can included screening, argument input simply called variables. , using genes already identified spatially variable SPARKX. goal analyze genes expressed non-random biologically meaningful way along trajectory. Note: output spatialTrajectoryScreening() saved SPATA2 object returned separate S4 object class SpatialTrajectoryScreening. overwrite SPATA2 object writing object_t269 <- spatialTrajectoryScreening(object = object_t269, id = id, ...).","code":"# this is a wrapper around SPARK::sparkx() object_t269 <- runSparkx(object = object_t269) ## ## ===== SPARK-X INPUT INFORMATION ====  ## ## number of total samples: 3213  ## ## number of total genes: 15000  ## ## Running with single core, may take some time  ## ## Testing With Projection Kernel ## ## Testing With Gaussian Kernel 1 ## ## Testing With Gaussian Kernel 2 ## ## Testing With Gaussian Kernel 3 ## ## Testing With Gaussian Kernel 4 ## ## Testing With Gaussian Kernel 5 ## ## Testing With Cosine Kernel 1 ## ## Testing With Cosine Kernel 2 ## ## Testing With Cosine Kernel 3 ## ## Testing With Cosine Kernel 4 ## ## Testing With Cosine Kernel 5 # keep genes with a sparkx pvalue of 0.01 or lower spark_df <- getSparkxGeneDf(object = object_t269, threshold_pval = 0.05)  # show results spark_df ## # A tibble: 8,734 × 3 ##    genes    combinedPval adjustedPval ##    <chr>           <dbl>        <dbl> ##  1 RPL22               0            0 ##  2 ID3                 0            0 ##  3 MARCKSL1            0            0 ##  4 PHC2                0            0 ##  5 RPS8                0            0 ##  6 WLS                 0            0 ##  7 GNG5                0            0 ##  8 RPL5                0            0 ##  9 CNN3                0            0 ## 10 RHOC                0            0 ## # ℹ 8,724 more rows # `getSparkxGenes()` would work, too input_genes <- spark_df[[\"genes\"]]  # define start and end positions of the trajectory directly object_t269 <-    addSpatialTrajectory(     object = object_t269,     id = \"horizontal_mid\",     start = c(\"1.5mm\", \"4mm\"),     end = c(\"6.5mm\", \"4mm\"),     overwrite = TRUE   )  # note: the results are NOT stored in the SPATA2 object but in a separate object sts_out <-    spatialTrajectoryScreening(     object = object_t269,      id = id, # ID of the spatial trajectory     variables = input_genes # the variables/genes to include in the screening    )  class(sts_out)"},{"path":"/articles/spatial-trajectory-screening.html","id":"results","dir":"Articles","previous_headings":"","what":"3. Results","title":"Spatial Trajectory Screening","text":"first step screening identifies pattern unlikely due random gene expression. second step fits non-random gene expression pattern predefined models guides interpretation screening specific gene expression pattern. Slot @results$significance contains data.frame one row screened variable provides information regarding degree randomness inferred pattern contains quantified total variation (tot_var). p-value gives probability obtain total variation complete randomness indicates degree significance. Column fdr contains adjusted p-value according False Discovery Rate.","code":"sign_df <-    sts_out@results$significance %>%    filter(fdr < 0.05)  # show significance data.frame sign_df ## # A tibble: 1,492 × 6 ##    variables  rel_var tot_var p_value norm_var     fdr ##    <chr>        <dbl>   <dbl>   <dbl>    <dbl>   <dbl> ##  1 A1BG        -0.597    7.77  0.0007    0.155 0.00143 ##  2 A2M         -0.348    6.19  0         0.124 0       ##  3 ABAT        -0.372    8.68  0.0063    0.174 0.00988 ##  4 ABCD3       -0.282    9.26  0.0215    0.185 0.0292  ##  5 ABHD17C     -0.471    9.32  0.0233    0.186 0.0310  ##  6 ABHD2       -0.552    6.60  0         0.132 0       ##  7 ABL1        -0.671    9.59  0.0354    0.192 0.0444  ##  8 AC104986.2  -0.458    8.25  0.0021    0.165 0.00369 ##  9 ACAD8       -0.631    8.29  0.0024    0.166 0.00418 ## 10 ACBD6       -0.761    8.87  0.0105    0.177 0.0156  ## # ℹ 1,482 more rows"},{"path":"/articles/spatial-trajectory-screening.html","id":"non-random-gene-expression-gradients","dir":"Articles","previous_headings":"3. Results","what":"3.1 Non-random gene expression gradients","title":"Spatial Trajectory Screening","text":"figures show examples gene expression gradient identified non-random.","code":"# extract variables names non_random <- getSgsResultsVec(sts_out) %>% head(4)  trajectory_add_on <-    ggpLayerSpatialTrajectories(object = object_t269, ids = \"horizontal_mid\")  plotSurfaceComparison(   object = object_t269,   color_by = non_random,   pt_clrsp = \"Reds 3\",   outline = T,   nrow = 1   ) +    trajectory_add_on plotStsLineplot(object_t269, variables = non_random, id = \"horizontal_mid\", line_color = \"red\", nrow = 1)"},{"path":"/articles/spatial-trajectory-screening.html","id":"random-gene-expression-gradients","dir":"Articles","previous_headings":"3. Results","what":"3.2 Random gene expression gradients","title":"Spatial Trajectory Screening","text":"figures show examples gene expression gradient identified random.","code":"# extract random variable names  random <-    sts_out@results$significance %>%    filter(fdr > 0.05) %>%    slice_max(tot_var, n = 4) %>%    pull(variables) %>%    head(4)  plotSurfaceComparison(   object = object_t269,   color_by = random,   pt_clrsp = \"BuPu\",   outline = T,    nrow = 1   ) +    trajectory_add_on plotStsLineplot(object_t269, variables = random, id = \"horizontal_mid\", line_color = \"blue\", nrow = 1)"},{"path":"/articles/spatial-trajectory-screening.html","id":"random-vs--non-random","dir":"Articles","previous_headings":"3. Results","what":"Random vs. non-random","title":"Spatial Trajectory Screening","text":"Looking gradient variable LEPROT (random, blue) SHISA5 (non-random, red) feature descending pattern along trajectory. come one identified likely random ? Spatial gradient screening decides variables likely random random computing variance along gradient, stored variable tot_var sts_out@results$significance. Consider gradient plots expression estimates plotted black points, . SHISA5 features comparatively smooth decline, LEPROT . variance along gradient high deemed significant.","code":"# left plot plotStsLineplot(object_t269, variables = \"LEPROT\", line_color = \"blue\", id = \"horizontal_mid\") +    ggplot2::geom_point()  # right plot plotStsLineplot(object_t269, variables = \"SHISA5\", line_color = \"red\", id = \"horizontal_mid\") +    ggplot2::geom_point()"},{"path":"/articles/spatial-trajectory-screening.html","id":"model-fits","dir":"Articles","previous_headings":"3. Results","what":"3.2 Model fits","title":"Spatial Trajectory Screening","text":"second step uses predefined models fits inferred gradients pattern identified non-random previous step. figure shows default models used SPATA2. can extended user specific querries argument model_add.  Slot @results$model_fits contains model fitting results. data.frame row corresponds variable ~ model pair. columns mae (mean absolute error) rmse (root mean squared error) indicate quality fit. lower value better. following code chunk extracts genes followed model best.","code":"showModels(nrow = 4) +    labs(x = \"Distance along Trajectory [%]\") best_fits <-    sts_out@results$model_fits %>%    filter(variables %in% sign_df[[\"variables\"]]) %>%    group_by(variables) %>%    slice_min(mae, n = 1)  best_fits ## # A tibble: 1,492 × 4 ## # Groups:   variables [1,492] ##    variables  models              mae  rmse ##    <chr>      <chr>             <dbl> <dbl> ##  1 A1BG       descending_linear 0.172 0.216 ##  2 A2M        descending_linear 0.172 0.218 ##  3 ABAT       descending_linear 0.193 0.246 ##  4 ABCD3      descending_linear 0.215 0.253 ##  5 ABHD17C    descending_linear 0.201 0.260 ##  6 ABHD2      descending_linear 0.181 0.217 ##  7 ABL1       descending_linear 0.179 0.225 ##  8 AC104986.2 descending_linear 0.196 0.235 ##  9 ACAD8      descending_linear 0.171 0.212 ## 10 ACBD6      descending_linear 0.240 0.281 ## # ℹ 1,482 more rows best_fits_by_model <-    group_by(best_fits, models) %>%    slice_min(mae, n = 1) %>%    filter(rmse < 0.2) # threshold suggestions for root mean squared error  best_fits_by_model ## # A tibble: 6 × 4 ## # Groups:   models [6] ##   variables models               mae  rmse ##   <chr>     <chr>              <dbl> <dbl> ## 1 VGF       ascending_gradual  0.110 0.171 ## 2 ARC       ascending_linear   0.132 0.184 ## 3 RDH10     descending_gradual 0.133 0.163 ## 4 SIPA1L2   descending_linear  0.112 0.141 ## 5 SELENOP   peak_moderate      0.121 0.145 ## 6 MOBP      peak_sharp         0.124 0.155 plotSurfaceComparison(   object = object_t269,    color_by = best_fits_by_model[[\"variables\"]],    outline = TRUE,    display_image = FALSE,    pt_clrsp = \"Reds 3\",    nrow = 2   ) +    trajectory_add_on plotStsLineplot(   object = object_t269,    variables = best_fits_by_model[[\"variables\"]],    id = \"horizontal_mid\",    line_color = \"red\",    nrow = 2 )"},{"path":"/articles/using-spatial-annotations.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Using Spatial Annotations","text":"vignette exemplifies use Spatial Annotations SPATA2. builds spatial annotations created vignette creating spatial annotations.","code":"# load required packages library(SPATA2) library(tidyverse)  # load SPATA2 inbuilt data object_t313 <- loadExampleObject(\"UKF313T\", process = TRUE, meta = TRUE)"},{"path":"/articles/using-spatial-annotations.html","id":"image-subsetting","dir":"Articles","previous_headings":"","what":"2. Image subsetting","title":"Using Spatial Annotations","text":"Spatial annotations annotate space can directly translated image regardless annotation drawn based histomorphological features (Image Annotations) numeric grouping features (Numeric- GroupAnnotations). annotated space can used obtain image sections cropped include annotated area. getSpatialAnnotation() extracts object class SpatialAnnotation. default, image cropped way annotation included.  argument expand can used getSpatialAnnotation(), , order manipulate much extra space image cropped. works pixel well SPATA2’s SI unit system.","code":"# obtain the IDs of all spatial annotations getSpatAnnIds(object_t313) ## [1] \"necrotic_area\"          \"necrotic_center\"        \"necrotic_edge\"          ## [4] \"necrotic_edge2\"         \"necrotic_edge2_transgr\" necrotic_area <-    getSpatialAnnotation(     object = object_t313,     id = \"necrotic_area\",      add_image = T     )  # print summary  necrotic_area ## An object of class 'ImageAnnotation' with id = 'necrotic_area'.  ## Tags: necrotic, compr. # print slot names slotNames(necrotic_area) ## [1] \"parent_name\" \"area\"        \"id\"          \"image\"       \"image_info\"  ## [6] \"misc\"        \"sample\"      \"tags\"        \"version\" # visualize from the SPATA2 object, with expand = 0 plotSpatialAnnotations(object_t313, ids = \"necrotic_area\", expand = 0, fill = NA)  # expand = 0 is how the image is extracted when extracting the spatial annotation # (in SPATA2, images are plotted upside down to fit into the cartesian coordinate system) plot(EBImage::flip(necrotic_area@image)) # visualize from the SPATA2 object, with expand = 0 plotSpatialAnnotations(   object = object_t313,   ids = \"necrotic_area\",    expand = \"500um\",    fill = NA,    sb_dist = \"500um\",    sb_pos = c(\"4.5mm\", \"3mm\")   )  necrotic_area_expanded <-    getSpatialAnnotation(     object = object_t313,     id = \"necrotic_area\",      add_image = T,      expand = \"500um\"     )  expanded_image <- EBImage::flip(necrotic_area_expanded@image)  plot(expanded_image)"},{"path":"/articles/using-spatial-annotations.html","id":"inferring-expression-gradients","dir":"Articles","previous_headings":"","what":"3. Inferring expression gradients","title":"Using Spatial Annotations","text":"borders spatial annotations can used reference points analyze expression numeric features (e.g. gene expression) function distance annotated areas. figure illustrates concept.  Inferring expression function distance part Spatial Gradient Screening algorithm (SAS). Therefore, functions related concept feature acronym Sas plotSasLineplot() plotSasHeatmap().  number features displayed becomes high lineplot switch plotSasHeatmap().","code":"necrotic_ids <- c(\"necrotic_area\", \"necrotic_edge\", \"necrotic_edge2\")  # obtain distance data relative to spatial annotations (SA) with getCoordsDfSA() coords_df <-    getCoordsDfSA(object_t313, ids = necrotic_ids, unit = \"mm\", binwidth = \"200um\", core0 = T)   # add distance to necrosis as meta feature to the SPATA2 object # to make them accessible for other functions object_t313 <-    addFeatures(object_t313, feature_df = coords_df[,c(\"barcodes\", \"dist\", \"bins_dist\")], overwrite = T)  # create ggproto layer for further surface plots necrotic_outline <-    ggpLayerSpatAnnOutline(object_t313, ids = necrotic_ids, incl_edge = T, fill = \"grey\")  sas_screning <-    ggpLayerScreeningDirectionSAS(object_t313, ids = necrotic_ids, line_size = 0.75)  # show plots  plotImage(object_t313) +    necrotic_outline +    sas_screning  plotSurface(object_t313, color_by = \"dist\", pt_clrsp = \"plasma\") +    necrotic_outline +    sas_screning +    labs(color = \"Dist [mm]\") plotSurface(object_t313, color_by = \"HM_HYPOXIA\", display_image = F, outline = T, pt_clrsp = \"BuPu\") +    necrotic_outline +    sas_screning  plotSasLineplot(object_t313, ids = necrotic_ids, variables = \"HM_HYPOXIA\", line_color = \"blue\") +    labs(x = \"Distance to Necrotic Borders [mm]\") # use spatialAnnotationScreening() to identify non random genes  # and genes with specific expression pattern related to your spatial annotations associated_with_necrosis <-   c(\"SLC2A1\", \"ADM\", \"ERO1A\", \"CD44\", \"STC2\", \"CA12\", \"VEGFA\", \"NDRG1\", \"TMEM158\", \"LOX\")  repelled_by_necrosis <-    c(\"CD74\", \"CLU\", \"IFITM3\", \"C1QA\", \"C1QB\", \"CD68\", \"SELENOP\", \"SEC61B\", \"HLA-DRB1\", \"EMC6\")  plotSasHeatmap(object_t313, variables = associated_with_necrosis, ids = necrotic_ids, clrsp = \"BuPu\") +    labs(x = \"Distance to Necrotic Borders [mm]\")  plotSasHeatmap(object_t313, variables = repelled_by_necrosis, ids = necrotic_ids, clrsp = \"Reds 3\") +    labs(x = \"Distance to Necrotic Borders [mm]\")"},{"path":"/articles/using-spatial-annotations.html","id":"core-environment-and-periphery","dir":"Articles","previous_headings":"","what":"3. Core, Environment and Periphery","title":"Using Spatial Annotations","text":"concept Spatial Annotation Screening differentiates three types areas working spatial annotations: Core: area annotated outer (inner, see annotation necrotic_area) borders spatial annotation. Environemnt: area annotation (annotations) surrounded. Periphery: area exceeds distance expression pattern inferred defined parameter distance. default distance maximum distances objects observations (, barcoded spots) respective closest annotation border. case three necrotic annotations maximum distance approximately 2mm. referred distance edge (dte) observations tissue’s edge included. hypothesis requires specific distance parameter expression gradient inferred use distance parameter. Fig.6 visualizes differences set .  Another aspect consider core parameter. Depending whether set core = TRUE core = FALSE inside annotation included gradient. depends circumstances hypothesis whether makes sense include core . case necrotic areas decided set core = FALSE since particularly interested reaction surrounding necrotic areas.","code":"## in mm, since unit = \"mm\" round(max(coords_df$dist), digits = 2) ## [1] 1.99 sas_areas <- color_vector(clrp = \"npg\", names = c(\"core\", \"environment\", \"periphery\"))  necrotic_outline_transp <-    ggpLayerSpatAnnOutline(object_t313, ids = necrotic_ids, incl_edge = T, fill = NA)  # rel_loc = location of each observation relative to the set up plotSurface(coords_df, color_by = \"rel_loc\", clrp_adjust = sas_areas) +    necrotic_outline_transp +   labs(subtitle = \"`distance` = 'dte'\")  # the scenario changes when distance is specified coords_df2 <-    getCoordsDfSA(object_t313, ids = necrotic_ids, distance = \"1.5mm\")  plotSurface(coords_df2, color_by = \"rel_loc\", clrp_adjust = sas_areas) +    necrotic_outline_transp +   labs(subtitle = \"`distance` = 1.5mm\")"},{"path":"/articles/using-spatial-annotations.html","id":"using-external-coordinate-data-frames","dir":"Articles","previous_headings":"","what":"4. Using external coordinate data.frames","title":"Using Spatial Annotations","text":"can relate spatial annotations observations live SPATA2 object separate data.frame. requirements data.frame contains x- y- coordinates scaled resolution active image (one) variable called barcodes identifying observation uniquely.  Use sc_input input argument coords_df getCoordsDfSA(). way, coordinates stored SPATA2 objects used ones provide.","code":"# get sc deconvolution data sc_input <- example_data$sc_input_lmu_mci  sc_input ## # A tibble: 4,356 × 5 ##    barcodes     x     y cell_type             spot_id            ##    <chr>    <dbl> <dbl> <fct>                 <chr>              ##  1 cell1     442.  378. Neurons               AAACAAGTATCTCCCA-1 ##  2 cell2     412.  140. Mural cells           AAACAGAGCGACTCCT-1 ##  3 cell3     412.  137. Astrocytes            AAACAGAGCGACTCCT-1 ##  4 cell4     413.  142. Astrocytes            AAACAGAGCGACTCCT-1 ##  5 cell5     412.  138. Microglia             AAACAGAGCGACTCCT-1 ##  6 cell6     424.  447. Monocytes/Macrophages AAACATTTCCCGGATT-1 ##  7 cell7     425.  452. Microglia             AAACATTTCCCGGATT-1 ##  8 cell8     426.  450. Microglia             AAACATTTCCCGGATT-1 ##  9 cell9     492.  341. OPCs                  AAACCCGAACGAAATC-1 ## 10 cell10    494.  346. OPCs                  AAACCCGAACGAAATC-1 ## # ℹ 4,346 more rows # load mouse brain sectionas as example data object_mouse <- loadExampleObject(\"LMU_MCI\", process = TRUE, meta = TRUE)  hemispheres <- ggpLayerTissueOutline(object_mouse) injuries <- ggpLayerSpatAnnOutline(object_mouse, ids = c(\"inj1\", \"inj2\"))  # left plot plotSurface(object_mouse, color_by = \"clusters\") +    injuries  # right plot plotSurface(sc_input, color_by = \"cell_type\", pt_clrp = \"tab20b\", pt_size = 0.5) +    injuries +    hemispheres # relate to spatial annotations ... sc_input_sa <-    getCoordsDfSA(     object = object_mouse,     ids = c(\"inj1\", \"inj2\"),     resolution = \"300um\",      coords_df = sc_input     ) %>%    filter(rel_loc != \"core\")  # ... which adds the spatial information to the data.frame sc_input_sa ## # A tibble: 4,092 × 15 ##    barcodes     x     y tissue_section_id cell_type spot_id tissue_section  dist ##    <chr>    <dbl> <dbl> <chr>             <fct>     <chr>   <chr>          <dbl> ##  1 cell1     442.  378. tissue_section_2  Neurons   AAACAA… tissue_sectio… 0.502 ##  2 cell10    494.  346. tissue_section_2  OPCs      AAACCC… tissue_sectio… 1.18  ##  3 cell100   408.  375. tissue_section_2  Oligos    AACGGA… tissue_sectio… 0.659 ##  4 cell1000  370.  171. tissue_section_1  Monocyte… ATGCCG… tissue_sectio… 0.366 ##  5 cell1001  371.  175. tissue_section_1  Oligos    ATGCCG… tissue_sectio… 0.415 ##  6 cell1002  344.  442. tissue_section_2  Neurons   ATGCTC… tissue_sectio… 1.14  ##  7 cell1003  345.  441. tissue_section_2  Monocyte… ATGCTC… tissue_sectio… 1.13  ##  8 cell1004  346.  445. tissue_section_2  Astrocyt… ATGCTC… tissue_sectio… 1.11  ##  9 cell1005  347.  441. tissue_section_2  Astrocyt… ATGCTC… tissue_sectio… 1.10  ## 10 cell1006  481.  419. tissue_section_2  OPCs      ATGCTT… tissue_sectio… 0.567 ## # ℹ 4,082 more rows ## # ℹ 7 more variables: border <chr>, dist_unit <chr>, bins_dist <fct>, ## #   rel_loc <fct>, angle <dbl>, bins_angle <fct>, id <fct> ct <- c(\"Monocytes/Macrophages\", \"Microglia\", \"Neurons\", \"Astrocytes\")  ggplot(sc_input_sa) +    geom_bar(mapping = aes(x = bins_dist, fill = cell_type), position = \"stack\") +    scale_color_add_on(aes = \"fill\", variable = sc_input_sa$cell_type, clrp = \"tab20b\") +    theme_classic()"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jan Kueckelhaus. Author, maintainer. Dieter-Henrik Heiland. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kueckelhaus J, Heiland D (2024). SPATA2: Toolbox Spatial Expression Analysis. R package version 3.0.0, https://themilolab.com/.","code":"@Manual{,   title = {SPATA2: A Toolbox for Spatial Expression Analysis},   author = {Jan Kueckelhaus and Dieter-Henrik Heiland},   year = {2024},   note = {R package version 3.0.0},   url = {https://themilolab.com/}, }"},{"path":"/index.html","id":"spata2","dir":"","previous_headings":"","what":"A Toolbox for Spatial Expression Analysis","title":"A Toolbox for Spatial Expression Analysis","text":"Toolbox Spatial Gene Expression Analysis detailed tutorials examples click link : https://themilolab.github.io/SPATA2/ used SPATA2 analysis please consider citing: Ravi VM, P, Kueckelhaus J, Sun N, Joseph K, Salié H, Vollmer L, Kuliesiute U, von Ehr J, Benotmane JK, Neidert N, Follo M, Scherer F, Goeldner JM, Behringer SP, Franco P, Khiat M, Zhang J, Hofmann UG, Fung C, Ricklefs FL, Lamszus K, Boerries M, Ku M, Beck J, Sankowski R, Schwabenland M, Prinz M, Schüller U, Killmer S, Bengsch B, Walch AK, Delev D, Schnell O, Heiland DH. Spatially resolved multi-omics deciphers bidirectional tumor-host interdependence glioblastoma. Cancer Cell. 2022 Jun 13;40(6):639-655.e13. doi: 10.1016/j.ccell.2022.05.009. PMID: 35700707. Inferring spatially transient gene expression pattern spatial transcriptomic studies, Jan Kueckelhaus, Jasmin von Ehr, Vidhya M. Ravi, Paulina , Kevin Joseph, Juergen Beck, Ulrich G. Hofmann, Daniel Delev, Oliver Schnell, Dieter Henrik Heiland doi: https://doi.org/10.1101/2020.10.20.346544","code":""},{"path":"/index.html","id":"licences-information","dir":"","previous_headings":"","what":"Licences Information","title":"A Toolbox for Spatial Expression Analysis","text":"program free software: can redistribute /modify terms GNU General Public License published Free Software Foundation, either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See GNU General Public License details. received copy GNU General Public License along program. , see http://www.gnu.org/licenses/.","code":""},{"path":"/reference/GeomPointFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomPointFixed — GeomPointFixed","title":"GeomPointFixed — GeomPointFixed","text":"GeomPointFixed","code":""},{"path":"/reference/GeomSegmentFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomSegmentFixed — GeomSegmentFixed","title":"GeomSegmentFixed — GeomSegmentFixed","text":"GeomSegmentFixed","code":""},{"path":"/reference/GeomTextFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomTextFixed — GeomTextFixed","title":"GeomTextFixed — GeomTextFixed","text":"GeomTextFixed","code":""},{"path":"/reference/GroupAnnotation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The GroupAnnotation - Class — GroupAnnotation-class","title":"The GroupAnnotation - Class — GroupAnnotation-class","text":"S4 class designed represent spatial extent data points, cells barcoded spots, filtering outlining based predefined groups. class allows creation annotations highlight specific spatial clusters, areas, patterns identified grouping techniques. provides means focus regions interest within spatial multi-omic datasets using predefined categorizations.","code":""},{"path":"/reference/GroupAnnotation-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The GroupAnnotation - Class — GroupAnnotation-class","text":"class extension class SpatialAnnotation inherits slots.","code":""},{"path":"/reference/GroupAnnotation-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The GroupAnnotation - Class — GroupAnnotation-class","text":"grouping Character value. name grouping variable contains outlined group. group Character value. name outlined group. parameters list. named list parameters set compute spatial outline.","code":""},{"path":"/reference/HistoImage-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The HistoImage - Class — HistoImage-class","title":"The HistoImage - Class — HistoImage-class","text":"S4 class contains histology image information data . Usually live slot @images SpatialData objects.","code":""},{"path":"/reference/HistoImage-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The HistoImage - Class — HistoImage-class","text":"active logical. TRUE, image used default. one HistoImage SpatialData object can active time. aligned logical. TRUE, indicates image aligned reference image. bg_color character. color background. dir character. directory load image slot @image empty. image Image. image stored class Image package EBImage. image_info list. list miscellaneous slots carrie information regarding image. Protected slots : dims: Numeric vector length three. Output base::dim() read image. name character. name image. outline list. List two data.frames row corresponds vertice polygon required outline whole tissue identified image single contiguous tissue sections. tissue_whole: Data.frame two variables x_orig y_orig. tissue_sections: Data.frame two variables x_orig, y_orig section outline tissue section outlined. See vignette tissue outline information. overlap numeric. Numeric vector length two. Quantifies overlap tissue outline image tissue outline reference image value 0-1 alignment via alignImage(). pixel_content factor. Named factor names correspond pixels following naming convention 'px_w1_h1' encoding width height value pixel original transformed image. Values correspond content pixel displays. See identifyPixelContent() information. reference logical. TRUE HistoImage used reference histology images aligned. sample character. name tissue portion image belongs. scale_factors list. List single numeric values serving scale factors multiple purposes Reserved slot names: image: Image scale factor original x y variables (x_orig, y_orig) multiplied upon extraction coordinates data.frame (resulting x y variables) ensuring alignment image. pixel: Pixel scale factor used convert pixel values SI units. must attribute called \"unit\" conforming format \"SI-unit/px\". See scale factors information. transformations list. List transformations apply upon extracting image ensure alignment additional images spatial aspects. case default values transformation applied. angle: Numeric value ranges 0-359. Indicates angle degrees image needs rotated clockwise direction. Defaults 0. flip: List two logical values named horizontal vertical. Indicate image supposed flipped around either axis. default FALSE stretch: List two numerical values named horizontal vertical serving scale factors stretch respective axis. default 1. translate: List two numeric values named horizontal vertical. Indicate number pixels image needs translated. Positive values shift image downwards right, respectively. Negative values shift image upwards left, respectively. default 0.","code":""},{"path":"/reference/HistoImaging-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The HistoImaging - Class — HistoImaging-class","title":"The HistoImaging - Class — HistoImaging-class","text":"Deprecated favor SpatialData.","code":""},{"path":"/reference/HistologyImage-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The HistologyImage - Class — HistologyImage-class","title":"The HistologyImage - Class — HistologyImage-class","text":"Deprecated favor HistoImage.","code":""},{"path":"/reference/HistologyImaging-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The HistologyImaging - Class — HistologyImaging-class","title":"The HistologyImaging - Class — HistologyImaging-class","text":"Deprecated favor SpatialData.","code":""},{"path":"/reference/ImageAnnotation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The ImageAnnotation - Class — ImageAnnotation-class","title":"The ImageAnnotation - Class — ImageAnnotation-class","text":"S4 class designed capture spatial annotations outlining areas interest images. class provides flexible framework creating annotations visually highlight specific regions within images, histological structures, cellular patterns, histo-morphological features images.","code":""},{"path":"/reference/ImageAnnotation-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The ImageAnnotation - Class — ImageAnnotation-class","text":"class extension class SpatialAnnotation inherits slots.","code":""},{"path":"/reference/ImageAnnotation-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The ImageAnnotation - Class — ImageAnnotation-class","text":"parent_name Character string. name image annotation drawn .","code":""},{"path":"/reference/MERFISH.html","id":null,"dir":"Reference","previous_headings":"","what":"MERFISH Spatial Method — MERFISH","title":"MERFISH Spatial Method — MERFISH","text":"object abstracts MERFISH (Multiplexed Error-Robust Fluorescence Situ Hybridization) spatial method, focuses cell-level observations.","code":""},{"path":"/reference/MERFISH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MERFISH Spatial Method — MERFISH","text":"","code":"MERFISH"},{"path":"/reference/MERFISH.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MERFISH Spatial Method — MERFISH","text":"object class SpatialMethod length 1.","code":""},{"path":"/reference/MERFISH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MERFISH Spatial Method — MERFISH","text":"MERFISH object based SpatialMethod class contains following specifications: name: name spatial method, \"MERFISH\". observational_unit: unit observation, \"cell\". unit: SI unit used, \"mm\". version: version SPATA2 package used.","code":""},{"path":"/reference/MolecularAssay-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The MolecularAssay - Class — MolecularAssay-class","title":"The MolecularAssay - Class — MolecularAssay-class","text":"class represent molecular assay data, including analysis results, metrics, statistical summaries. MolecularAssay class encapsulates various components assay data including raw processed metrics, analytical results, associated metadata like assay name molecular type. (documentation shorter term assay used refer molecular assays.)","code":""},{"path":"/reference/MolecularAssay-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The MolecularAssay - Class — MolecularAssay-class","text":"active_mtr Character string indicating matrix extract use default. analysis List analysis results element can represent different analysis aspect. meta_var Data.frame meta data variables assay - molecules. mtr_counts Matrix object storing raw counts assay. Rownames corresponds molecule names. Colnames correspond barcodes (IDs) observations molecule counts mapped. mtr_proc List processed data matrices. modality Character value. string best characterizes type molecular data assay carries (e.g., \"gene\", \"protein\"). molecular modalities SPATA2 can found . signatures Named list character vectors. Molecular signatures sets molecules (genes proteins) associated specific biological states, processes, conditions. slot stores molecular signatures detected assay data. signature represented vector molecule names named list, names list slots correspond signature. Read molecular signatures .","code":""},{"path":"/reference/NumericAnnotation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The NumericAnnotation - Class — NumericAnnotation-class","title":"The NumericAnnotation - Class — NumericAnnotation-class","text":"S4 class designed represent spatial extent data points, cells barcoded spots, filtering outlining according values specific numeric variable. class particularly suitable creating annotations highlight areas interest based continuous characteristics like gene expression numeric attributes derived spatial multi-omic datasets.","code":""},{"path":"/reference/NumericAnnotation-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The NumericAnnotation - Class — NumericAnnotation-class","text":"class extension class SpatialAnnotation inherits slots.","code":""},{"path":"/reference/NumericAnnotation-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The NumericAnnotation - Class — NumericAnnotation-class","text":"parameters list. named list parameters set compute spatial outline. threshold character. threshold parameter data points filtered. variable character. name numeric variable based annotation created.","code":""},{"path":"/reference/SDEGS-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The SDEGS-class — SDEGS-class","title":"The SDEGS-class — SDEGS-class","text":"S4 class serves container results detection spatially differentially expressed genes (SDEGs) suggested Zeng et al. 2023. Contains results findSDEGS()","code":""},{"path":"/reference/SDEGS-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The SDEGS-class — SDEGS-class","text":"coordinates data.frame. Data.frame four variables barcodes, x, y, bins_dist visualize testing set . dea_1v1 list. List data.frames containing differentially expressed genes circle bin vs. Control according slot containing data.frame named (returned Seurat::FindMarkers()). dea_all data.frame.  Data.frame DEA testing returned Seurat::FindAllMarkers(). spat_ann SpatialAnnotation. spatial annotation based testing conducted. spatial_parameters list. List three slots named binwidth, distance, n_bins_dist set using corresponding parameters. sample character. Name sample results belong.","code":""},{"path":"/reference/SDEGS-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The SDEGS-class — SDEGS-class","text":"R-implementation approach suggested Zeng, H., Huang, J., Zhou, H. et al. Integrative situ mapping single-cell transcriptional states tissue histopathology mouse model Alzheimer's disease. Nat Neurosci 26, 430-446 (2023).","code":""},{"path":[]},{"path":"/reference/SPATA2.html","id":null,"dir":"Reference","previous_headings":"","what":"The SPATA2 - class — SPATA2-class","title":"The SPATA2 - class — SPATA2-class","text":"S4 class represents spatial multiomics data object, containing various assays, compatibility information, dimensionality reduction results, histological images, log file data, metadata observations, additional metadata information, spatial method details, object information, sample identifiers, spatial data, versioning details.","code":""},{"path":"/reference/SPATA2.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The SPATA2 - class — SPATA2-class","text":"assays named list MolecularAssay objects containing molecular data. Names correspond slot @modality respective molecular modality. compatibility list compatibility information data. data_add list additional data yet fixed slot SPATA2 architecture. dim_red list containing dimensionality reduction results. logfile data frame containing logfile data. meta_obs data frame containing metadata observations. comprises variables found molecular assays including cluster grouping variables, summary statistics, etc. meta_sample list providing additional information tissue tissue donor. platform character value. name platform used (e.g. VisiumSmall, VisiumLarge, MERFISH, Xenium). equal name SpatialMethod class slot @method SpatialData object. obj_info list containing object information default instructions directories. sample character value. name sample SPATA2 object. spatial object class SpatialData storing coordinates observations, images, required transformations alignment, scale factors, SpatialAnnotation objects, SpatialTrajectory objects, etc. version list specifying versioning details.","code":""},{"path":"/reference/SlideSeqV1.html","id":null,"dir":"Reference","previous_headings":"","what":"SlideSeqV1 Spatial Method — SlideSeqV1","title":"SlideSeqV1 Spatial Method — SlideSeqV1","text":"object abstracts SlideSeqV1 spatial method, focuses bead-level observations.","code":""},{"path":"/reference/SlideSeqV1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SlideSeqV1 Spatial Method — SlideSeqV1","text":"","code":"SlideSeqV1"},{"path":"/reference/SlideSeqV1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SlideSeqV1 Spatial Method — SlideSeqV1","text":"object class SpatialMethod length 1.","code":""},{"path":"/reference/SlideSeqV1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SlideSeqV1 Spatial Method — SlideSeqV1","text":"SlideSeqV1 object based SpatialMethod class contains following specifications: method_specifics: list following element: diameter: Diameter bead \"10um\". name: name spatial method, \"SlideSeqV1\". observational_unit: unit observation, \"bead\". unit: SI unit used, \"mm\". version: version SPATA2 package used.","code":""},{"path":"/reference/SpatialAnnotation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The SpatialAnnotation - Class — SpatialAnnotation-class","title":"The SpatialAnnotation - Class — SpatialAnnotation-class","text":"S4 class represents annotations spatial data, allowing users define store polygons outline areas interest within images datasets. serves overarching class different spatial annotation methods.","code":""},{"path":"/reference/SpatialAnnotation-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The SpatialAnnotation - Class — SpatialAnnotation-class","text":"following classes derivatives class: GroupAnnotation, ImageAnnotation, NumericAnnotation","code":""},{"path":"/reference/SpatialAnnotation-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The SpatialAnnotation - Class — SpatialAnnotation-class","text":"area list. named list data.frames numeric variables x_orig y_orig. Observations correspond vertices polygons needed represent spatial annotation. Must contain slot named outer sets outer border spatial annotation. Can contain multiple slots named inner (suffixed) numbers correspond inner polygons - holes within annotation. Upon extraction via getSpatAnnOutlineDf() extraction whole annotation via getSpatialAnnotation() getSpatialAnnotations() variables x y created scaling x_orig y_orig current resolution active image ensure alignment. achieved using coords scale factor listslot @scale_factors HistoImage object active image. id character. String identify object list multiple objects class. image cropped version image focuses solely area containing annotation, along expansion margin. slot designed remain empty annotation object explicitly extracted used, contributing efficient data storage. Extraction functions like getSpatialAnnotation() getSpatialAnnotation() populates slot cropped image. parameters used cropping image stored @image_info slot. image_info list containing information related image stored @image slot. information pertains cropped image obtained set using functions like getSpatialAnnotation() getSpatialAnnotations(). serves metadata around cropped image may include parameters details cropping process. misc list. flexible list miscellaneous input meta data implement new ideas.. sample Character string. sample annotation belongs. tags character. Vector arbitrary length. Contains tags can used group select spatial annotations different manners. version list three slots denoting version SPATA2 object created.","code":""},{"path":"/reference/SpatialAnnotation-class.html","id":"selection-of-spatial-annotations","dir":"Reference","previous_headings":"","what":"Selection of spatial annotations","title":"The SpatialAnnotation - Class — SpatialAnnotation-class","text":"Selection spatial annotations via arguments ids, class, tags test works three steps: First, ids character prefilters annotations ID specified ones submitted next steps. NULL, annotations submitted next steps. Secondd, class character filters annotations remaining first step class. NULL, step skipped. Third, tags character used combination test select spatial annotations remain second step based meta data tagged . multiple options: Argument test set '' 1: included, image annotation must tagged least one input tags. Argument test set '' 2: included, image annotation must tagged input tags. Can contain tags specified. Argument test set 'identical' 3: included, image annotation must tagged input tags. Can tagged anything else. Argument test set not_identical 4: included, image annotation must tagged combination input tags. Argument test set 'none' 5: included, image annotation must contain input tags. tags NULL, step skipped. Therefore, ids, class tags NULL, default, annotations selected subsetting steps skipped. Eventually, remaining spatial annotations submitted whatever respective function .","code":""},{"path":[]},{"path":"/reference/SpatialAnnotationScreening-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The SpatialAnnotationScreening - Class — SpatialAnnotationScreening-class","title":"The SpatialAnnotationScreening - Class — SpatialAnnotationScreening-class","text":"S4 class contains input output function spatialAnnotationScreening().","code":""},{"path":"/reference/SpatialAnnotationScreening-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The SpatialAnnotationScreening - Class — SpatialAnnotationScreening-class","text":"class extension class SpatialGradientScreening inherits slots.","code":""},{"path":"/reference/SpatialAnnotationScreening-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The SpatialAnnotationScreening - Class — SpatialAnnotationScreening-class","text":"annotations list. list SpatialAnnotation objects used screening.","code":""},{"path":"/reference/SpatialData-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The SpatialData - Class — SpatialData-class","title":"The SpatialData - Class — SpatialData-class","text":"S4 class represents spatial data. includes spatial positions observations, set histological images one tissue slide several consecutive slides one tissue portion well additional spatial aspects spatial annotations spatial trajectories.","code":""},{"path":"/reference/SpatialData-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The SpatialData - Class — SpatialData-class","text":"annotations list. List objects class SpatialAnnotation. coordinates data.frame. Data.frame stores information identified known entities located imaged tissue, cells capture spots. images list. List objects class HistoImage - container objects images. method SpatialMethod. Object class SpatialMethod. meta list. List meta data regarding imaged tissue portion. misc list. flexible list miscellaneous input. name_img_active character. name image currently active. name_img_ref character. name image used reference aligning every additional image slot @images outline list. List two data.frames row corresponds vertice polygon required outline observations marking edge tissue sections. tissue_whole: Data.frame two variables x_orig y_orig. tissue_sections: Data.frame two variables x_orig, y_orig section outline tissue section outlined. See vignette tissue outline information. sample character. String identify imaged tissue. scale_factors list. list scale factors. required slot @images contain image. See scale factors information. trajectories list. list objects class SpatialTrajectory.","code":""},{"path":"/reference/SpatialGradientScreening-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The SpatialGradientScreening - Class — SpatialGradientScreening-class","title":"The SpatialGradientScreening - Class — SpatialGradientScreening-class","text":"S4 class contains input output spatial gradient screening implementation spatialAnnotationScreening() spatialTrajectoryScreening().","code":""},{"path":"/reference/SpatialGradientScreening-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The SpatialGradientScreening - Class — SpatialGradientScreening-class","text":"following classes derivates class: SpatialAnnotationScreening, SpatialTrajectoryScreening.","code":""},{"path":"/reference/SpatialGradientScreening-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The SpatialGradientScreening - Class — SpatialGradientScreening-class","text":"coordinates data.frame. data.frame obtained getCoordsDfSA() getCoordsDfST(), respectively, setup used screening. models data.frame. data.frame columns correspond modeled gradients used model fitting. qc list. named list contains results quality control steps. Reserved list slots : cf Numeric value. correction factor used adjust span. est_R2 List. Results estimating overal R2 noise total variation. zero_infl_vars Character vector. Names variables identified zero inflated. results named list contains screening results. Reserved list slots : significance Data frame results identification non-random gradients. model_fits Data frame results gradient ~ model fits. sample Character value. name SPATA2 object screening conducted. set_up list parameters required reproduce set screening.","code":""},{"path":"/reference/SpatialMethod-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The SpatialMethod - Class — SpatialMethod-class","title":"The SpatialMethod - Class — SpatialMethod-class","text":"Defines core features spatial biology platforms like Visium SlideSeq.","code":""},{"path":"/reference/SpatialMethod-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The SpatialMethod - Class — SpatialMethod-class","text":"capture_area list list length two, elements named x y. element vector length two. slot specifies coordinates opposite corners rectangular area. x element contains x-coordinates y element contains y-coordinates. coordinates define area within data points expected captured. Coordinates must specified SI units. first value vector represents one corner rectangle, second value represents diagonally opposite corner. info list. List miscellaneous meta data method. method_specific list. List method specific data. Depending method certain slot names reserved. See section Method specifics: information. name character. name spatial method. (E.g. 'VisiumSmall', 'VisiumHD', 'MERFISH', ...). one validSpatialMethods(). observational_unit character. Name refer data points method focuses . (E.g. 'barcode_spot', 'cell') unit character. SI used default.","code":""},{"path":"/reference/SpatialMethod-class.html","id":"method-specifics","dir":"Reference","previous_headings":"","what":"Method specifics","title":"The SpatialMethod - Class — SpatialMethod-class","text":"Slot @method_specific contains versatile list information around specific methods. Depending type several slots reserved/set: methods type Visium (currently known VisiumSmall VisiumLarge): ccd: Center center distance spatial distance measure SI units. diameter: Diameter spot micrometer. fiducial_frame: List length two, named x y. Provides standardized measures fiducial frame(SI units). methods type SlideSeq (currently known SlideSeqV1): diameter: Diameter bead micrometer.","code":""},{"path":"/reference/SpatialMethod-class.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"The SpatialMethod - Class — SpatialMethod-class","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/SpatialTrajectory-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The SpatialTrajectory - Class — SpatialTrajectory-class","title":"The SpatialTrajectory - Class — SpatialTrajectory-class","text":"Extension Trajectory trajectories drawn surface plot.","code":""},{"path":"/reference/SpatialTrajectory-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The SpatialTrajectory - Class — SpatialTrajectory-class","text":"comment character. comment trajectory drawn. coords data.frame. coordinates data.frame sample. id character. ID uniquely identfies trajectory sample. info list. Stores meta data miscellaneous information regarding image annotation. Slots always exist: current_dim: Numeric vector length two. Width height image @area data.frame currently scaled . Used scale @area data.frame image annotation extracted added spata2 object different image resolution. current_just: List two slots track justification changes. used readjust @area data.frame image annotation extracted added spata2 object different justifications. angle: Numeric value ranges 0-359. flipped: List two logical values named horizontal vertical. projection data.frame. Data.frame contains length projection barcode spot onto trajectory. sample character. sample name. segment data.frame. Contains coordinates reproduce course trajectory variables named x_orig y_orig. width numeric. width rectangle spanned along trajectory. (Length rectangle corresponds length segment.) with_unit character. unit width specified.","code":""},{"path":"/reference/SpatialTrajectoryScreening-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The SpatialTrajectoryScreening - Class — SpatialTrajectoryScreening-class","title":"The SpatialTrajectoryScreening - Class — SpatialTrajectoryScreening-class","text":"S4 class contains input output function spatialTrajectoryScreening().","code":""},{"path":"/reference/SpatialTrajectoryScreening-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The SpatialTrajectoryScreening - Class — SpatialTrajectoryScreening-class","text":"class extension class SpatialGradientScreening inherits slots.","code":""},{"path":"/reference/SpatialTrajectoryScreening-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The SpatialTrajectoryScreening - Class — SpatialTrajectoryScreening-class","text":"trajectory SpatialTrajectory object used screening.","code":""},{"path":"/reference/Trajectory-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The Trajectory - Class — Trajectory-class","title":"The Trajectory - Class — Trajectory-class","text":"S4 class represents trajectories drawn within real latent space.","code":""},{"path":"/reference/Trajectory-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The Trajectory - Class — Trajectory-class","text":"comment character. comment trajectory drawn. id character. ID uniquely identfies trajectory sample. projection data.frame. Data.frame contains length projection barcode spot onto trajectory. sample character. sample name. segment data.frame. Contains course trajetory form data.frame variables x, y, xend yend. width numeric. width rectangle spanned along trajectory. (Length rectangle corresponds length segment.)","code":""},{"path":"/reference/VisiumHD.html","id":null,"dir":"Reference","previous_headings":"","what":"VisiumHD Spatial Method — VisiumHD","title":"VisiumHD Spatial Method — VisiumHD","text":"object abstracts VisiumHD spatial method, high-density version Visium platform.","code":""},{"path":"/reference/VisiumHD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VisiumHD Spatial Method — VisiumHD","text":"","code":"VisiumHD"},{"path":"/reference/VisiumHD.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VisiumHD Spatial Method — VisiumHD","text":"object class SpatialMethod length 1.","code":""},{"path":"/reference/VisiumHD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"VisiumHD Spatial Method — VisiumHD","text":"VisiumHD object based SpatialMethod class contains following specifications: method_specifics: list following elements: capture_area_sides: list specifying dimensions capture area elements x y, set \"6.25mm\". ccd: Center center distance, character value. square_res: Square resolution, character value. fiducial_frame_sides: list specifying dimensions fiducial frame elements x y, set \"8mm\". observational_unit: unit observation, \"spot\". unit: SI unit used, \"mm\". version: version SPATA2 package used. name: name spatial method, \"VisiumHD\".","code":""},{"path":"/reference/VisiumLarge.html","id":null,"dir":"Reference","previous_headings":"","what":"VisiumLarge Spatial Method — VisiumLarge","title":"VisiumLarge Spatial Method — VisiumLarge","text":"object abstracts VisiumLarge spatial method, covers larger capture area compared Visium methods.","code":""},{"path":"/reference/VisiumLarge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VisiumLarge Spatial Method — VisiumLarge","text":"","code":"VisiumLarge"},{"path":"/reference/VisiumLarge.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VisiumLarge Spatial Method — VisiumLarge","text":"object class SpatialMethod length 1.","code":""},{"path":"/reference/VisiumLarge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"VisiumLarge Spatial Method — VisiumLarge","text":"VisiumLarge object based SpatialMethod class contains following specifications: method_specifics: list following elements: capture_area: list specifying coordinates capture area: x: vector coordinates \"0.75mm\" \"11.75mm\". y: vector coordinates \"0.75mm\" \"11.75mm\". ccd: Center center distance \"100um\". diameter: Diameter spot \"55um\". fiducial_frame: list following elements: x: vector coordinates \"0mm\" \"12.5mm\". y: vector coordinates \"0mm\" \"12.5mm\". observational_unit: unit observation, \"spot\". unit: SI unit used, \"mm\". version: version SPATA2 package used. name: name spatial method, \"VisiumLarge\".","code":""},{"path":"/reference/VisiumSmall.html","id":null,"dir":"Reference","previous_headings":"","what":"VisiumSmall Spatial Method — VisiumSmall","title":"VisiumSmall Spatial Method — VisiumSmall","text":"object abstracts VisiumSmall spatial method, designed smaller capture areas compared Visium methods.","code":""},{"path":"/reference/VisiumSmall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"VisiumSmall Spatial Method — VisiumSmall","text":"","code":"VisiumSmall"},{"path":"/reference/VisiumSmall.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"VisiumSmall Spatial Method — VisiumSmall","text":"object class SpatialMethod length 1.","code":""},{"path":"/reference/VisiumSmall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"VisiumSmall Spatial Method — VisiumSmall","text":"VisiumSmall object based SpatialMethod class contains following specifications: method_specifics: list following elements: capture_area_frame: list specifying coordinates capture area: x: vector coordinates \"0.75mm\" \"7.25mm\". y: vector coordinates \"0.75mm\" \"7.25mm\". ccd: Center center distance \"100um\". diameter: Diameter spot \"55um\". fiducial_frame: list following elements: x: vector coordinates \"0mm\" \"8mm\". y: vector coordinates \"0mm\" \"8mm\". observational_unit: unit observation, \"spot\". unit: SI unit used, \"mm\". version: version SPATA2 package used. name: name spatial method, \"VisiumSmall\".","code":""},{"path":"/reference/Xenium.html","id":null,"dir":"Reference","previous_headings":"","what":"Xenium Spatial Method — Xenium","title":"Xenium Spatial Method — Xenium","text":"object abstracts Xenium spatial method, focuses cell-level observations.","code":""},{"path":"/reference/Xenium.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Xenium Spatial Method — Xenium","text":"","code":"Xenium"},{"path":"/reference/Xenium.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Xenium Spatial Method — Xenium","text":"object class SpatialMethod length 1.","code":""},{"path":"/reference/Xenium.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Xenium Spatial Method — Xenium","text":"Xenium object based SpatialMethod class contains following specifications: name: name spatial method, \"Xenium\". observational_unit: unit observation, \"cell\". unit: SI unit used, \"mm\". version: version SPATA2 package used.","code":""},{"path":"/reference/activateAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Default assay name — activateAssay","title":"Default assay name — activateAssay","text":"Sets extracts active (default) assay name.","code":""},{"path":"/reference/activateAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default assay name — activateAssay","text":"","code":"activateAssay(object, assay_name, verbose = NULL)  activeAssay(object)"},{"path":"/reference/activateAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default assay name — activateAssay","text":"object object class SPATA2 , case S4 generics, objects classes method defined. assay_name Character value. name assay activate default assay verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/activateAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default assay name — activateAssay","text":"activateAssay(): Updated SPATA2 object. activateAssay(): Character value. Name currently active assay.","code":""},{"path":[]},{"path":"/reference/activateAssay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default assay name — activateAssay","text":"","code":"data(\"example_data\")  object <- example_data$object_UKF275T_diet  activeAssay(object)"},{"path":"/reference/activateGrouping.html","id":null,"dir":"Reference","previous_headings":"","what":"Default grouping — activateGrouping","title":"Default grouping — activateGrouping","text":"Sets extracts active (default) grouping. Useful save typing functions require grouping variable input. (Usually referred via arguments across grouping / grouping_variable).","code":""},{"path":"/reference/activateGrouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default grouping — activateGrouping","text":"","code":"activateGrouping(object, grouping, verbose = NULL)  activeGrouping(object, verbose = NULL, arg = \"across\")"},{"path":"/reference/activateGrouping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default grouping — activateGrouping","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable supposed used default within functions need one. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/activateGrouping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default grouping — activateGrouping","text":"activateGrouping(): Updated SPATA2 object. activeGrouping(): Character value. Name default grouping variable.","code":""},{"path":"/reference/activateImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Default image name — activeImage","title":"Default image name — activeImage","text":"Sets extracts active (default) image name.","code":""},{"path":"/reference/activateImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default image name — activeImage","text":"","code":"activeImage(object, ...)  # S4 method for class 'SPATA2' activeImage(object)  # S4 method for class 'SpatialData' activeImage(object)  activateImage(object, ...)  # S4 method for class 'SPATA2' activateImage(   object,   img_name,   load = TRUE,   unload = TRUE,   verbose = TRUE,   ... )  # S4 method for class 'SpatialData' activateImage(   object,   img_name,   load = TRUE,   unload = TRUE,   verbose = TRUE,   ... )  activateImageInt(object, ...)  # S4 method for class 'SPATA2' activateImageInt(object, img_name, load = FALSE)  # S4 method for class 'SpatialData' activateImageInt(object, img_name, load = FALSE)"},{"path":"/reference/activateImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default image name — activeImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image activate default image. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/activateImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default image name — activeImage","text":"activateImage(): Updated SPATA2 object. activeImage(): Character value. Name currently active image.","code":""},{"path":[]},{"path":"/reference/activateImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default image name — activeImage","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  getImageNames(object)  activeImage(object) plotImage(object)  getCoordsDf(object) # with image1  object <- activateImage(object, img_name = \"very_low_res\") activeImage(object) plotImage(object)  # note how x_orig, y_orig remain the same, but x and y differ getCoordsDf(object) # with very_low_res"},{"path":"/reference/activateMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Default matrix name — activateMatrix","title":"Default matrix name — activateMatrix","text":"Sets extracts active (default) matrix name MolecularAssay.","code":""},{"path":"/reference/activateMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default matrix name — activateMatrix","text":"","code":"activateMatrix(   object,   mtr_name,   assay_name = activeAssay(object),   verbose = NULL )  activeMatrix(object, assay_name = activeAssay(object))"},{"path":"/reference/activateMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default matrix name — activateMatrix","text":"object object class SPATA2 , case S4 generics, objects classes method defined. mtr_name Character value. name matrix activate default matrix. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/activateMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default matrix name — activateMatrix","text":"activateMatrix(): Updated SPATA2 object. activeMatrix(): Character value. Name currently active matrix respective assay.","code":""},{"path":[]},{"path":"/reference/activateMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default matrix name — activateMatrix","text":"","code":"library(SPATA2) library(ggplot2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  object <- normalizeCounts(object, mtr_name = \"LogNormalize\")  p1 <- plotSurface(object, color_by = \"METRN\") + labs(subtitle = activeMatrix(object))  object <- activateMatrix(object, mtr_name = \"LogNormalize\")  p2 <- plotSurface(object, color_by = \"METRN\") + labs(subtitle = activeMatrix(object))  plot(p1) plot(p2)"},{"path":"/reference/addAutoencoderSetUp.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the set up of a neural network — addAutoencoderSetUp","title":"Add the set up of a neural network — addAutoencoderSetUp","text":"Add set neural network","code":""},{"path":"/reference/addAutoencoderSetUp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the set up of a neural network — addAutoencoderSetUp","text":"","code":"addAutoencoderSetUp(object, mtr_name, set_up_list, ...)"},{"path":"/reference/addAutoencoderSetUp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the set up of a neural network — addAutoencoderSetUp","text":"object valid spata-object. set_up_list named list slots $activation, $bottleneck, $dropout, $epochs, $layers.","code":""},{"path":"/reference/addAutoencoderSetUp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the set up of a neural network — addAutoencoderSetUp","text":"SPATA2 object.","code":""},{"path":"/reference/addExpressionMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — addExpressionMatrix","title":"Deprecated — addExpressionMatrix","text":"Deprecated favor addProcessedMatrix().","code":""},{"path":"/reference/addExpressionMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — addExpressionMatrix","text":"","code":"addExpressionMatrix(...)"},{"path":"/reference/addFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Add meta features — addFeatures","title":"Add meta features — addFeatures","text":"Adds new externally generated features SPATA2 object's meta data.","code":""},{"path":"/reference/addFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add meta features — addFeatures","text":"","code":"addFeatures(   object,   feature_df,   feature_names = NULL,   key_variable = \"barcodes\",   overwrite = FALSE,   verbose = NULL,   ... )"},{"path":"/reference/addFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add meta features — addFeatures","text":"object object class SPATA2 , case S4 generics, objects classes method defined. feature_df data.frame contains variable called barcodes well variables joined. feature_names Character vector NULL. Determines feature variables add. See details . overwrite Logical value. Must TRUE allow overwriting. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/addFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add meta features — addFeatures","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/addFeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add meta features — addFeatures","text":"interested adding specific features SPATA2 object can specify feature_names-argument. variables specified way variables found feature_df argument feature_df taken. (Apart variables called barcodes, sample, x y). Eventually new features joined via dplyr::left_join() key-variables barcodes x y. Additional steps secure joining process.","code":""},{"path":"/reference/addFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add meta features — addFeatures","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  meta_df <- getMetaDf(object)  names(meta_df)  new_meta_df <-  dplyr::transmute(    .data = meta_df,    barcodes = barcodes,    new_feat = sample(letters[1:5], size = nrow(meta_df), replace = T) %>% as.factor()    )  object <- addFeatures(object, feature_df = new_meta_df)  plotSurface(object, color_by = \"new_feat\")"},{"path":"/reference/addHistoImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Add object of class HistoImage — addHistoImage","title":"Add object of class HistoImage — addHistoImage","text":"Adds objects class HistoImage list registered histology images. used within registerHistoImage().","code":""},{"path":"/reference/addHistoImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add object of class HistoImage — addHistoImage","text":"","code":"addHistoImage(object, hist_img, ...)  # S4 method for class 'SpatialData' addHistoImage(object, hist_img, overwrite = FALSE)"},{"path":"/reference/addHistoImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add object of class HistoImage — addHistoImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. hist_img object class HistoImage created createHistoImage(). ... Used absorb deprecated arguments functions. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/addHistoImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add object of class HistoImage — addHistoImage","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/addImageAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — addImageAnnotation","title":"Deprecated — addImageAnnotation","text":"Deprecated favor addSpatialAnnotation().","code":""},{"path":"/reference/addImageAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — addImageAnnotation","text":"","code":"addImageAnnotation(object, ...)"},{"path":"/reference/addInnerBorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Add holes to spatial annotations — addInnerBorder","title":"Add holes to spatial annotations — addInnerBorder","text":"methods allow addition inner border spatial annotations, creating holes.","code":""},{"path":"/reference/addInnerBorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add holes to spatial annotations — addInnerBorder","text":"","code":"addInnerBorder(object, ...)  # S4 method for class 'SPATA2' addInnerBorder(object, id, border_df, new_id = FALSE, overwrite = FALSE, ...)  # S4 method for class 'SpatialAnnotation' addInnerBorder(object, border_df, ...)"},{"path":"/reference/addInnerBorder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add holes to spatial annotations — addInnerBorder","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. id Character value. ID spatial annotation hole added. border_df data.frame contains x- y- positions vertices polygon corresponds borders whole. See details input requirements. new_id character value, stores resulting spatial annotatiton specified ID. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/addInnerBorder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add holes to spatial annotations — addInnerBorder","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/addInnerBorder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add holes to spatial annotations — addInnerBorder","text":"used SpatialAnnotation directly, variables border_df called x_orig y_orig scaled correspondingly. used SPATA2 object, variables can called x y, . case, function assumes coordinates scaled image currently active creates x_orig y_orig accordingly.","code":""},{"path":[]},{"path":"/reference/addInnerBorder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add holes to spatial annotations — addInnerBorder","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  create_circle_polygon <- function(p, r, n) {   angles <- seq(0, 2 * pi, length.out = n + 1)   x_coords <- p[1] + r * cos(angles)  y_coords <- p[2] + r * sin(angles)   polygon_df <- tibble::tibble(x = x_coords, y = y_coords)   return(polygon_df)  }  center <-  getCoordsDf(object)[c(\"x\", \"y\")] %>%  map_dbl(.f = mean)  area_circle <- create_circle_polygon(center, r = 75, n = 100)  print(area_circle)  object <- addSpatialAnnotation(object, area = list(outer = area_circle), id = \"circle\")  plotSpatialAnnotations(object, ids = \"circle\")  hole <- create_circle_polygon(center, r = 25, n = 100)  object <- addInnerBorder(object, id = \"circle\", border_df = hole, new_id = \"circle_with_hole\")  plotSpatialAnnotations(object, ids = c(\"circle\", \"circle_with_hole\"))"},{"path":"/reference/addMetaDataMol.html","id":null,"dir":"Reference","previous_headings":"","what":"Add meta variables for molecular data — addMetaDataMol","title":"Add meta variables for molecular data — addMetaDataMol","text":"function adds metadata variables given data frame object, aligning data existing molecular variables.","code":""},{"path":"/reference/addMetaDataMol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add meta variables for molecular data — addMetaDataMol","text":"","code":"addMetaDataMol(   object,   meta_var_df,   var_names = NULL,   assay_name = activeAssay(object),   na_warn = TRUE,   overwrite = FALSE )"},{"path":"/reference/addMetaDataMol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add meta variables for molecular data — addMetaDataMol","text":"object object class SPATA2 , case S4 generics, objects classes method defined. meta_var_df data frame containing new metadata variables added. data frame must contain column named molecule used key merging. columns represent metadata variables added. var_names character vector specifying columns meta_var_df added metadata variables. NULL, columns except molecule <assay_name> added. Default NULL. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). na_warn Logical value indicating whether issue warnings NAs introduced new metadata variables. Default TRUE. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/addMetaDataMol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add meta variables for molecular data — addMetaDataMol","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/addMetaDataMol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add meta variables for molecular data — addMetaDataMol","text":"input meta_var_df must satisfy following requirements: must data frame. must contain column named molecule, used key merging metadata variables existing molecular observations. columns can represent metadata variables added. columns must named \"molecule\" value assay_name. columns specified var_names must present meta_var_df. function checks existence specified metadata variables object. overwrite FALSE, ensures existing variables overwritten. NAs introduced new metadata variables, warnings issued na_warn TRUE.","code":""},{"path":"/reference/addMetaDataObs.html","id":null,"dir":"Reference","previous_headings":"","what":"Add meta variables for observations — addMetaDataObs","title":"Add meta variables for observations — addMetaDataObs","text":"function adds metadata variables given data frame object, aligning data existing observations.","code":""},{"path":"/reference/addMetaDataObs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add meta variables for observations — addMetaDataObs","text":"","code":"addMetaDataObs(   object,   meta_obs_df,   var_names = NULL,   na_warn = TRUE,   overwrite = FALSE )"},{"path":"/reference/addMetaDataObs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add meta variables for observations — addMetaDataObs","text":"object object class SPATA2 , case S4 generics, objects classes method defined. meta_obs_df data frame containing new metadata variables added. data frame must contain column named barcodes used key merging. columns represent metadata variables added. var_names character vector specifying columns meta_obs_df added metadata variables. NULL, columns except barcodes sample added. Default NULL. na_warn Logical value indicating whether issue warnings NAs introduced new metadata variables. Default TRUE. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/addMetaDataObs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add meta variables for observations — addMetaDataObs","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/addMetaDataObs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add meta variables for observations — addMetaDataObs","text":"input meta_obs_df must satisfy following requirements: must data frame. must contain column named barcodes, used key merging metadata variables existing observations. columns can represent metadata variables added. columns must named \"barcodes\" \"sample\". columns specified var_names must present meta_obs_df. function checks existence specified metadata variables object. overwrite FALSE, ensures existing variables overwritten. NAs introduced new metadata variables, warnings issued na_warn TRUE.","code":""},{"path":"/reference/addMoleculeCoordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Add molecule coordinates — addMoleculeCoordinates","title":"Add molecule coordinates — addMoleculeCoordinates","text":"Adds updates molecule coordinates specified assay given object.","code":""},{"path":"/reference/addMoleculeCoordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add molecule coordinates — addMoleculeCoordinates","text":"","code":"addMoleculeCoordinates(   object,   coordinates = NULL,   assay_name = activeAssay(object) )"},{"path":"/reference/addMoleculeCoordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add molecule coordinates — addMoleculeCoordinates","text":"object object class SPATA2 , case S4 generics, objects classes method defined. coordinates data frame containing coordinates added. data frame must contain following variables: molecule <assay_name> Identifier molecules. E.g. x_orig x:  x-coordinates (original scaled back original). y_orig y: y-coordinates (original scaled back original). assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/addMoleculeCoordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add molecule coordinates — addMoleculeCoordinates","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/addMoleculeCoordinates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add molecule coordinates — addMoleculeCoordinates","text":"function processes provided coordinates data frame ensure contains necessary variables (molecule assay name, x x_orig, y y_orig). scaled coordinates (x y) provided, scaled back original coordinate frame using image scale factor. resulting data frame nested assay modality integrated molecular metadata variables object. Results stored nested column molecular meta variable data.frame called coords.","code":""},{"path":[]},{"path":"/reference/addPointsBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Add points to base surface plot — addPointsBase","title":"Add points to base surface plot — addPointsBase","text":"Adds point layer base surface plot.","code":""},{"path":"/reference/addPointsBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add points to base surface plot — addPointsBase","text":"","code":"addPointsBase(   object,   color_by,   alpha_by = NULL,   pt_alpha = 0.75,   pt_size = 1,   pt_clrp = \"default\",   pt_clrsp = \"inferno\",   clrp_adjust = NULL,   smooth = NULL,   smooth_span = NULL,   xrange = NULL,   yrange = NULL,   scale_fct = 1 )"},{"path":"/reference/addPointsBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add points to base surface plot — addPointsBase","text":"object object class SPATA2 , case S4 generics, objects classes method defined. color_by Character value. variables color data points. pt_alpha Numeric value. Specifies degree transparency points. pt_size Numeric value. Specifies size points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. pt_clrsp color spectrum used specified variable displayed color continuous. Run validColorSpectra() see valid input. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. smooth Logical. TRUE, loess fit used smooth values. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used.","code":""},{"path":"/reference/addPointsBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add points to base surface plot — addPointsBase","text":"Plots right plotting window.","code":""},{"path":"/reference/addPolygonBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Add polygons to a base plot — addPolygonBase","title":"Add polygons to a base plot — addPolygonBase","text":"Adds polygons base plot.","code":""},{"path":"/reference/addPolygonBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add polygons to a base plot — addPolygonBase","text":"","code":"addPolygonBase(x, y, poly = NULL, color = \"black\", size = 2, scale_fct = 1)"},{"path":"/reference/addPolygonBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add polygons to a base plot — addPolygonBase","text":"x, y Numeric vectors representing x- y-coordinates vertices polygon. poly Data.frame least two variables named x y representing coordinates vertices polygon. variable section exists multiple polygons plotted based number different groups variable. Overwrites x y. color Color lines. size Width lines. scale_fct factor vertice positions scaled.","code":""},{"path":"/reference/addPolygonBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add polygons to a base plot — addPolygonBase","text":"Output graphics::polygon() directly plotted.","code":""},{"path":"/reference/addProcessedMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a processed matrix — addProcessedMatrix","title":"Add a processed matrix — addProcessedMatrix","text":"Adds processed matrix chosen molecular assay object.","code":""},{"path":"/reference/addProcessedMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a processed matrix — addProcessedMatrix","text":"","code":"addProcessedMatrix(   object,   proc_mtr,   mtr_name,   assay_name = activeAssay(object),   overwrite = FALSE,   ... )"},{"path":"/reference/addProcessedMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a processed matrix — addProcessedMatrix","text":"object object class SPATA2 , case S4 generics, objects classes method defined. mtr_name character value denotes name matrix one can refer subsequent functions via mtr_name. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). overwrite Logical value. Must TRUE allow overwriting. ... Used absorb deprecated arguments functions. expr_mtr matrix rownames correspond feature names column names correspond barcodes.","code":""},{"path":"/reference/addProcessedMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a processed matrix — addProcessedMatrix","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/addProcessedMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a processed matrix — addProcessedMatrix","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  library(Seurat)  scaled_mtr <-  CreateSeuratObject(getCountMatrix(object)) %>%  NormalizeData() %>%  ScaleData() %>%  GetAssayData(layer = \"scale.data\")  object <- addProcessedMatrix(object, proc_mtr = scaled_mtr, mtr_name = \"scaled\")  p1 <- plotSurface(object, color_by = \"METRN\")  object <- activateMatrix(object, mtr_name = \"scaled\")  p2 <- plotSurface(object, color_by = \"METRN\")  plot(p1) plot(p2)"},{"path":"/reference/addSegmentationVariable.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Segmentation Variable — addSegmentationVariable","title":"Add Segmentation Variable — addSegmentationVariable","text":"function adds new, empty segmentation variable metadata given object naming within createSpatialSegmentation().","code":""},{"path":"/reference/addSegmentationVariable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Segmentation Variable — addSegmentationVariable","text":"","code":"addSegmentationVariable(   object,   name,   init_value = \"unnamed\",   verbose = NULL,   ... )"},{"path":"/reference/addSegmentationVariable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Segmentation Variable — addSegmentationVariable","text":"object object class SPATA2 , case S4 generics, objects classes method defined. name character string specifying name segmentation variable add. init_value character string specifying initial value observation. Defaults unnnamed. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/addSegmentationVariable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Segmentation Variable — addSegmentationVariable","text":"function checks provided segmentation variable name already used different meta feature, molecule molecular signature object. name unique, adds segmentation variable object's metadata.","code":""},{"path":[]},{"path":"/reference/addSignature.html","id":null,"dir":"Reference","previous_headings":"","what":"Add molecular signature — addGeneSet","title":"Add molecular signature — addGeneSet","text":"Adds molecular signature SPATA2 object.","code":""},{"path":"/reference/addSignature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add molecular signature — addGeneSet","text":"","code":"addGeneSet(object, genes, name, class = \"UD\", overwrite = FALSE, check = TRUE)  addMetaboliteSet(   object,   metabolites,   name,   class = \"UD\",   overwrite = FALSE,   check = TRUE )  addProteinSet(   object,   proteins,   name,   class = \"UD\",   overwrite = FALSE,   check = TRUE )  addSignature(   object,   molecules,   name,   class = \"UD\",   assay_name = activeAssay(object),   overwrite = FALSE,   check = TRUE )"},{"path":"/reference/addSignature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add molecular signature — addGeneSet","text":"object object class SPATA2 , case S4 generics, objects classes method defined. name Character value. actual name signature. class Character value. class (heritage) signature. Must contain _. Defaults 'UD', short user defined. overwrite Logical value. Must TRUE allow overwriting. check Logical value. TRUE, functions checkes whether specified molecules exist raw count matrix assay throw error . Defaults TRUE. molecules, genes, proteins, metabolites Character vector. molecules signature consists . assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/addSignature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add molecular signature — addGeneSet","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/addSignature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add molecular signature — addGeneSet","text":"functions allow add molecular signatures provided object. addSignature(): Adds signature assay specified assay_name. addGeneSet():  Adds signature assay @modality = 'gene' (assay_name = 'gene'). addMetaboliteSet(): Adds signature assay @modality = 'metabolite' (assay_name = 'metabolite'). addProteinSet(): Adds signature assay @modality = 'protein' (assay_name = 'protein').","code":""},{"path":"/reference/addSignature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add molecular signature — addGeneSet","text":"","code":"library(SPATA2)  data(\"example_data\") object <- example_data$object_UKF269T_diet  # example genes of an hypothetical gene signature (gene set) genes <-  c('CYFIP1', 'SLC16A3', 'AKAP5', 'ADCY8', 'CALB2', 'GRIN1', 'NLGN4X', 'NLGN1',    'ITGA3', 'NLGN4Y', 'ELFN1', 'BSN', 'CNTN6', 'PDE4B', 'DGKI', 'LRRTM2', 'LRRTM1',    'SRPX2', 'SHANK1', 'SLC17A7')  # both, opt1 and opt2, have the same effect (addSignature() just allows to specify the # assay of interest, which is fixed to 'gene' for addGeneSet()). # opt1 object <- addSignature(object, name = \"EXCITATORY_SYNAPSE\", class = \"Custom\", molecules = genes)  # opt2 # object <- addGeneSet(object, name = \"EXCITATORY_SYNAPSE\", class = \"Custom\", genes = genes)  gs <- \"Custom_EXCITATORY_SYNAPSE\"  # visualize signature expression plotSurface(object, color_by = gs)  # extract genes of signature getGenes(object, signatures = gs)"},{"path":"/reference/addSpCorCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Add cluster results of spatial correlation results — addSpCorCluster","title":"Add cluster results of spatial correlation results — addSpCorCluster","text":"Add cluster results spatial correlation results","code":""},{"path":"/reference/addSpCorCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add cluster results of spatial correlation results — addSpCorCluster","text":"","code":"addSpCorCluster(object, cluster_list, of_sample = \"\")"},{"path":"/reference/addSpCorCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add cluster results of spatial correlation results — addSpCorCluster","text":"object valid spata-object. cluster_list list containing information results function clusterSpCorResults() returns. of_sample argument currently inactive. might reactivated spata-objects can store one sample.","code":""},{"path":"/reference/addSpCorCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add cluster results of spatial correlation results — addSpCorCluster","text":"spata object containing set input.","code":""},{"path":"/reference/addSpCorCluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add cluster results of spatial correlation results — addSpCorCluster","text":"set*()-functions offer save way set certain slots spata-object. check input validity effectively overwrite everything occupying slot set - use caution.","code":""},{"path":"/reference/addSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and add a spatial annotation manually — addSpatialAnnotation","title":"Create and add a spatial annotation manually — addSpatialAnnotation","text":"Adds spatial annotations using polygon data.frames.","code":""},{"path":"/reference/addSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and add a spatial annotation manually — addSpatialAnnotation","text":"","code":"addSpatialAnnotation(object, ...)  # S4 method for class 'SPATA2' addSpatialAnnotation(   object,   tags,   area,   id = NULL,   overwrite = FALSE,   class = \"SpatialAnnotation\",   ... )  # S4 method for class 'SpatialData' addSpatialAnnotation(   object,   tags,   area,   id = NULL,   overwrite = FALSE,   class = \"SpatialAnnotation\",   ... )"},{"path":"/reference/addSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and add a spatial annotation manually — addSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional slot content given methods::new() constructing SpatialAnnotation object. tags character vector tags spatial annotation. area named list data.frames numeric variables x y x_orig y_orig. Observations correspond vertices polygons needed represent spatial annotation. Must contain exactly one slot named outer sets outer border spatial annotation. Can contain multiple slots named inner (suffixed) numbers correspond inner polygons - holes within annotation. id Character value. ID spatial annotation. NULL, ID annotation created combining string 'spat_ann' index new annotation list annotations. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/addSpatialAnnotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and add a spatial annotation manually — addSpatialAnnotation","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/addSpatialAnnotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and add a spatial annotation manually — addSpatialAnnotation","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  create_circle_polygon <- function(p, r, n) {   angles <- seq(0, 2 * pi, length.out = n + 1)   x_coords <- p[1] + r * cos(angles)  y_coords <- p[2] + r * sin(angles)   polygon_df <- tibble::tibble(x = x_coords, y = y_coords)   return(polygon_df)  }  center <-  getCoordsDf(object)[c(\"x\", \"y\")] %>%  map_dbl(.f = mean)  area_circle <- create_circle_polygon(center, r = 75, n = 100)  print(area_circle)  object <- addSpatialAnnotation(object, area = list(outer = area_circle), id = \"circle\")  plotSpatialAnnotations(object, ids = \"circle\")  hole <- create_circle_polygon(center, r = 25, n = 100)  object <- addInnerBorder(object, id = \"circle\", border_df = hole, new_id = \"circle_with_hole\")  plotSpatialAnnotations(object, ids = c(\"circle\", \"circle_with_hole\"))"},{"path":"/reference/addSpatialTrajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and add a spatial trajectory — addSpatialTrajectory","title":"Create and add a spatial trajectory — addSpatialTrajectory","text":"Adds spatial trajectory using coordinate input.","code":""},{"path":"/reference/addSpatialTrajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and add a spatial trajectory — addSpatialTrajectory","text":"","code":"addSpatialTrajectory(   object,   id,   width = NULL,   traj_df = NULL,   start = NULL,   end = NULL,   comment = base::character(1),   overwrite = FALSE,   ... )"},{"path":"/reference/addSpatialTrajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and add a spatial trajectory — addSpatialTrajectory","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value. id spatial trajectory. width Distance measure. width spatial trajectory. start, end Numeric vectors length two. Can provided instead segment_df. , start corresponds x y end corresponds xend yend segment. overwrite Logical value. Must TRUE allow overwriting. ... Used absorb deprecated arguments functions. segment_df Data.frame x y variables corresponding vertices trajectory. case three rows trajectory assumed curve. vertices List numeric vectors length two NULL. list, sets additional vertices along trajectory.","code":""},{"path":"/reference/addSpatialTrajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and add a spatial trajectory — addSpatialTrajectory","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/addSpatialTrajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and add a spatial trajectory — addSpatialTrajectory","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  object <-    addSpatialTrajectory(      object = object,      id = \"cross_sample\",      width = \"1.5mm\",      start = c(x = \"1.35mm\", y = \"4mm\"),      end = c(x = \"6.25mm\", y = \"4mm\"),      overwrite = TRUE    )   plotSpatialTrajectories(object, ids = \"cross_sample\")"},{"path":"/reference/addTissueOutlineBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Add polygons to a base plot — addTissueOutlineBase","title":"Add polygons to a base plot — addTissueOutlineBase","text":"Adds polygons base plot.","code":""},{"path":"/reference/addTissueOutlineBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add polygons to a base plot — addTissueOutlineBase","text":"","code":"addTissueOutlineBase(object, ...)  # S4 method for class 'HistoImage' addTissueOutlineBase(   object,   by_section = FALSE,   persp = \"coords\",   line_alpha = 0.9,   line_color = \"black\",   line_size = 1,   line_type = \"solid\",   scale_fct = 1,   init = list(),   rect = FALSE,   ... )"},{"path":"/reference/addTissueOutlineBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add polygons to a base plot — addTissueOutlineBase","text":"scale_fct factor vertice positions scaled. x, y Numeric vectors representing x- y-coordinates vertices polygon. poly Data.frame least two variables named x y representing coordinates vertices polygon. variable section exists multiple polygons plotted based number different groups variable. Overwrites x y. color Color lines. size Width lines.","code":""},{"path":"/reference/addTissueOutlineBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add polygons to a base plot — addTissueOutlineBase","text":"Output graphics::polygon() directly plotted.","code":""},{"path":"/reference/addVarToCoords.html","id":null,"dir":"Reference","previous_headings":"","what":"Add variable to coordinates data.frame — addVarToCoords","title":"Add variable to coordinates data.frame — addVarToCoords","text":"Adds variables coordinates data.frame slot @coordinates.","code":""},{"path":"/reference/addVarToCoords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add variable to coordinates data.frame — addVarToCoords","text":"","code":"addVarToCoords(object, ...)  # S4 method for class 'SpatialData' addVarToCoords(object, var_df, vars, overwrite = FALSE)"},{"path":"/reference/addVarToCoords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add variable to coordinates data.frame — addVarToCoords","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. var_df Data.frame variables merge. vars Character vector. Subset variables add. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/addVarToCoords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add variable to coordinates data.frame — addVarToCoords","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/add_dbscan_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Add tissue section variable to coordinate data.frame — add_dbscan_variable","title":"Add tissue section variable to coordinate data.frame — add_dbscan_variable","text":"Leverages dbscan::dbscan() identify tissue sections slide group barcode spots accordingly. Required approximate outline tissue section(s).","code":""},{"path":"/reference/add_dbscan_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add tissue section variable to coordinate data.frame — add_dbscan_variable","text":"","code":"add_dbscan_variable(   coords_df,   eps,   minPts = 3,   name = \"dbscan\",   x = \"x\",   y = \"y\",   min_cluster_size = 1,   ... )  add_tissue_section_variable(coords_df, ccd, minPts = 3, ...)"},{"path":"/reference/add_dbscan_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add tissue section variable to coordinate data.frame — add_dbscan_variable","text":"coords_df Data.frame x y variable. eps Distance measure. Given eps dbscan::dbscan(). Determines size (radius) epsilon neighborhood. minPts Numeric value. Given dbscan::dbscan(). Determines number minimum points required eps neighborhood core points (including point ) name Name added variable. ... silently drop deprecated arguments.","code":""},{"path":"/reference/add_dbscan_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add tissue section variable to coordinate data.frame — add_dbscan_variable","text":"Data.frame additional variable containing numbers. 0 means spot connected spot (probably artefact). 1-n corresponds tissue sections.","code":""},{"path":"/reference/add_dbscan_variable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add tissue section variable to coordinate data.frame — add_dbscan_variable","text":"add_dbscan_variable() working horse. add_tissue_section_variable() specific defaults.","code":""},{"path":"/reference/add_dbscan_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add tissue section variable to coordinate data.frame — add_dbscan_variable","text":"","code":"library(SPATA2) library(EBImage) library(tidyverse)  data(\"example_data\")  object <- example_data$object_LMU_MCI_diet  coords_df <-  getCoordsDf(object) %>%  add_dbscan_variable(eps = recDbscanEps(object), name = \"section\")  plotSurface(coords_df, color_by = \"section\")"},{"path":"/reference/add_edge_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Add edge variable to coordinate data.frame — add_edge_variable","title":"Add edge variable to coordinate data.frame — add_edge_variable","text":"Adds variable called edge input data.frame tells observation belongs points lie edge covered area.","code":""},{"path":"/reference/add_edge_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add edge variable to coordinate data.frame — add_edge_variable","text":"","code":"add_edge_variable(coords_df, id_var = \"barcodes\")"},{"path":"/reference/add_edge_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add edge variable to coordinate data.frame — add_edge_variable","text":"id_var Character. Variable identifies observation. input_df data.frame two numeric variables called x y variable denoted id_var.","code":""},{"path":"/reference/add_edge_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add edge variable to coordinate data.frame — add_edge_variable","text":"Input data.frame additional logical variable edge.","code":""},{"path":"/reference/add_edge_variable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add edge variable to coordinate data.frame — add_edge_variable","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  coords_df <-  getCoordsDf(object) %>%  add_edge_variable()  plotSurface(coords_df, color_by = \"edge\")"},{"path":"/reference/add_grid_variable.html","id":null,"dir":"Reference","previous_headings":"","what":"Add grid variable to coordinate data.rame — add_grid_variable","title":"Add grid variable to coordinate data.rame — add_grid_variable","text":"function adds grid variable data frame containing x y coordinates. grid variable represents grid cell coordinate point falls.","code":""},{"path":"/reference/add_grid_variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add grid variable to coordinate data.rame — add_grid_variable","text":"","code":"add_grid_variable(coords_df, nr, grid_name = \"grid\", keep_temp = FALSE)"},{"path":"/reference/add_grid_variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add grid variable to coordinate data.rame — add_grid_variable","text":"coords_df data frame containing x y coordinates. nr number grid cells required. square root number determines number breaks x y axes. grid_name name new grid variable added data frame. Default \"grid\". keep_temp Logical. TRUE, temporary variables used process (x_bins.temp y_bins.temp) retained output data frame. Default FALSE.","code":""},{"path":"/reference/add_grid_variable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add grid variable to coordinate data.rame — add_grid_variable","text":"data frame added grid variable. library(SPATA2) data(\"example_data\") object <- example_data$object_UKF275T_diet coords_df <- getCoordsDf(object) %>% add_grid_variable(nr = 50) print(coords_df)","code":""},{"path":"/reference/add_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Add models to a data.frame — add_models","title":"Add models to a data.frame — add_models","text":"Add models data.frame","code":""},{"path":"/reference/add_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add models to a data.frame — add_models","text":"","code":"add_models(   input_df,   var_order,   model_subset = NULL,   model_remove = NULL,   model_add = NULL,   verbose = TRUE )"},{"path":"/reference/add_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add models to a data.frame — add_models","text":"input_df Data.frame least three columns. values contains actual values. variables contains variable belonging values. var_order contains integers 1 n corresponding ordering values. var_order Character value. variable corresponds order values. model_subset Character value. Used regex subset models. Use validModelNames() obtain model names known SPATA2 showModels() visualize . model_remove Character value. Used regex remove models supposed included. model_add Named list. Every slot list must either formula containing function takes numeric vector input returns numeric vector length input vector. numeric vector length input vector. Test models showModels().","code":""},{"path":"/reference/add_noise_to_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Noise to a Model — add_noise_to_model","title":"Add Noise to a Model — add_noise_to_model","text":"function adds adjustable noise model maintaining specified level randomness.","code":""},{"path":"/reference/add_noise_to_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Noise to a Model — add_noise_to_model","text":"","code":"add_noise_to_model(model, random, nl)"},{"path":"/reference/add_noise_to_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Noise to a Model — add_noise_to_model","text":"model numeric vector representing original model. random numeric vector representing random noise added. nl numeric value specifying noise level percentage.","code":""},{"path":"/reference/add_noise_to_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Noise to a Model — add_noise_to_model","text":"numeric vector representing model added noise.","code":""},{"path":"/reference/add_noise_to_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Noise to a Model — add_noise_to_model","text":"function combines model random noise allowing control degree randomness resulting data. 'nl' parameter defines noise level percentage, higher value adds randomness model. function scales model random noise vectors based specified noise level, ensuring original model remains significant component. merges scaled vectors create final data desired noise level.","code":""},{"path":"/reference/add_wh.html","id":null,"dir":"Reference","previous_headings":"","what":"Add width and height or x and y — add_wh","title":"Add width and height or x and y — add_wh","text":"Adds image dimensions width height variables data.frame x y corodiantes vice versa.","code":""},{"path":"/reference/add_wh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add width and height or x and y — add_wh","text":"","code":"add_wh(df, hrange = NULL)  add_xy(df, x = \"x\", y = \"y\")"},{"path":"/reference/add_wh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add width and height or x and y — add_wh","text":"df data.frame contains least two numeric variables x y width height.","code":""},{"path":"/reference/add_wh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add width and height or x and y — add_wh","text":"Input data.frame two additional variables named width height x y.","code":""},{"path":"/reference/adjustDefaultInstructions.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — adjustDefaultInstructions","title":"Deprecated — adjustDefaultInstructions","text":"Deprecated favor setDefault().","code":""},{"path":"/reference/adjustDefaultInstructions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — adjustDefaultInstructions","text":"","code":"adjustDefaultInstructions(...)"},{"path":"/reference/adjustGeneSetList.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Gene Set List — adjustGeneSetList","title":"Adjust Gene Set List — adjustGeneSetList","text":"function adjusts gene set list (GSL) given object based specified limits.","code":""},{"path":"/reference/adjustGeneSetList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Gene Set List — adjustGeneSetList","text":"","code":"adjustGeneSetList(object, limits = 50)"},{"path":"/reference/adjustGeneSetList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Gene Set List — adjustGeneSetList","text":"object object class SPATA2 , case S4 generics, objects classes method defined. limits numeric value representing threshold percentage gene set inclusion (default: 50).","code":""},{"path":"/reference/adjustGeneSetList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Gene Set List — adjustGeneSetList","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/adjustGeneSetList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Gene Set List — adjustGeneSetList","text":"function calculates proportion genes gene set relative total number genes object. Gene sets proportion greater equal specified limit retained, others removed.","code":""},{"path":[]},{"path":"/reference/alignImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Align histology images — alignImage","title":"Align histology images — alignImage","text":"Aligns image reference image. See details information process.","code":""},{"path":"/reference/alignImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align histology images — alignImage","text":"","code":"alignImage(object, ...)  # S4 method for class 'SPATA2' alignImage(   object,   img_name,   opt = \"set\",   angle = NULL,   flip_h = NULL,   flip_v = NULL,   stretch_h = NULL,   stretch_v = NULL,   transl_h = NULL,   transl_v = NULL )  # S4 method for class 'SpatialData' alignImage(   object,   img_name,   opt = \"set\",   angle = NULL,   flip_h = NULL,   flip_v = NULL,   stretch_h = NULL,   stretch_v = NULL,   transl_h = NULL,   transl_v = NULL )  # S4 method for class 'HistoImage' alignImage(   object,   opt = \"set\",   angle = NULL,   flip_h = NULL,   flip_v = NULL,   stretch_h = NULL,   stretch_v = NULL,   transl_h = NULL,   transl_v = NULL )  alignImageAuto(object, ...)  # S4 method for class 'SpatialData' alignImageAuto(   object,   img_name,   step = 0.01,   stop_at = 25,   plot_progress = TRUE,   verbose = TRUE )  alignImageInteractive(object, ...)  # S4 method for class 'SPATA2' alignImageInteractive(object)  # S4 method for class 'SpatialData' alignImageInteractive(object, window_size = \"800px\")"},{"path":"/reference/alignImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align histology images — alignImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). opt Character value. Either 'add' 'set'. Decides whether input adjustments added existing ones set (replacing ). angle Numeric value ranging 0-359. Determines /much image supposed rotated. Always rotates clockwise direction. flip_h, flip_v Logical values. Determine image supposed flipped around horizontal vertical axis. stretch_h, stretch_v Numeric values. Determine image supposed stretched along horizontal vertical axis. transl_h, transl_v Numeric values. Determine image supposed translated along hhorizontal vertical axis. step Numeric value specifying accuracy alignment via vertical horizontal translation. step >= 1, interpreted pixel value. example, step = 2 translates image 2 pixels right, 4 pixels right, . step < 1, final step value calculated round(side.length * step, digits = 0) side.length equal height width reference image. See details . verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) stop_after Numeric value specifying maximum number consecutive iterations optimization image translation without improvement. stop_at >= 1, interpreted absolute number attempts. instance, setting stop_after = 25 makes function stop 25 iterations without improvement. stop_at < 1, maximum number consecutive iterations without improvement allowed calculated total number translations possible times stop_at. See details .","code":""},{"path":"/reference/alignImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align histology images — alignImage","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/alignImage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Align histology images — alignImage","text":"transformations required align image X reference image stored instructions HistoImage container respective image. precisely, slot @transformations. image remains loaded. transformations applied upon extraction image. Use getImageTransformations() otbain instructions currently stored.","code":""},{"path":"/reference/alignImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Align histology images — alignImage","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet   # ----- prepare library(SPATA2) library(EBImage) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  img_bad <-   getImage(object) %>%   translate(v = c(25, 20), bg.col = \"green\")  #----- opt = \"set\" (the default) object <- registerImage(object, img = img_bad, img_name = \"bad\", overwrite = T) object <- activateImage(object, img_name = \"bad\")  plotSurface(object, pt_clr = \"red\", display_image = T)  object <- alignImage(object, img_name = \"bad\", opt = \"set\", transl_h = -25, transl_v = -20)  plotSurface(object, pt_clr = \"red\", display_image = T)  #----- opt = \"add\" object <- registerImage(object, img = img_bad, img_name = \"bad\", overwrite = T) object <- activateImage(object, img_name = \"bad\")  plotSurface(object, pt_clr = \"red\", display_image = T)  object <- alignImage(object, img_name = \"bad\", opt = \"add\", transl_h = -15, transl_v = -10)  plotSurface(object, pt_clr = \"red\", display_image = T)  object <- alignImage(object, img_name = \"bad\", opt = \"add\", transl_h = -10, transl_v = -10)  plotSurface(object, pt_clr = \"red\", display_image = T)  # ----- interactive  if(FALSE){ # diffused, run separately    object <- alignImageInteractive(object)  }"},{"path":"/reference/allColorpalettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Valid colorpanels & -spectra — allColorpalettes","title":"Valid colorpanels & -spectra — allColorpalettes","text":"Valid colorpanels & -spectra","code":""},{"path":"/reference/allColorpalettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Valid colorpanels & -spectra — allColorpalettes","text":"","code":"allColorpalettes()  allColorspectra()"},{"path":"/reference/all_color_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palette names — all_color_palettes","title":"Color palette names — all_color_palettes","text":"Returns currently valid color panels -spectra.","code":""},{"path":"/reference/all_color_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palette names — all_color_palettes","text":"","code":"all_color_palettes()  all_color_spectra()"},{"path":"/reference/all_color_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color palette names — all_color_palettes","text":"named list.","code":""},{"path":"/reference/all_color_palettes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color palette names — all_color_palettes","text":"Discrete color panels derive ggsci-package. Continuous colorspectra derive colorspace-package.","code":""},{"path":"/reference/append_polygon_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Append polygon df — append_polygon_df","title":"Append polygon df — append_polygon_df","text":"Appends df list polygon data.frames names accordingly case complex polygons.","code":""},{"path":"/reference/append_polygon_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append polygon df — append_polygon_df","text":"","code":"append_polygon_df(lst, plg, allow_intersect = TRUE, in_outer = TRUE, ...)"},{"path":"/reference/append_polygon_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append polygon df — append_polygon_df","text":"lst Polygon list new polygon appended . plg New polygon data.frame.","code":""},{"path":"/reference/are_all_area_or_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Test area or distance input — are_all_area_or_dist","title":"Test area or distance input — are_all_area_or_dist","text":"Tests input can safely converted distance area values.","code":""},{"path":"/reference/are_all_area_or_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test area or distance input — are_all_area_or_dist","text":"","code":"are_all_area_or_dist(input, error = FALSE)  are_all_dist(input, error = FALSE)"},{"path":"/reference/are_all_area_or_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test area or distance input — are_all_area_or_dist","text":"input Character vector. Elements must match requirements SPATA2 area framework. See details information.","code":""},{"path":"/reference/are_all_area_or_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test area or distance input — are_all_area_or_dist","text":"Logical vector length input /error verbose TRUE.","code":""},{"path":"/reference/are_all_area_or_dist.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Test area or distance input — are_all_area_or_dist","text":"returns TRUE values valid distance inputs values valid area inputs.","code":""},{"path":"/reference/are_all_area_or_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test area or distance input — are_all_area_or_dist","text":"","code":"are_all_area_or_dist(c(\"2mm\", \"2cm\", \"3px\", \"4.5mm2\")) # TRUE  are_all_area_or_dist(c(\"2mm\", \"2CCm\", \"3px\", \"4.5mm2\")) # FALSE  are_all_area_or_dist(c(\"2mm\", \"2CCm\", \"3px\", \"4.5mm2\"), error = T) # FALSE -> error"},{"path":"/reference/argument_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Argument dummy — argument_dummy","title":"Argument dummy — argument_dummy","text":"Argument dummy","code":""},{"path":"/reference/argument_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Argument dummy — argument_dummy","text":"","code":"argument_dummy()"},{"path":"/reference/argument_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Argument dummy — argument_dummy","text":"across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. angle_span Numeric vector length two. Defines range angle values observation might related center spatial annotation, included. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). bcsp_rm Character vector NULL. character, specifies barcode-spots removed analysis plotting. (Deprecated favor bcs_rm). bcs_rm Character vector NULL. character, specifies observations removed prior analysis visualization barcode. by_section Logical value. TRUE, outline used acknowledges potential multiple tissue sections. FALSE, outline used simply outlines everything one single polygon. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. clrsp Character value. Specifies color spectrum used represent continuous values numeric variables. Run validColorSpectra() obtain valid input options. color_by Character value. variables color data points. concavity Numeric value. Given argument concavity concaveman::concaveman(). Determines relative measure concavity. 1 results relatively detailed shape, Infinity results convex hull. can use values lower 1, can produce pretty crazy shapes. dir Character value. chosen directory. See details possible requirements. discrete_feature Character value. Specifies name grouping variable interest. Use getGroupingOptions() obtain valid input options. display_facets Logical value. set TRUE plot split via ggplot2::facet_wrap() variable gets subplot. display_points Logical value. set TRUE points used additionally display results. display_ribbon Logical value. TRUE, ribbon displayed around main line plot visualizing uncertainty using standard deviation. display_title Logical value. set TRUE informative title displayed. eps Distance measure. Given eps dbscan::dbscan(). Determines size (radius) epsilon neighborhood. error Logical. TRUE input invalid function throws error. expand_x, expand_y Given argument expand ggplot2:scale_x/y_continuous(). expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information. expand_outline Distance measure outline area expanded. format Character value. Either 'long' 'wide'. Defaults 'wide'. 'wide' variable gets column.  'long', data.frame organized column called variables contains variable names column called 'values' contains values. ggpLayers List ggproto-objects added plot. Skim ggpLayer*()-functions options. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. grouping_variable Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. h Numeric value vector NULL (see details ). Denotes height dendrogom cut. hline_alpha, hline_color, hline_size, hline_type Parameters given ggplot2::geom_hline() control appearance vertical lines plot. img_alpha Numeric value. Sets transparency image. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). img_names Character vector. names images interest. incl_edge Logical value. TRUE, function includes tissue edge (see identifyTissueOutline()) visualization removes parts outline transgress tissues edge. incr_vert Logical value. TRUE, number vertices polygon plotted increased linear interpolation. can lead smoother visualization also increased runtime. inner Logical value. applies image annotation contains secondary image annotation within area. FALSE, inner borders image annotation included output. k Numeric value vector NULL (see details ). Denotes number clusters hierarchical tree supposed split. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. method_gs Character value. method according gene sets handled specified character length one. can either 'mean one 'gsva', 'ssgsea', 'zscore', 'plage'. latter four given gsva::GSVA(). method_padj Character value. method adjusted p-values calculated. Use validPadjMethods() obtain valid input options. minPts Numeric value. Given dbscan::dbscan(). Determines number minimum points required eps neighborhood core points (including point ) modality Character value. molecular modality interst. mtr_name Character value. name matrix interest. Defaults active matrix assay, denoted activateMatrix(). n_bins_angle Numeric value. number bins observations categorized variable bins_angle. n_bcsp Numeric value. Specifies sample size barcode-spots can set prevent overplotting. n_bins Numeric value. Specifies exact number bins barcodes binned . n_gsets Numeric value. Maximal number gene sets whose results included. first n_gsets included starting one lowest significance value. normalize Logical. set TRUE values scaled 0-1. Hint: Variables uniformly expressed can scaled discarded. n_pcs Numeric value NULL. numeric, specifies number principal components use. NULL, principal components used (computed runPCA()). nrow, ncol Numeric values NULL. Used arrange multiple plots. line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. line_type Character. line type. One 'blank', 'solid', 'dashed', 'dotted', 'dotdash', 'longdash' 'twodash'. linesize Numeric value. size line(s) plotted. object object class SPATA2 , case S4 generics, objects classes method defined. order Logical value. TRUE, data points ordered according values beeing plotted. order_by Character value NULL. character, specified variable used order data points. order_desc Logical value. TRUE, reverses arrangement specified via order_by /order. outer Logical value. applies image annotation contains secondary image annotation within area. FALSE, outer border image annotation included output. overwrite Logical value. Must TRUE allow overwriting. pt_alpha Numeric value. Specifies degree transparency points. pt_clr Character value. Specifies color points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. pt_clrsp color spectrum used specified variable displayed color continuous. Run validColorSpectra() see valid input. pt_size Numeric value. Specifies size points. rect_alpha alpha transparency level rectangle's border rect_color color rectangle's border. rect_linesize size line used rectangle's border. rect_linetype type line used rectangle's border. relevel Logical value. set TRUE input order across_subset determines order groups interest displayed. Groups included dropped affects colors displayed. resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). sc_input Data.frame contains results single cell deconvolution. Must least three columns: x :  numeric. Position cell x axis pixel., y : numeric. Position cell y axis pixel., cell_type : factor Cell type cell. scales, ncol, nrow Affects way subplots displayed. sctm_interpolate, sctm_pixels Given corresponding arguments scattermore::geom_scattermore(). Note: increasing sctm_pixels point size must adjusted argument pt_size. sgmt_alpha, sgmt_color, sgmt_size, sgmt_type Parameters given ggplot2::geom_segment() control appearance segments plot. section_subset Character vector NULL. character, specifies tissue sections interest filters output accordingly. signif_var Character value. Determines considered checking significance. Either 'pval' (p-Value) 'fdr' (False Discovery Rate). signif_threshold Numeric value. Significance values signif_threshold included. simplify Logical. set TRUE output list simplified vector possible. set FALSE list returned. smooth Logical. TRUE, loess fit used smooth values. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). square Logical value. image annotations come variable shapes different horizontal vertical diameters. Therefore, height width image section usually equal. square = TRUE, cropped section image contains annotated structure forced square: bigger diameter taken default. E.g. horizontal diameter image annotation 1mm vertical diameter 1.5mm, output image height width 1.5mm. , terms coordinates, x-range y-range 1.5mm. Processing image output depending argument expand happens afterwards. summarize_with Character value. Name function summarize. spatial_method Character value. name spatial method underlies experiment. Must one validSpatialMethods(). Defaults 'Unknown'. tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. test Character value. One c(''. '', 'identical', 'not_identical', 'none'). Specifies input tags used select spatial annotations. See section Selection spatial annotations information. text_alpha, text_color, text_nudge_x, text_nudge_y, text_size, text_type Parameters given ggplot2::geom_text() control appearance text plot. transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object. transform_with List NULL. list, can used transform continuous variables usage. Names list slots refer variable. content slot refers transforming functions. E.g variable interest GFAP gene expression, following work: Single function: transform_with = log10, Multiple functions: transform_with = list(GFAP = list(log10, log2) case plotting: Useful want apply one transformation variables mapped plotting aesthetics. Input transform_with applied respective <aes>_trans argument. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. use_scattermore Logical value. TRUE, data points plotted scattermore::geom_scattermore() allows quick plotting several thousand data points. number data points plotted bigger 10.000 used anyway. variables Character vector. names data variables interest. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) vline_alpha, vline_color, vline_size, vline_type Parameters given ggplot2::geom_vline() control appearance vertical lines plot. whole_sample Logical. TRUE, normalization values used takes place light complete sample. x_nth Numeric value. number breaks/labels x-axis becomes high x_nth can used reduce . x_nth 1, every label kept. 2, every second label kept. 3, every third label kept. . xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/arrange_as_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange observations as polygon — arrange_as_polygon","title":"Arrange observations as polygon — arrange_as_polygon","text":"Arranges spatial observations angle center order deal polygon. Works assumptions observations vertices polygon outline tissue section roughly circular.","code":""},{"path":"/reference/arrange_as_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange observations as polygon — arrange_as_polygon","text":"","code":"arrange_as_polygon(input_df, use = \"angle\")"},{"path":"/reference/arrange_as_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange observations as polygon — arrange_as_polygon","text":"input_df Data.frame least two numeric variables named x y.","code":""},{"path":"/reference/arrange_as_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange observations as polygon — arrange_as_polygon","text":"","code":"library(tidyverse)   object <- downloadPubExample(\"313_T\")   pt_size <- getDefault(object, \"pt_size\")   outline_df <- getTissueOutlineDf(object, remove = FALSE)   print(outline_df)   plotSurface(outline_df, color_by = \"outline\")   outline_only <- filter(outline_df, outline)   print(outline_only)   plotSurface(object) +   geom_point_fixed(data = outline_only, mapping = aes(x = x, y = y), color = \"red\", size = pt_size)   # fails due to inadequate sorting of observations  plotSurface(object) +   geom_polygon(data = outline_only, mapping = aes(x = x, y = y), color = \"red\", alpha = 0.4)   # calculate (and arrange by) angle to center  outline_only_arr <- arrange_as_polygon(input_df = outline_only)   plotSurface(object) +   geom_point_fixed(    data = outline_only_arr,    mapping = aes(x = x, y = y, color = atc),    size = pt_size    )   # works  plotSurface(object) +   geom_polygon(data = outline_only_arr, mapping = aes(x = x, y = y), color = \"red\", alpha = 0.4)"},{"path":"/reference/asGiotto.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform SPATA2 object to Giotto object — asGiotto","title":"Transform SPATA2 object to Giotto object — asGiotto","text":"Transforms SPATA2 object object object class Giotto. See details information.","code":""},{"path":"/reference/asGiotto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform SPATA2 object to Giotto object — asGiotto","text":"","code":"asGiotto(object, transfer_features = TRUE, verbose = NULL)"},{"path":"/reference/asGiotto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform SPATA2 object to Giotto object — asGiotto","text":"object Objects classes method defined. transfer_features, transfer_meta_data Logical character. Specifies meta/feature, e.g clustering, data input object transferred output object. TRUE, variables feature/meta data.frame transferred. character, named variables transferred. FALSE, none transferred. verbose Logical. TRUE, progress messages printed. Default TRUE.","code":""},{"path":"/reference/asGiotto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform SPATA2 object to Giotto object — asGiotto","text":"object class Giotto.","code":""},{"path":"/reference/asGiotto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform SPATA2 object to Giotto object — asGiotto","text":"object created using count matrix input well coordinates. image found transferred, . processing done (e.g. Giotto::normalizeGiotto(), Giotto::runPCA()).","code":""},{"path":"/reference/asSPATA2.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform miscellaneous objects to SPATA2 objects — asSPATA2","title":"Transform miscellaneous objects to SPATA2 objects — asSPATA2","text":"S4 generic converts miscellaneous objects SPATA2 object, transferring relevant data metadata.","code":""},{"path":"/reference/asSPATA2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform miscellaneous objects to SPATA2 objects — asSPATA2","text":"","code":"asSPATA2(object, ...)  # S4 method for class 'giotto' asSPATA2(   object,   sample_name,   coordinates,   image_ebi,   spatial_method,   transfer_meta_data = TRUE,   verbose = TRUE,   ... )  # S4 method for class 'Seurat' asSPATA2(   object,   sample_name,   platform = \"Undefined\",   assay_name = NULL,   image_name = NULL,   image_dir = NULL,   transfer_meta_data = TRUE,   transfer_dim_red = TRUE,   count_mtr_name = \"counts\",   proc_mtr_name = \"scale.data\",   modality = \"gene\",   scale_with = \"lowres\",   verbose = TRUE )"},{"path":"/reference/asSPATA2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform miscellaneous objects to SPATA2 objects — asSPATA2","text":"object Objects classes method defined. sample_name Character. name sample. transfer_meta_data Logical. TRUE, metadata transferred. Default TRUE. verbose Logical. TRUE, progress messages printed. Default TRUE. platform Character. platform used experiment. one names(spatial_methods). assay_name Character. name Seurat assay containing matrices interest. NULL, Seurat's default assay used. image_name Character. name image Seurat object transferred. NULL, function attempt use available image throw error multiple images found. image_dir Character. directory image stored. Default NULL. transfer_dim_red Logical. TRUE, dimensionality reduction data (PCA, t-SNE, UMAP) transferred. Default TRUE. count_mtr_name Character. name count matrix layer Seurat object. Default \"counts\". proc_mtr_name Character. name processed matrix layer Seurat object. Default \"scale.data\". modality Character. modality data (e.g., \"gene\"). Default \"gene\". scale_with Character. scale factor use image scaling. Default \"lowres\".","code":""},{"path":"/reference/asSPATA2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform miscellaneous objects to SPATA2 objects — asSPATA2","text":"SPATA2 object containing converted data.","code":""},{"path":"/reference/asSPATA2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform miscellaneous objects to SPATA2 objects — asSPATA2","text":"","code":"# ----- example for Seurat conversion library(SPATA2) library(Seurat)  seurat_object <- example_data$seurat_object  spata_object <-  asSPATA2(   object = seurat_object,     sample_name = \"gbm\",     image_name = \"slice1\",     platform = \"VisiumSmall\",    modality = \"gene\"   )  # with Seurat SpatialFeaturePlot(seurat_object, \"nCounts_Spatial\")  # with SPATA2 plotSurface(spata_object, \"nCounts_Spatial\")"},{"path":"/reference/asSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform SPATA2 object to Seurat object — asSeurat","title":"Transform SPATA2 object to Seurat object — asSeurat","text":"Transforms SPATA2 object object class Seurat. See details information.","code":""},{"path":"/reference/asSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform SPATA2 object to Seurat object — asSeurat","text":"","code":"asSeurat(   object,   process = TRUE,   transfer_features = TRUE,   assay_name = \"Spatial\",   image_name = \"slice1\",   verbose = NULL )"},{"path":"/reference/asSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform SPATA2 object to Seurat object — asSeurat","text":"object object class SPATA2 , case S4 generics, objects classes method defined. process Logical value. TRUE, count matrix processed. See details . Use getInitiationInfo() obtain argument input SPATA2 object initiation. assay_name, image_name Character values. Define name refer assay image Seurat object. Defaults default Seurat package. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/asSeurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform SPATA2 object to Seurat object — asSeurat","text":"object class Seurat.","code":""},{"path":"/reference/asSeurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform SPATA2 object to Seurat object — asSeurat","text":"","code":"library(SPATA2) library(Seurat)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  seurat_obj <- asSeurat(object)  class(seurat_obj)"},{"path":"/reference/asSingleCellExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform SPATA2 object to SingleCellExperiment object — asSingleCellExperiment","title":"Transform SPATA2 object to SingleCellExperiment object — asSingleCellExperiment","text":"Transforms SPATA2 object object class SingleCellExperiment. See details information.","code":""},{"path":"/reference/asSingleCellExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform SPATA2 object to SingleCellExperiment object — asSingleCellExperiment","text":"","code":"asSingleCellExperiment(   object,   assay_name = activeAssay(object),   bayes_space = FALSE )"},{"path":"/reference/asSingleCellExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform SPATA2 object to SingleCellExperiment object — asSingleCellExperiment","text":"object object class SPATA2 , case S4 generics, objects classes method defined. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). bayes_space Logical. TRUE, function creates object fitted requirements BayesSpace pipeline.","code":""},{"path":"/reference/asSingleCellExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform SPATA2 object to SingleCellExperiment object — asSingleCellExperiment","text":"object class SingleCellExperiment.","code":""},{"path":"/reference/asSingleCellExperiment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform SPATA2 object to SingleCellExperiment object — asSingleCellExperiment","text":"Output object contains count matrix slot @assays feature data.frame combined coordinates slot @colData. Slot @metadata list contains image object.","code":""},{"path":"/reference/asSingleCellExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform SPATA2 object to SingleCellExperiment object — asSingleCellExperiment","text":"","code":"library(SPATA2) library(SingleCellExperiment)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  sce <- asSingleCellExperiment(object)  class(sce)"},{"path":"/reference/asSpatialTrajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to SpatialTrajectory — asSpatialTrajectory","title":"Transform to SpatialTrajectory — asSpatialTrajectory","text":"Transforms old spatial trajectory class new one.","code":""},{"path":"/reference/asSpatialTrajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to SpatialTrajectory — asSpatialTrajectory","text":"","code":"asSpatialTrajectory(object, ...)"},{"path":"/reference/asSummarizedExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform SPATA2 object to SummarizedExperiment object — asSummarizedExperiment","title":"Transform SPATA2 object to SummarizedExperiment object — asSummarizedExperiment","text":"Transforms SPATA2 object object class SummarizedExperiment. See details information.","code":""},{"path":"/reference/asSummarizedExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform SPATA2 object to SummarizedExperiment object — asSummarizedExperiment","text":"","code":"asSummarizedExperiment(object, ...)"},{"path":"/reference/asSummarizedExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform SPATA2 object to SummarizedExperiment object — asSummarizedExperiment","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/asSummarizedExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform SPATA2 object to SummarizedExperiment object — asSummarizedExperiment","text":"object class SummarizedExperiment.","code":""},{"path":"/reference/asSummarizedExperiment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform SPATA2 object to SummarizedExperiment object — asSummarizedExperiment","text":"Output object contains count matrix slot @assays feature data.frame combined barcode-spot coordinates slot @colData. Slot @metadata list contains image object slot $image.","code":""},{"path":"/reference/as_SPATA2_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance transformation — as_SPATA2_dist","title":"Distance transformation — as_SPATA2_dist","text":"Ensures distance input can read SPATA2 functions convert SI units pixels (loose numeric values) vice versa.","code":""},{"path":"/reference/as_SPATA2_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance transformation — as_SPATA2_dist","text":"","code":"as_SPATA2_dist(input)"},{"path":"/reference/as_SPATA2_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance transformation — as_SPATA2_dist","text":"input Character numeric vector. Elements must match requirements SPATA2 distance framework. See details information.","code":""},{"path":"/reference/as_SPATA2_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance transformation — as_SPATA2_dist","text":"Character vector length input.","code":""},{"path":"/reference/as_SPATA2_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance transformation — as_SPATA2_dist","text":"Several functions SPATA2 arguments take distance input. specifically refer distance unit must specified. three ways create valid input arguments. 1. pixel: two valid input options specify distance pixel: numeric: Single numeric values, e.g. arg_input <- c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input <- c('2px', '3.554px', '69px', '100.67px') Note: unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant. 2. According Systeme international d`unites (SI): Specifying distances SI units e.g. arg_input <- c('2mm', '4mm') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfLengthSI(). 3. vectors class unit: Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input <- units::set_unit(x = c(2,4), value = 'mm') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":"/reference/as_SPATA2_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance transformation — as_SPATA2_dist","text":"","code":"library(SPATA2)  x <- \"2 cm\"  is_dist_si(x) # FALSE due to empty space...  x <- as_SPATA2_dist(x)  print(x)  is_dist_si(x)"},{"path":"/reference/as_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform distance and area values — as_meter","title":"Transform distance and area values — as_meter","text":"Collection functions transform distance area values. pixels involved, additional SPATA2 specific content needed.","code":""},{"path":"/reference/as_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform distance and area values — as_meter","text":"","code":"as_meter(input, ...)  as_meter2(input, ...)  as_micrometer(input, ...)  as_micrometer2(input, ...)  as_millimeter(input, ...)  as_millimeter2(input, ...)  as_nanometer(input, ...)  as_nanometer2(input, ...)  as_pixel(input, object = NULL, ..., add_attr = TRUE)  as_unit(input, unit, object = NULL, round = FALSE, verbose = FALSE, ...)  as_centimeter(input, ...)  as_centimeter2(input, ...)  as_decimeter(input, ...)  as_decimeter2(input, ...)"},{"path":"/reference/as_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform distance and area values — as_meter","text":"input Values represent spatial measures. ... Needed arguments depend input/unit combination. one 'px', argument object must specified. object object class SPATA2 , case S4 generics, objects classes method defined. unit Character value. Specifies desired unit. round Numeric value FALSE. numeric, given digits base::round(). Rounds transformed values returned. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/as_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform distance and area values — as_meter","text":"functions return output vector length input vector. argument unit among validUnitsOfLengthSI() validUnitsOfAreaSI() output vector class units. argument unit 'px', output vector character vector numeric vector as_numeric TRUE.","code":""},{"path":"/reference/as_unit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform distance and area values — as_meter","text":"information area values, see details ?is_area. Fore information distance values, see details ?is_dist.","code":""},{"path":"/reference/as_unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform distance and area values — as_meter","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  containsPixelScaleFactor(object) # must be TRUE  pixel_values <- c(200, 450, 500)  si_dist_values <- c(\"2mm\", \"400mm\", \"0.2mm\")  # spata object must be provided to scale based on current image resolution as_millimeter(input = pixel_values, object = object, round = 2)  as_micrometer(input = pixel_values, object = object, round = 4)  as_pixel(input = si_dist_values, object = object)  # spata object must not be provided as_micrometer(input = si_dist_values)"},{"path":"/reference/attachUnit.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach unit to distance — attachUnit","title":"Attach unit to distance — attachUnit","text":"Reattaches unit form character suffix distance values.","code":""},{"path":"/reference/attachUnit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach unit to distance — attachUnit","text":"","code":"attachUnit(input)"},{"path":"/reference/attachUnit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach unit to distance — attachUnit","text":"input Character numeric vector. Elements must match requirements SPATA2 distance framework. See details information.","code":""},{"path":"/reference/attachUnit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach unit to distance — attachUnit","text":"Character vector length input.","code":""},{"path":"/reference/attachUnit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Attach unit to distance — attachUnit","text":"Several functions SPATA2 arguments take distance input. specifically refer distance unit must specified. three ways create valid input arguments. 1. pixel: two valid input options specify distance pixel: numeric: Single numeric values, e.g. arg_input <- c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input <- c('2px', '3.554px', '69px', '100.67px') Note: unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant. 2. According Systeme international d`unites (SI): Specifying distances SI units e.g. arg_input <- c('2mm', '4mm') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfLengthSI(). 3. vectors class unit: Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input <- units::set_unit(x = c(2,4), value = 'mm') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":"/reference/attachUnit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach unit to distance — attachUnit","text":"","code":"library(SPATA2) library(SPATAData)  object <- downloadSpataObject(\"313_T\")  pixel_values <- c(300, 400, 500)  mm_norm <- asMillimeter(pixel_values, object = object, round = 2)  mm_norm  mm_num <- asMillimeter(pixel_values, object = object, round = 2, as_numeric = TRUE)  mm_num  attachUnit(mm_num)"},{"path":"/reference/average_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"average_genes — average_genes","title":"average_genes — average_genes","text":"average_genes","code":""},{"path":"/reference/average_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"average_genes — average_genes","text":"","code":"average_genes(average_genes)"},{"path":"/reference/average_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"average_genes — average_genes","text":"average_genes Logical value. set TRUE expression values specified genes averaged instead considered separately. output function data.frame variable results stored named mean_genes.","code":""},{"path":"/reference/background_white.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Background and Set it to White — background_white","title":"Remove Background and Set it to White — background_white","text":"function processes input image remove background setting pixels colors considered part background white. particularly useful isolating main subject image eliminating distracting background elements. degree background removal controlled percentile parameter, determines threshold considering colors part background.","code":""},{"path":"/reference/background_white.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Background and Set it to White — background_white","text":"","code":"background_white(image, percentile = 1)"},{"path":"/reference/background_white.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Background and Set it to White — background_white","text":"image input image want process. percentile Numeric value 0 100 (inclusive) specifying percentile threshold background color determination. bigger 0, determines top percentile colors identify background based frequency appear image. can improve identifying tissue pixels images edge tissue background continuous rather sharp thus difficult identify using computational approaches. follows hypothesis background consists many pixels equal color tissue consists pixels heterogenous colors. Values 0-100 valid. Usually values 0.5-2.5 work well. Test resuls plotPixelContent().","code":""},{"path":"/reference/background_white.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Background and Set it to White — background_white","text":"modified version input image background removed, background pixels set white. result typically image main subject isolated white background.","code":""},{"path":"/reference/background_white.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Background and Set it to White — background_white","text":"percentile 0, background_white() function processes image identifying frequently occurring colors setting RGB values 1, effectively turning white (assuming image grayscale, 1 representing white). percentile parameter allows adjust sensitivity background removal, allowing precise isolation main subject.","code":""},{"path":"/reference/background_white.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Background and Set it to White — background_white","text":"","code":"library(EBImage)  # Load an image and remove the background with default settings (99th percentile) image <- getImage(object)  image_proc <- background_white(img, percentile = 1)  plot(image) plot(image_proc)"},{"path":"/reference/barcodesToSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create spatial annotations from a list of barcodes — barcodesToSpatialAnnotation","title":"Create spatial annotations from a list of barcodes — barcodesToSpatialAnnotation","text":"Creates spatial annotations list barcodes data points cover area outlined. See details information.","code":""},{"path":"/reference/barcodesToSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create spatial annotations from a list of barcodes — barcodesToSpatialAnnotation","text":"","code":"barcodesToSpatialAnnotation(   object,   barcodes,   id,   tags = NULL,   tags_expand = TRUE,   use_dbscan = TRUE,   inner_borders = TRUE,   eps = getCCD(object) * 1.25,   minPts = 3,   min_size = nBarcodes(object) * 0.005,   fct_incr = 20,   force1 = FALSE,   concavity = 2,   overwrite = FALSE,   class = \"SpatialAnnotation\",   verbose = NULL,   ... )"},{"path":"/reference/barcodesToSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create spatial annotations from a list of barcodes — barcodesToSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. barcodes Character vector. vector data points cover histological areas supposed annotated spatial annotations. id Character value. ID spatial annotation. NULL, ID annotation created combining string 'spat_ann' index new annotation list annotations. tags character vector tags spatial annotation. tags_expand Logical value. TRUE, tags image annotations tagged expanded unsuffixed id, variable, threshold 'barcodesToSpatialAnnotation()'. use_dbscan Logical value. TRUE, DBSCAN algorithm used identify spatial clusters outliers outline spatial annotation drawn. inner_borders Logical value. TRUE, algorithm checks whether annotation requires inner borders sets accordingly. FALSE, outer border created. eps Distance measure. Given eps dbscan::dbscan(). Determines size (radius) epsilon neighborhood. minPts Numeric value. Given dbscan::dbscan(). Determines number minimum points required eps neighborhood core points (including point ) min_size Numeric value. minimum number data points dbscan cluster must order discarded spatial outlier. force1 Logical value. TRUE, spatial sub groups identified DBSCAN merged one cluster. Note: FALSE (default), input ìd suffixed index label spatial annotation created uniquely, regardless many eventually created. E.g. id = \"my_ann\" algorithm created two spatial annotations, named my_ann_1 my_ann_2. concavity Numeric value. Given argument concavity concaveman::concaveman(). Determines relative measure concavity. 1 results relatively detailed shape, Infinity results convex hull. can use values lower 1, can produce pretty crazy shapes. overwrite Logical value. Must TRUE allow overwriting. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional slot content given methods::new() constructing SpatialAnnotation object.","code":""},{"path":"/reference/barcodesToSpatialAnnotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create spatial annotations from a list of barcodes — barcodesToSpatialAnnotation","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/barcodesToSpatialAnnotation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create spatial annotations from a list of barcodes — barcodesToSpatialAnnotation","text":"functions filters coordinates data.frame obtained via getCoordsDf() based input argument barcodes. Following filtering, use_dbscan TRUE, DBSCAN algorithm identifies spatial outliers, removed. Furthermore, DBSCAN detects multiple dense clusters, can merged single group force1 also set TRUE. essential note bypassing DBSCAN step may lead inclusion individual data points dispersed across sample. results image annotation essentially spans entirety sample, lacking segregation specific variable expressions. Similarly, enabling force1 might unify multiple segregated areas, present sides sample, one group subsequently, one spatial annotation encompassing whole sample. Consider allow creation multiple spatial annotations (suffixed index) merging afterwards via mergeSpatialAnnotations() close together. Lastly, remaining data points fed concaveman algorithm per-group basis. algorithm calculates concave polygons outlining groups data points. dbscan_use FALSE, data points remained initial filtering submitted algorithm. Subsequently, polygons integrated addSpatialAnnotation() along unsuffixed id tags input arguments. ID suffixed index group.","code":""},{"path":"/reference/barcodesToSpatialAnnotation.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Create spatial annotations from a list of barcodes — barcodesToSpatialAnnotation","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":[]},{"path":"/reference/barcodesToSpatialAnnotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create spatial annotations from a list of barcodes — barcodesToSpatialAnnotation","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  barcodes <-   getMetaDf(object) %>%   filter(bayes_space == \"1\") %>%   pull(barcodes)  object <-  barcodesToSpatialAnnotation(   object = object,   barcodes = barcodes,   id = \"example\",   overwrite = TRUE   )  plotSurface(object, color_by = \"bayes_space\") +   ggpLayerSpatAnnOutline(object, ids = \"example\")"},{"path":"/reference/binwidth_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"binwidth — binwidth_dummy","title":"binwidth — binwidth_dummy","text":"binwidth","code":""},{"path":"/reference/binwidth_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"binwidth — binwidth_dummy","text":"","code":"binwidth_dummy(binwidth)"},{"path":"/reference/binwidth_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"binwidth — binwidth_dummy","text":"binwidth Numeric value. Denotes binwidth use histogram.","code":""},{"path":"/reference/buffer_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Buffer area — buffer_area","title":"Buffer area — buffer_area","text":"Buffers area polygon.","code":""},{"path":"/reference/buffer_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Buffer area — buffer_area","text":"","code":"buffer_area(df, buffer, close_plg = TRUE, cvars = c(\"x\", \"y\"))"},{"path":"/reference/buffer_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Buffer area — buffer_area","text":"df Data.frame variables x y describing vertices polygon encircles area based barcode-spots binned. E.g. slot @area SpatialAnnotation-objects. Note order observations data.frame must correspond order vertices polygon. buffer distance consecutively expand area covers spatial annotation screening. Given argument dist function sf::st_buffer(). cvars Character vector length two. variable names correspond x- y-coordinates.","code":""},{"path":"/reference/cds_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — cds_dummy","title":"Title — cds_dummy","text":"Title","code":""},{"path":"/reference/cds_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — cds_dummy","text":"","code":"cds_dummy(cds)"},{"path":"/reference/cds_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — cds_dummy","text":"cds valid cell-data-set. (monocle3 platform)","code":""},{"path":"/reference/centerSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Center the borders of a spatial annotation — centerSpatialAnnotation","title":"Center the borders of a spatial annotation — centerSpatialAnnotation","text":"Shifts borders spatial annotation way center corresponds input c(center_x, center_y).","code":""},{"path":"/reference/centerSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center the borders of a spatial annotation — centerSpatialAnnotation","text":"","code":"centerSpatialAnnotation(object, ...)  # S4 method for class 'SPATA2' centerSpatialAnnotation(   object,   id,   center_x,   center_y,   new_id = FALSE,   overwrite = FALSE )  # S4 method for class 'SpatialData' centerSpatialAnnotation(   object,   id,   center_x,   center_y,   new_id = FALSE,   overwrite = FALSE )"},{"path":"/reference/centerSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center the borders of a spatial annotation — centerSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation. center_x, center_y Distance measures. new center spatial annotation. new_id Character value FALSE. character, resulting spatial annotation stored new ID. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/centerSpatialAnnotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center the borders of a spatial annotation — centerSpatialAnnotation","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/centerTissueOutline.html","id":null,"dir":"Reference","previous_headings":"","what":"Center tissue — centerTissueOutline","title":"Center tissue — centerTissueOutline","text":"Computes necessary translations order center identified tissue outline center image.","code":""},{"path":"/reference/centerTissueOutline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center tissue — centerTissueOutline","text":"","code":"centerTissueOutline(object, ...)  # S4 method for class 'HistoImage' centerTissueOutline(object, verbose = TRUE, ...)"},{"path":"/reference/centerTissueOutline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center tissue — centerTissueOutline","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/centerTissueOutline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center tissue — centerTissueOutline","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/check_all_barcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check barcodes of all matrices and data.frames — check_all_barcodes","title":"Check barcodes of all matrices and data.frames — check_all_barcodes","text":"Check barcodes matrices data.frames","code":""},{"path":"/reference/check_all_barcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check barcodes of all matrices and data.frames — check_all_barcodes","text":"","code":"check_all_barcodes(object)"},{"path":"/reference/check_all_barcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check barcodes of all matrices and data.frames — check_all_barcodes","text":"object valid spata-object.","code":""},{"path":"/reference/check_assign.html","id":null,"dir":"Reference","previous_headings":"","what":"Check assign input — check_assign","title":"Check assign input — check_assign","text":"Check assign input","code":""},{"path":"/reference/check_assign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check assign input — check_assign","text":"","code":"check_assign(assign = FALSE, assign_name = character(1))"},{"path":"/reference/check_assign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check assign input — check_assign","text":"assign Logical. set TRUE named list assigned global environment. list contains data information rebuild additionally customize output plot function. assign_name name assigned list supposed specified single character value.","code":""},{"path":"/reference/check_availability.html","id":null,"dir":"Reference","previous_headings":"","what":"Gives feedback if object was not found — check_availability","title":"Gives feedback if object was not found — check_availability","text":"Gives feedback object found","code":""},{"path":"/reference/check_availability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gives feedback if object was not found — check_availability","text":"","code":"check_availability(test, ref_x, ref_fns)"},{"path":"/reference/check_availability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gives feedback if object was not found — check_availability","text":"test Logical test checks something found. ref_x Object reference. ref_fns Function(s) needs","code":""},{"path":"/reference/check_color_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Check color to — check_color_to","title":"Check color to — check_color_to","text":"member adjusting-check_()-family. Takes character vector sorts elements list depending whether found input all_features, all_genes all_gene_sets. Returns list one slot named features, genes gene_sets containing respective found/valid input color_to.","code":""},{"path":"/reference/check_color_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check color to — check_color_to","text":"","code":"check_color_to(   color_to,   color_by,   all_features = character(),   all_gene_sets = character(),   all_genes = character(),   max_length = NULL )"},{"path":"/reference/check_color_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check color to — check_color_to","text":"all_features valid features specified character vector. all_gene_sets valid gene sets specified character vector. all_genes valid genes specified character vector.","code":""},{"path":"/reference/check_coordinate_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Check coordinate variables — check_coordinate_variables","title":"Check coordinate variables — check_coordinate_variables","text":"Check coordinate variables","code":""},{"path":"/reference/check_coordinate_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check coordinate variables — check_coordinate_variables","text":"","code":"check_coordinate_variables(data, x = \"x\", y = \"y\")"},{"path":"/reference/check_coordinate_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check coordinate variables — check_coordinate_variables","text":"data data.frame containing variables interest well variables needed map onto x- y axis plot. x name numeric variable plotted x axis. y name numeric variable plotted y axis.","code":""},{"path":"/reference/check_coords_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check coords data.frame — check_coords_df","title":"Check coords data.frame — check_coords_df","text":"Check coords data.frame","code":""},{"path":"/reference/check_coords_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check coords data.frame — check_coords_df","text":"","code":"check_coords_df(coords_df)"},{"path":"/reference/check_coords_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check coords data.frame — check_coords_df","text":"coords_df data.frame containing information every observation. Must contain variables: barcodes Character. barcode-sequences (+ sample belonging) every observation. sample Character. sample belonging every observation. x_orig Numeric. unscaled x-coordinates every observation. y_orig Numeric. unscaled y-coordinates every observation.","code":""},{"path":"/reference/check_dea_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check de data.frame — check_dea_df","title":"Check de data.frame — check_dea_df","text":"Check de data.frame","code":""},{"path":"/reference/check_dea_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check de data.frame — check_dea_df","text":"","code":"check_dea_df(dea_df)"},{"path":"/reference/check_dea_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check de data.frame — check_dea_df","text":"dea_df data.frame containing information differentially expressed genes. Must contain variables: gene Character. differentially expressed genes. cluster Character. clusters (experimental groups) across analysis performed. avg_logFC Numeric. average log-fold change belonging gene differentially expressed.. p_val Numeric. p-values. p_val_adj Numeric. adjusted p-values. Hint: Use resulting data.frame SPATA::findDE() descendants input.","code":""},{"path":"/reference/check_display.html","id":null,"dir":"Reference","previous_headings":"","what":"Check display input — check_display","title":"Check display input — check_display","text":"Check display input","code":""},{"path":"/reference/check_display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check display input — check_display","text":"","code":"check_display(display_title = FALSE, display_image = FALSE)"},{"path":"/reference/check_display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check display input — check_display","text":"display_title Logical. set TRUE informative title displayed. display_image Logical. set TRUE histology image specified sample displayed underneath plot.","code":""},{"path":"/reference/check_feature_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check feature data.frame — check_feature_df","title":"Check feature data.frame — check_feature_df","text":"Check feature data.frame","code":""},{"path":"/reference/check_feature_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check feature data.frame — check_feature_df","text":"","code":"check_feature_df(feature_name, feature_df)"},{"path":"/reference/check_feature_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check feature data.frame — check_feature_df","text":"feature_name Character value. name feature added object. feature_df data.frame contains feature key-variables.","code":""},{"path":"/reference/check_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Check feature variables input — check_features","title":"Check feature variables input — check_features","text":"member adjusting-check_*()-family. Takes character vector feature names, checks features exist checks additionally features match class requirements valid_classes. Returns adjusted features-vector raises error.","code":""},{"path":"/reference/check_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check feature variables input — check_features","text":"","code":"check_features(object, features, valid_classes = NULL, max_length = NULL, ...)"},{"path":"/reference/check_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check feature variables input — check_features","text":"object valid spata-object. features features interest specified character vector. valid_classes feature-classes allowed. max_length maximum number features allowed.","code":""},{"path":"/reference/check_gene_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Check gene set input — check_gene_sets","title":"Check gene set input — check_gene_sets","text":"member adjusting-check_*()-family. Takes character vector gene set names checks exist. Returns adjusted gene-set-vector raises error.","code":""},{"path":"/reference/check_gene_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check gene set input — check_gene_sets","text":"","code":"check_gene_sets(object, gene_sets, max_length = NULL)"},{"path":"/reference/check_gene_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check gene set input — check_gene_sets","text":"object valid spata-object. gene_sets gene sets interest specified character vector.","code":""},{"path":"/reference/check_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check gene input — check_genes","title":"Check gene input — check_genes","text":"member adjusting-check_*()-family. Takes character vector gene names checks genes exist. Returns adjusted genes-vector raises error.","code":""},{"path":"/reference/check_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check gene input — check_genes","text":"","code":"check_genes(   object,   genes,   valid_genes = NULL,   rna_assay = NULL,   max_length = NULL,   fdb_fn = \"warning\",   ... )"},{"path":"/reference/check_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check gene input — check_genes","text":"genes genes interest specified character vector. rna_assay rna-assay want look . set NULL whole rna_assay specified object used getExpressionMatrix().","code":""},{"path":"/reference/check_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Check method input — check_method","title":"Check method input — check_method","text":"Check method input","code":""},{"path":"/reference/check_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check method input — check_method","text":"","code":"check_method(   method_aggl = NULL,   method_csr = NULL,   method_de = NULL,   method_dist = NULL,   method_dr = NULL,   method_gs = NULL,   method_hclust = NULL,   method_ovl = NULL,   method_padj = NULL )"},{"path":"/reference/check_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check method input — check_method","text":"method_aggl Character value vector (see details ). Denotes agglomerative methods (e.g. 'ward.D') used. Run validAgglomerativeMethods() obtain valid input options. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. method_dist Character value vector (see details ). Denotes distance methods (e.g. 'euclidean') used. Run validDistanceMethods() obtain valid input options. method_dr Character value. dimensional reduction method interest specified single character value. (Currently either 'pca', 'umap' 'tsne'). method_gs Character value. method according gene sets handled specified character length one. can either 'mean' one 'gsva', 'ssgsea', 'zscore', 'plage'. latter four given gsva::GSVA(). method_hclust Character value. Denotes hierarchical clustering method  according clustering performed. Valid input options 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' 'centroid'. method_ovl Character value. One 'classic', 'bayesian'. Decides according method spatial overlap calculated. method_padj Character value. method according adjusted p-values calculated. Given stats::p.adjust(). Run stats::p.adjust.methods obtain valid input options.","code":""},{"path":"/reference/check_monocle_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check monocle input — check_monocle_input","title":"Check monocle input — check_monocle_input","text":"Check monocle input","code":""},{"path":"/reference/check_monocle_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check monocle input — check_monocle_input","text":"","code":"check_monocle_input(   preprocess_method,   reduction_method,   cluster_method,   k = base::numeric(1),   num_iter = base::numeric(1) )"},{"path":"/reference/check_monocle_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check monocle input — check_monocle_input","text":"preprocess_method Monocle3 - description: string specifying initial dimension method use, currently either PCA LSI. LSI (latent semantic indexing), converts (sparse) expression matrix tf-idf matrix performs SVD decompose gene expression / cells certain modules / topics. Default \"PCA\". reduction_method Monocle3 - description: character string specifying algorithm use dimensionality reduction. Currently \"UMAP\", \"tSNE\", \"PCA\" \"LSI\" supported. cluster_method Monocle3 - description: String indicating clustering method use. Options \"louvain\" \"leiden\". Default \"leiden\". Resolution parameter ignored set \"louvain\". k Monocle3 - description: Integer number nearest neighbors use creating k nearest neighbor graph Louvain/Leiden clustering. k related resolution clustering result, bigger k result lower resolution vice versa. Default 20. num_iter Monocle3 - description: Integer number iterations used Louvain/Leiden clustering. clustering result giving largest modularity score used final clustering result. Default 1. Note num_iter greater 1, random_seed argument ignored louvain method.","code":""},{"path":"/reference/check_monocle_input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check monocle input — check_monocle_input","text":"respect arguments preprocess_method, reduction_method cluster_method: provide vector instead single character value (string) function iterate inputs via -loop compute valid combinations.","code":""},{"path":"/reference/check_monocle_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes sure that both packages are installed — check_monocle_packages","title":"Makes sure that both packages are installed — check_monocle_packages","text":"Makes sure packages installed","code":""},{"path":"/reference/check_monocle_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes sure that both packages are installed — check_monocle_packages","text":"","code":"check_monocle_packages()"},{"path":"/reference/check_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Check spata object input — check_object","title":"Check spata object input — check_object","text":"Check spata object input","code":""},{"path":"/reference/check_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check spata object input — check_object","text":"","code":"check_object(object)"},{"path":"/reference/check_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check spata object input — check_object","text":"object valid spata-object.","code":""},{"path":"/reference/check_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Check pattern input — check_pattern","title":"Check pattern input — check_pattern","text":"member adjusting-check_*()-family. Takes character vector pattern names checks exist. Returns adjusted gene-set-vector raises error.","code":""},{"path":"/reference/check_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check pattern input — check_pattern","text":"","code":"check_pattern(object, patterns = \"\", method_pr = \"hotspot\", of_sample = NA)"},{"path":"/reference/check_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check pattern input — check_pattern","text":"object valid spata-object. of_sample argument currently inactive. might reactivated spata-objects can store one sample. gene_sets gene sets interest specified character vector.","code":""},{"path":"/reference/check_pt.html","id":null,"dir":"Reference","previous_headings":"","what":"Check pt input — check_pt","title":"Check pt input — check_pt","text":"Check pt input","code":""},{"path":"/reference/check_pt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check pt input — check_pt","text":"","code":"check_pt(   pt_size = NULL,   pt_alpha = NULL,   pt_clrsp = NULL,   pt_clrp = NULL,   pt_clr = NULL )"},{"path":"/reference/check_pt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check pt input — check_pt","text":"pt_size Numeric value. Specifies size points. pt_alpha Numeric value. Specifies degree transparency points. pt_clrsp color spectrum used specified variable displayed color continuous. Run validColorSpectra() see valid input. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. pt_clr Character value. Specifies color points.","code":""},{"path":"/reference/check_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Check sample input — check_sample","title":"Check sample input — check_sample","text":"member adjusting-check_*()-family. Takes character vector sample names checks exist. Returns adjusted sample-vector raises error.","code":""},{"path":"/reference/check_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check sample input — check_sample","text":"","code":"check_sample(object, of_sample = \"\", desired_length = NULL, ...)"},{"path":"/reference/check_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check sample input — check_sample","text":"object valid spata-object. of_sample argument currently inactive. might reactivated spata-objects can store one sample. desired_length length input must .","code":""},{"path":"/reference/check_saving.html","id":null,"dir":"Reference","previous_headings":"","what":"Check saving input — check_saving","title":"Check saving input — check_saving","text":"member adjusting-check_*()-family. Takes folder directory assembles final output directory including specified filename. Returns final directory valid raises error NULL output_path set NULL.","code":""},{"path":"/reference/check_saving.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check saving input — check_saving","text":"","code":"check_saving(output_path, file_name)"},{"path":"/reference/check_saving.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check saving input — check_saving","text":"output_path Character vector NULL. Specifies folder store object directory valid. set NULL saving skipped. file_name Character value. name-suffix file name spata-object stored output_path valid directory. prefixed 'spata-obj-' suffixed '.RDS'.","code":""},{"path":"/reference/check_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check segment name — check_segment","title":"Check segment name — check_segment","text":"member adjusting-check_*()-family. Takes segment name single character value, check whether segment exists specified spata-object. error raised. Else barcodes spots belonging specified segment returned.","code":""},{"path":"/reference/check_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check segment name — check_segment","text":"","code":"check_segment(object, segment_name, of_sample = NA)"},{"path":"/reference/check_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check segment name — check_segment","text":"object valid spata-object. segment_name segment interest specified single character","code":""},{"path":"/reference/check_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Check smooth input — check_smooth","title":"Check smooth input — check_smooth","text":"Check smooth input","code":""},{"path":"/reference/check_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check smooth input — check_smooth","text":"","code":"check_smooth(   df = NULL,   smooth = NULL,   smooth_span = NULL,   smooth_method = NULL,   smooth_se = NULL )"},{"path":"/reference/check_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check smooth input — check_smooth","text":"df data.frame smoothed spatially. data frame must numeric x- y-variables. smooth Logical. set TRUE values smoothed according smoooth_-parameters. smooth_span amount smoothing specified single numeric value. smooth_method smoothing method used specified single character value (e.g. \"lm\", \"glm\", \"gam\", \"loess\"). smooth_se Logical. set TRUE confidence interval smooth_clr Character value. color display smoothed model.","code":""},{"path":"/reference/check_spata_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check coordinate data.frame — check_spata_df","title":"Check coordinate data.frame — check_spata_df","text":"Check coordinate data.frame","code":""},{"path":"/reference/check_spata_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check coordinate data.frame — check_spata_df","text":"","code":"check_spata_df(spata_df)"},{"path":"/reference/check_spata_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check coordinate data.frame — check_spata_df","text":"spata_df data.frame containing information barcode-spots. Must contain variables. barcodes Character. barcode-sequences (+ sample belonging) every barcode spot. sample Character. sample belonging every barcode-spot.","code":""},{"path":"/reference/check_stdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Check summarized trajectory data.frame — check_stdf","title":"Check summarized trajectory data.frame — check_stdf","text":"Check summarized trajectory data.frame","code":""},{"path":"/reference/check_stdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check summarized trajectory data.frame — check_stdf","text":"","code":"check_stdf(stdf, shift = NULL)"},{"path":"/reference/check_stdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check summarized trajectory data.frame — check_stdf","text":"stdf data.frame containing information spatial trajectory. Must contain variables: trajectory_part Character. trajectory's subparts. trajectory_part_order Numeric. Denotes every trajectory-bin's position along trajectory's subpart. trajectory_order Numeric. Denotes every trajectory-bin's position along whole trajectory. variables Character. genes, gene-sets features summarized along trajectory. values Numeric. binned values every gene, gene-set feature summarized along trajectory.","code":""},{"path":"/reference/check_summarized_trajectory_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check stdf-input — check_summarized_trajectory_df","title":"Check stdf-input — check_summarized_trajectory_df","text":"Check stdf-input","code":""},{"path":"/reference/check_summarized_trajectory_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check stdf-input — check_summarized_trajectory_df","text":"","code":"check_summarized_trajectory_df(stdf)"},{"path":"/reference/check_summarized_trajectory_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check stdf-input — check_summarized_trajectory_df","text":"stdf summarized trajectory data.frame","code":""},{"path":"/reference/check_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Gives feedback about input validity — check_to","title":"Gives feedback about input validity — check_to","text":"Gives feedback input validity","code":""},{"path":"/reference/check_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gives feedback about input validity — check_to","text":"","code":"check_to(object, to)"},{"path":"/reference/check_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gives feedback about input validity — check_to","text":"Character value. Denotes object directory leads. Must one 'cell_data_set', 'seurat_object' 'spata_object'.","code":""},{"path":"/reference/check_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Check trajectory name input — check_trajectory","title":"Check trajectory name input — check_trajectory","text":"Check trajectory name input","code":""},{"path":"/reference/check_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check trajectory name input — check_trajectory","text":"","code":"check_trajectory(object, trajectory_name, of_sample = NA)"},{"path":"/reference/check_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check trajectory name input — check_trajectory","text":"object valid spata-object. trajectory_name trajectory interest specified single character value. of_sample argument currently inactive. might reactivated spata-objects can store one sample.","code":""},{"path":"/reference/check_trajectory_binwidth.html","id":null,"dir":"Reference","previous_headings":"","what":"Check trajectory binwdith input — check_trajectory_binwidth","title":"Check trajectory binwdith input — check_trajectory_binwidth","text":"Check trajectory binwdith input","code":""},{"path":"/reference/check_trajectory_binwidth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check trajectory binwdith input — check_trajectory_binwidth","text":"","code":"check_trajectory_binwidth(binwidth)"},{"path":"/reference/check_trajectory_binwidth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check trajectory binwdith input — check_trajectory_binwidth","text":"binwidth Numeric value. Denotes binwidth sort relevant barcode spots groups aligned respect chosen trajectory's direction.#'","code":""},{"path":"/reference/check_uniform_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check uniform genes input — check_uniform_genes","title":"Check uniform genes input — check_uniform_genes","text":"Check uniform genes input","code":""},{"path":"/reference/check_uniform_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check uniform genes input — check_uniform_genes","text":"","code":"check_uniform_genes(uniform_genes)"},{"path":"/reference/check_uniform_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check uniform genes input — check_uniform_genes","text":"uniform_genes Character value. set 'discard' genes uniformly expressed across barcode-spots specified coordinates data.frame discarded. set 'keep' kept.","code":""},{"path":"/reference/check_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Check variables — check_variables","title":"Check variables — check_variables","text":"member adjusting-check_()-family. Takes character vector sorts elements list depending whether found input all_features, all_genes all_gene_sets. Returns list one slot named features, genes gene_sets containing respective found/valid input color_to.","code":""},{"path":"/reference/check_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check variables — check_variables","text":"","code":"check_variables(   variables,   all_features = character(),   all_gene_sets = character(),   all_genes = character(),   max_length = Inf,   max_slots = 3,   simplify = FALSE )"},{"path":"/reference/check_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check variables — check_variables","text":"variables Character vector. variables interest: Gene sets: Must getGeneSets() Genes: Must getGenes() Features: Must numeric ones getFeatureNames() all_features Valid features. all_gene_sets Valid gene sets. all_genes Valid genes. max_length Max number variable input. max_slots Max number different aspects. simplify set TRUE check_variables()-output vector.","code":""},{"path":"/reference/checkpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny feedback messages — checkpoint","title":"Shiny feedback messages — checkpoint","text":"Wrapper around shiny::req() shiny::showNotification(). Prevents application crashing displays guiding message user supposed order continue without message appear.","code":""},{"path":"/reference/checkpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny feedback messages — checkpoint","text":"","code":"checkpoint(   evaluate = TRUE,   case_false = NULL,   error_notifications = list(no_name = \"Could not save. Please enter a valid name\",     invalid_id = \"Invalid input. ID must start with a letter.\", name_in_use =     \"ID is already in use.\", id_in_use = \"ID is already in use.\", too_many_polygons =     \"Drawing option is set to 'Single'. Can not save multiple annotations.\",     ann_var_already_exists = \"This name is already used by another annotation variable.\",     insufficient_n_vertices = \"Please determine at least three vertices.\",     insufficient_n_vertices2 =     \"Please determine at least two vertices and highlight the trajectory.\",           invalid_segment_name = \"Please enter a valid name for the segment.\",     no_ann_var_chosen = \"Please create an annotation variable first.\", no_chosen_name =     \"There are no names to choose from.\", not_highlighted =     \"Please highlight the region with a click on 'Highlight'.\", no_polygons =     \"No area encircled.\", no_zoom_rect = \"Can not zoom in without a drawn rectangular.\",     not_zoomed_in = \"Completely zoomed out.\", occupied_segment_name =     \"This segment name is already taken.\", segment_name_not_found =     \"Could not find the specified segment.\",       invalid_group_name =     \"Group names must start with a letter and must contain at least one letter.\",     still_drawing =     \"You are still drawing. Double click on the plot to leave the drawing mode. Then click on 'Highlight' again.\",     invalid_trajectory_name = \"Please enter a valid name for the trajectory.\",     no_trajectory_drawn = \"Please draw the trajectory first.\", no_trajectory_highlighted     = \"Please highlight the trajectory first.\", occupied_trajectory_name =     \"This trajectory name is already taken.\",       width_0 = \"Width must not be 0.\",     insufficient_n_genes = \"Please determine at least two genes.\", invalid_gs_string1 =     \"The class-prefix must not contain '_'.\", invalid_gs_string2 =     \"Please enter a valid string for the class-prefix and the gene-set name.\",     occupied_gs_name = \"This gene-set name is already taken.\", no_img_anns_selected =     \"No image annotations selected to plot.\", invalid_expand = \"Invalid expand input.\"),   warning_notifications = list(),   duration = 4,   stop_process = TRUE,   stop_app = FALSE )"},{"path":"/reference/checkpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny feedback messages — checkpoint","text":"evaluate vector logical tests evaluated. case_false character string indicating message displayed one element evaluate turns FALSE. Needs base::names(error/warning_notifiations). error_notifications named list character strings. warning_notifications named list character strings. duration duration message displayed. stop_process, stop_app Logical. supposed happen one element evaluate turns FALSE.","code":""},{"path":"/reference/checkpoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny feedback messages — checkpoint","text":"shiny notification.","code":""},{"path":"/reference/close_area_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Close area encircling — close_area_df","title":"Close area encircling — close_area_df","text":"\"Closes\" area described vertices df adding starting point (first row) end data.frame.","code":""},{"path":"/reference/close_area_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close area encircling — close_area_df","text":"","code":"close_area_df(df)"},{"path":"/reference/clrp.html","id":null,"dir":"Reference","previous_headings":"","what":"clrp — clrp","title":"clrp — clrp","text":"clrp","code":""},{"path":"/reference/clrp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clrp — clrp","text":"","code":"clrp(clrp)  clrp_dummy(clrp)"},{"path":"/reference/clrp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clrp — clrp","text":"clpr Character value. color panel used. Run all_colorpanels() see valid input options.","code":""},{"path":"/reference/clusterSpCorResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster genes according to their expression profile — clusterSpCorResults","title":"Cluster genes according to their expression profile — clusterSpCorResults","text":"Cluster genes according expression profile","code":""},{"path":"/reference/clusterSpCorResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster genes according to their expression profile — clusterSpCorResults","text":"","code":"clusterSpCorResults(   object,   of_sample = \"\",   method_hclust = \"complete\",   k = NULL,   h = NULL )"},{"path":"/reference/cnv_ref.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of reference data for copy number variation analysis (CNV) — cnv_ref","title":"A list of reference data for copy number variation analysis (CNV) — cnv_ref","text":"list contains three named slots:","code":""},{"path":"/reference/cnv_ref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of reference data for copy number variation analysis (CNV) — cnv_ref","text":"","code":"data(cnv_ref)"},{"path":"/reference/cnv_ref.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of reference data for copy number variation analysis (CNV) — cnv_ref","text":"object class list length 3.","code":""},{"path":"/reference/cnv_ref.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A list of reference data for copy number variation analysis (CNV) — cnv_ref","text":"annotation: data.frame denoting barcodes count matrix slot mtr reference barcodes. mtr: count matrix can used reference data cnv analysis. data derived stRNA-seq healthy human brain tissue. regions: data.frame containing information start end points chromosomes.","code":""},{"path":"/reference/cnv_regions_df.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame necessary for cnv-analysis. Contains information about start and end points of chromosomes. — cnv_regions_df","title":"A data.frame necessary for cnv-analysis. Contains information about start and end points of chromosomes. — cnv_regions_df","text":"data.frame necessary cnv-analysis. Contains information start end points chromosomes.","code":""},{"path":"/reference/cnv_regions_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame necessary for cnv-analysis. Contains information about start and end points of chromosomes. — cnv_regions_df","text":"","code":"data(cnv_regions_df)"},{"path":"/reference/cnv_regions_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame necessary for cnv-analysis. Contains information about start and end points of chromosomes. — cnv_regions_df","text":"object class data.frame 44 rows 4 columns.","code":""},{"path":"/reference/color_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vector of colors — color_vector","title":"Get vector of colors — color_vector","text":"Returns vector color codes respective palette","code":""},{"path":"/reference/color_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vector of colors — color_vector","text":"","code":"color_vector(clrp, names = NULL, clrp.adjust = NULL, n.colors = NA)"},{"path":"/reference/color_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vector of colors — color_vector","text":"clrp Character value. Denotes color palette interest. Run all_colorpalettes() obtain valid inputs. names Character vector NULL. Assigns names color vector (order). clrp.adjust Named character vector NULL. character, adjusts colors used represent groups. Names input vector must refer group respective named element denotes color represent group. n.colors Numeric value. Must specified clrp set 'default' names NULL.","code":""},{"path":"/reference/color_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vector of colors — color_vector","text":"Character vector.","code":""},{"path":"/reference/computeChromosomalInstability.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute chromosomal damage — computeChromosomalInstability","title":"Compute chromosomal damage — computeChromosomalInstability","text":"Estimates degree chromosomal damage observation computing variance copy number variations across chromosomes 1-22. (Requires results runCNV()).","code":""},{"path":"/reference/computeChromosomalInstability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute chromosomal damage — computeChromosomalInstability","text":"","code":"computeChromosomalInstability(object, chr_vars = stringr::str_c(\"Chr\", 1:22))"},{"path":"/reference/computeChromosomalInstability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute chromosomal damage — computeChromosomalInstability","text":"object object class SPATA2 , case S4 generics, objects classes method defined. chr_vars Character vector. Names meta features contain copy number variation scores chromosome.","code":""},{"path":"/reference/computeChromosomalInstability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute chromosomal damage — computeChromosomalInstability","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/computeCnvByChrArm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute CNV by chromosome arm — computeCnvByChrArm","title":"Compute CNV by chromosome arm — computeCnvByChrArm","text":"Extension runCnvAnalysis(). Uses results runCnvAnalysis() compute chromosomal chromosome arm instead chromosome.","code":""},{"path":"/reference/computeCnvByChrArm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute CNV by chromosome arm — computeCnvByChrArm","text":"","code":"computeCnvByChrArm(   object,   summarize_with = \"mean\",   overwrite = FALSE,   verbose = TRUE )"},{"path":"/reference/computeCnvByChrArm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute CNV by chromosome arm — computeCnvByChrArm","text":"object object class SPATA2 , case S4 generics, objects classes method defined. summarize_with Character value. Name function summarize. overwrite Logical value. Must TRUE allow overwriting. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/computeCnvByChrArm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute CNV by chromosome arm — computeCnvByChrArm","text":"runCnvAnalysis() computes chromosomal alterations , among things, adds results form numeric variables feature data.frame. Depending prefixed used (default 'Chr') chromosomal alterations e.g. chromosome 7 accessible numeric variables. E.g. plotSurface(object, color_by = 'Chr7'). computeCnvByChrArm() adds additional variables data.frame contain information alterations chromosome arms named accordingly Chr7p, Chr7q.","code":""},{"path":"/reference/computeMetaFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute meta features — computeMetaFeatures","title":"Compute meta features — computeMetaFeatures","text":"function computes various meta features specified assay SPATA2 object adds object's metadata.","code":""},{"path":"/reference/computeMetaFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute meta features — computeMetaFeatures","text":"","code":"computeMetaFeatures(   object,   assay_name = activeAssay(object),   overwrite = FALSE )"},{"path":"/reference/computeMetaFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute meta features — computeMetaFeatures","text":"object object class SPATA2 , case S4 generics, objects classes method defined. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/computeMetaFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute meta features — computeMetaFeatures","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/computeMetaFeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute meta features — computeMetaFeatures","text":"function computes following meta features observation specified assay. computed features added metadata SPATA2 object following naming conventions: n_counts_<assay_name>: total number counts observation. n_distinct_<assay_name>: number distinct molecules (non-zero entries) observation. avg_cpm_<assay_name>: average counts per molecule observation, computed total number counts divided number distinct molecules. overwrite parameter set TRUE, existing features names overwritten. Otherwise, function check presence existing features overwrite unless explicitly instructed .","code":""},{"path":"/reference/computeMetaFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute meta features — computeMetaFeatures","text":"","code":"library(SPATA2)  object <- loadExampleObject(\"UKF269T\")  getAssayNames(object)  getMetaDf(object)  object <- computeMetaFeatures(object, asay_name = \"gene\")  getMetaDf(object)  plotSurface(object, color_by = \"n_counts_gene\")"},{"path":"/reference/computePixelScaleFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute pixel scale factor — computePixelScaleFactor","title":"Compute pixel scale factor — computePixelScaleFactor","text":"Computes pixel scale factor. possible methods fixed center center distance observational units (e.g. Visium).","code":""},{"path":"/reference/computePixelScaleFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute pixel scale factor — computePixelScaleFactor","text":"","code":"computePixelScaleFactor(object, ...)  # S4 method for class 'SPATA2' computePixelScaleFactor(object, verbose = TRUE, ...)  # S4 method for class 'SpatialData' computePixelScaleFactor(object, verbose = TRUE, ...)"},{"path":"/reference/computePixelScaleFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute pixel scale factor — computePixelScaleFactor","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/computePixelScaleFactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute pixel scale factor — computePixelScaleFactor","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/computePixelScaleFactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute pixel scale factor — computePixelScaleFactor","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  containsCDD(object) # must be TRUE  object <- computePixelScaleFactor(object)  getPixelScaleFactor(object, unit = \"mm\")"},{"path":"/reference/compute_angle_between_two_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute angle between two points — compute_angle_between_two_points","title":"Compute angle between two points — compute_angle_between_two_points","text":"Computes angle two points. 0° aligned y-axis.","code":""},{"path":"/reference/compute_angle_between_two_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute angle between two points — compute_angle_between_two_points","text":"","code":"compute_angle_between_two_points(p1, p2)"},{"path":"/reference/compute_angle_between_two_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute angle between two points — compute_angle_between_two_points","text":"p1, p2 Numeric vectors length two, named x y.","code":""},{"path":"/reference/compute_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the distance between to points — compute_distance","title":"Compute the distance between to points — compute_distance","text":"Compute distance points","code":""},{"path":"/reference/compute_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the distance between to points — compute_distance","text":"","code":"compute_distance(starting_pos, final_pos)"},{"path":"/reference/compute_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the distance between to points — compute_distance","text":"starting_pos, final_pos Numeric vector length two. Denotes two positions distance calculated","code":""},{"path":"/reference/compute_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the distance between to points — compute_distance","text":"numeric value.","code":""},{"path":"/reference/compute_expression_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute — compute_expression_estimates","title":"Compute — compute_expression_estimates","text":"function computes position-based expression estimates given minimum maximum distances average minimum center--center distance (AMCCD).","code":""},{"path":"/reference/compute_expression_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute — compute_expression_estimates","text":"","code":"compute_expression_estimates(coords_df)"},{"path":"/reference/compute_expression_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute — compute_expression_estimates","text":"coords_df coordinates data.frame obtained getCoordsDfSA() getCoordsDfST.","code":""},{"path":"/reference/compute_expression_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute — compute_expression_estimates","text":"numeric vector representing position-based expression estimates.","code":""},{"path":"/reference/compute_img_scale_fct.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute scale factor of two images — compute_img_scale_fct","title":"Compute scale factor of two images — compute_img_scale_fct","text":"Computes factor dimensions image 1 must multiplied order equal dimensions image 2.","code":""},{"path":"/reference/compute_img_scale_fct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute scale factor of two images — compute_img_scale_fct","text":"","code":"compute_img_scale_fct(hist_img1, hist_img2)"},{"path":"/reference/compute_img_scale_fct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute scale factor of two images — compute_img_scale_fct","text":"hist_img1, hist_img2 Objects class HistoImage.","code":""},{"path":"/reference/compute_img_scale_fct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute scale factor of two images — compute_img_scale_fct","text":"Numeric value.","code":""},{"path":"/reference/concept_active.html","id":null,"dir":"Reference","previous_headings":"","what":"Active / Inactive — concept_active","title":"Active / Inactive — concept_active","text":"SPATA2 aims facilitate vertical integration multiple data modalities. Therefore, SPATA2 object allows store multiple aspects data time. know extract default, concept active inactive integrated. instance, multiple images can registered. image use can always specified using argument img_name. default, functions pick image denoted active image function activateImage(). image currently active can checked activeImage(). concept applies every aspect, like assays data matrices. becomes relevant SPATA2 object contains one aspect.","code":""},{"path":[]},{"path":"/reference/concept_area_measure.html","id":null,"dir":"Reference","previous_headings":"","what":"Area measures — concept_area_measure","title":"Area measures — concept_area_measure","text":"Several functions SPATA2 arguments take area input. specifically refer area unit must specified. three ways create valid input arguments. test input valid distance measure use is_area().","code":""},{"path":"/reference/concept_area_measure.html","id":"pixel-and-undefined-units","dir":"Reference","previous_headings":"","what":"Pixel and undefined units","title":"Area measures — concept_area_measure","text":"two valid input options specify area pixel: numeric: Single numeric values, e.g. arg_input = c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input = c('2px', '3.554px', '69px', '100.67px') Note: unit pixel abbreviaton 'px' also used numeric values refer area measures without unit . Furthermore, unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant.","code":""},{"path":"/reference/concept_area_measure.html","id":"according-to-the-systeme-international-d-unites-si-","dir":"Reference","previous_headings":"","what":"According to the Systeme international d`unites (SI)","title":"Area measures — concept_area_measure","text":"Specifying areas SI units e.g. arg_input = c('2mm2', '4mm2') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfAreaSI().","code":""},{"path":"/reference/concept_area_measure.html","id":"as-vectors-of-class-unit","dir":"Reference","previous_headings":"","what":"As vectors of class unit","title":"Area measures — concept_area_measure","text":"Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input = units::set_unit(x = c(2,4), value = 'mm2') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":[]},{"path":"/reference/concept_distance_measure.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance measures — concept_distance_measure","title":"Distance measures — concept_distance_measure","text":"Several functions SPATA2 arguments take distance input. specifically refer distance unit must specified. three ways create valid input arguments. test input valid distance measure use is_dist().","code":""},{"path":"/reference/concept_distance_measure.html","id":"pixel-and-undefined-units","dir":"Reference","previous_headings":"","what":"Pixel and undefined units","title":"Distance measures — concept_distance_measure","text":"two valid input options specify distance pixel: numeric: Single numeric values, e.g. arg_input = c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input = c('2px', '3.554px', '69px', '100.67px') Note: unit pixel abbreviaton 'px' also used numeric values refer distance measures without unit . Furthermore, unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant.","code":""},{"path":"/reference/concept_distance_measure.html","id":"according-to-the-systeme-international-d-unites-si-","dir":"Reference","previous_headings":"","what":"According to the Systeme international d`unites (SI)","title":"Distance measures — concept_distance_measure","text":"Specifying distances SI units e.g. arg_input = c('2mm', '4mm') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfLengthSI().","code":""},{"path":"/reference/concept_distance_measure.html","id":"as-vectors-of-class-unit","dir":"Reference","previous_headings":"","what":"As vectors of class unit","title":"Distance measures — concept_distance_measure","text":"Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input = units::set_unit(x = c(2,4), value = 'mm') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":[]},{"path":"/reference/concept_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Images — concept_images","title":"Images — concept_images","text":"SPATA2 object allows storage multiple images registering one one registerImage(). registered image, container object class HistoImage created, storing image /file directory image, alongside additional information data acquired image processing steps (e.g., tissue outline). Working multiple images alongside coordinates data points around SPATA2 object revolves, well spatial reference features (SpatialAnnotation, SpatialTrajectory), presents challenge: Alignment. Alignment involves resolution matching image justification images terms angle, horizontal vertical translation, stretching. particularly important images taken neighboring tissue sections similar overlap perfectly.","code":""},{"path":"/reference/concept_images.html","id":"the-reference-image","dir":"Reference","previous_headings":"","what":"The reference image","title":"Images — concept_images","text":"facilitate alignment vertical integration multiple images, coordinates, spatial reference features, reference image declared. default, first image loaded SPATA2 object. SPATA2 assumes coordinates reference image align perfectly terms vertical horizontal justification (scaling might still needed). Hence, aligning additional registered images reference image automatically result alignment coordinates data points. Furthermore, reference image allows automatic transfer scale factors newly registered images.","code":""},{"path":"/reference/concept_images.html","id":"the-active-image","dir":"Reference","previous_headings":"","what":"The active image","title":"Images — concept_images","text":"(relevant one image registered.) active image simply image used default comes usage functions require image input. case visualizing functions e.g. createImageAnnotations() plotSpatialAnnotations() well functions extract sort coordinates, since, upon extraction, coordinates scaled resolution image currently active (x_orig -> x, explained ). reference image can therefore simultaneously active image.","code":""},{"path":[]},{"path":"/reference/concept_logfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Logfile (Logfile Data) — concept_logfile","title":"Logfile (Logfile Data) — concept_logfile","text":"context SPATA2, term logfile refers record events actions performed execution functions related SPATA2 objects. logfile serves historical log, capturing details function name, timestamp execution, package version used. logfile represented data.frame row corresponds log entry, column contains specific information execution event. itemized description variables logfile data.frame: fn_name: name function executed. date_time: timestamp indicating function executed. pkg_version: version SPATA2 package used execution. args_input: list containing arguments provided function, including explicitly specified values default values overridden user. logfile stored slot @logfile object.","code":""},{"path":[]},{"path":"/reference/concept_molecular_modalities.html","id":null,"dir":"Reference","previous_headings":"","what":"Molecular Modalities — concept_molecular_modalities","title":"Molecular Modalities — concept_molecular_modalities","text":"SPATA2 developed Visium platform mind revolves around spatial gene expression. SPATA2 v3.0.0 aim expand package include different platforms molecular modalities analyze spatial distribution proteins metabolites, . Hence, creating  objects molecular assays modality must specified. ensure inbuilt functions SPATA2 like gene set enrichment copy number variation analysis work seamlessly, modality must specified \"correctly\". SPATA2 knows three molecular modalities specific functions written like ones linked . Gene expression: Use modality = 'gene' Protein expression: Use modality = 'protein' Metabolites expression: Use modality = 'metabolite' Depending modality assay, specific functions can used . instance, runCNV() works SPATA2 object contains assay data modality gene (genes, rna, mRNA anything else). extends inbuilt concept molecular signatures. forbidden, course, create molecular assays modalities differing ones SPATA2 knows. just able use certain functions created assay.","code":""},{"path":"/reference/concept_molecular_modalities.html","id":"molecular-modality-assay-name-","dir":"Reference","previous_headings":"","what":"Molecular Modality == Assay Name!","title":"Molecular Modalities — concept_molecular_modalities","text":"molecular modality assay also defines name! Hence, encounter parameter assay_name can thought defining molecular modality interest! output activeAssay() can thought output active molecular modality.","code":""},{"path":[]},{"path":"/reference/concept_molecular_signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Molecular Signatures — concept_molecular_signatures","title":"Molecular Signatures — concept_molecular_signatures","text":"Molecular signatures sets molecules (genes proteins) associated specific biological states, processes, conditions. SPATA2 molecular signature represented vector named list, character values molecules signature consists.","code":""},{"path":"/reference/concept_molecular_signatures.html","id":"spata-inbuilt-signatures","dir":"Reference","previous_headings":"","what":"SPATA2 inbuilt signatures","title":"Molecular Signatures — concept_molecular_signatures","text":"SPATA2 knows three molecular modalities. Gene expression: modality = 'gene' Protein expression: modality = 'protein' Metabolites expression: modality = 'metabolite' Included package list named signatures, corresponding slots signatures$gene, signatures$protein, signatures$metabolite. list default signatures stored respective data modality. Depending SPATA2 object initiated, created molecular assay(s) already contain respective signatures slot @signatures.","code":""},{"path":"/reference/concept_molecular_signatures.html","id":"signature-names","dir":"Reference","previous_headings":"","what":"Signature names","title":"Molecular Signatures — concept_molecular_signatures","text":"SPATA2 signature name corresponds two parts: class_biological function instance, gene set HM_HYPOXIA class HM (short Hallmark) contains genes associated increased presence response hypoxic circumstances. class indicates source signature derives separated biological function part first _. Underscores afterwards ignored interpreted part biological function RCTM_TCR_SIGNALING (class: RCTM; biological function: TCR_SIGNALING).","code":""},{"path":[]},{"path":"/reference/concept_observations.html","id":null,"dir":"Reference","previous_headings":"","what":"Observations (Data points) — concept_observations","title":"Observations (Data points) — concept_observations","text":"context SPATA2, term observations refers data points entities spatial information (x- y-coordinates) well molecular data (e.g. gene expression) meta data (e.g. cluster assignment) captured. term observational unit term best characterizes data points whole. E.g. cells platform MERFISH, barcoded spots platform Visium, barcoded beads platform SlideSeq . Throughout documentation term data points observations used synonymously. Usually, data regarding data points extracted getCoordsDf(), comes form data.frames row corresponds observation column corresponds variable observation.","code":""},{"path":[]},{"path":"/reference/concept_scale_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale Factors — concept_scale_factors","title":"Scale Factors — concept_scale_factors","text":"scale factors refer numeric values used multiply original x- y-coordinates object's observations, order align image bring coordinates system measured SI units (). , S4 class SpatialData HistoImage contain slot named @scale_factors. cases named list. SPATA2 object contains images, coordinates data points spatial reference features automatically aligned resolution image use, active image. required image scale factor lives @scale_factors slot HistoImage object serves container respective image. Furthermore, SPATA2 allows work SI units. transform coordinates pixel units SI units pixel scale factor required. Primarily, scale factors live @scale_factors slot registered HistoImage, . SPATA2 object contain images, pixel scale factor can stored slot @scale_factors SpatialData object. (Generally speaking, whenever scale factors required system checks whether image anything must scaled. , scale factors taken @scale_factors slot HistoImage object. , scale factors looked @scale_factors slot SpatialData object.)","code":""},{"path":"/reference/concept_scale_factors.html","id":"image-alignment-scale-factor-image","dir":"Reference","previous_headings":"","what":"Image alignment - scale factor image","title":"Scale Factors — concept_scale_factors","text":"SPATA2 objects allow store multiple images simultaneously might differ resolutions, different scale factors required scale coordinates observations appropriately, image coordinates align perfectly. happens background extract plot observations light resolution fictional example image lowres_image. First, original data.frame obtained. coords_df <- getCoordsDf(object, as_is = TRUE) Second, image scale factor image 'lowres_image' extracted. csf <- getScaleFactor(object, img_name = \"lowres_image\", fct_name = \"image\") Third, variables transformed x y. coords_df$x <- coords_df$x_orig * csf coords_df$y <- coords_df$y_orig * csf process applied sort spatial data upon extraction, e.g. getSpatAnnOutlineDf(). object contain image, e.g. MERFISH Xenium, images thus slot @images SpatialData object empty. Furthermore, since nothing align, image scale factor. case x y variables data.frame equal x_orig y_orig.","code":""},{"path":"/reference/concept_scale_factors.html","id":"si-units-scale-factor-pixel","dir":"Reference","previous_headings":"","what":"SI units - scale factor pixel","title":"Scale Factors — concept_scale_factors","text":"pixel scale factor used transform coordinates pixel SI units. numeric value comes attribute indicates SI unit pixel value scaled (e.g. mm / px). applied coordinates scaled image resolution. coords_df <- getCoordsDf(object) psf <- getPixelScaleFactor(object) coords_df$x_si <- coords_df$x * psf coords_df$y_si <- coords_df$y * psf Note: Methods include image, often provide coordinates already SI units. MERFISH coordinates, instance, already micrometer units. pixel scale factor therefore 1um/px. (name pixel scale factor evolved historically, since SPATA2 developed Visium platform mind. fit perfectly platforms MERFISH Xenium experiments since provide image. SI unit system SPATA2 works stable want touch . Therefore, name remains.)","code":""},{"path":"/reference/concept_spatial_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Annotations — concept_spatial_annotation","title":"Spatial Annotations — concept_spatial_annotation","text":"Spatial annotations outline areas interest within spatial data sets. area outline represented detailed polygon stored data.frame vertices map polygon two dimensional space. Apart useful highlight areas interests visualizations, spatial annotatations can used spatial references analyze gene expression changes function distance certain areas. concept detailed vignette Spatial Gradient Screening (SGS). SPATA2 differentiates three kinds spatial annotations: GroupAnnotations: represent spatial extent observations, cells barcoded spots, filtering outlining based predefined groups. class allows creation annotations highlight specific spatial clusters, areas, patterns identified grouping techniques. provides means focus regions interest within spatial multi-omic datasets using predefined categorizations. ImageAnnotations:  capture spatial annotations outlining areas interest images. class provides flexible framework creating annotations visually highlight specific regions within images, histological structures, cellular patterns, histo-morphological features images. NumericAnnotations:  represent spatial extent observations, cells barcoded spots, filtering outlining according values specific numeric variable. class particularly suitable creating annotations highlight areas interest based continuous characteristics like gene expression numeric attributes derived spatial multi-omic datasets.","code":""},{"path":[]},{"path":"/reference/concept_spatial_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Gradient Screening — concept_spatial_trajectory","title":"Spatial Gradient Screening — concept_spatial_trajectory","text":"Spatial Gradient Screening conceptualizes changes gene expression , generally speaking, changes expression numeric features continuum two dimensional space. uses spatial annotations spatial trajectories references indicative biological forces analyse gene expression changes dependent distance forces. Please refer Kueckelhaus J., Frerichs S. et al., 2024 detailed explanation. spatial trajectory linear segment start end point indicates 'direction'. can used within framework Spatial Gradient Screening (SGS) spatial reference abstract biological forces tumorous growth, increasing cellular density proximity border.","code":""},{"path":"/reference/concept_tissue_outline.html","id":null,"dir":"Reference","previous_headings":"","what":"Tissue Outline — concept_tissue_outline","title":"Tissue Outline — concept_tissue_outline","text":"tissue outline provides information spatial boundaries tissue analyzed. represented detailed polygons outline tissue edge. tissue contained SPATA2 object one single continuous section, one polygon required. tissue contains multiple sections, multiple polygons required. Every single polygon required outline tissue represented data.frame row corresponds vertex polygon. columns provide x- y-coordinates vertices. tissue outline computed function identifyTissueOutline(). two ways outline tissue indicated argument method. concept behind either method elaborated two following sections Tissue outline - Image method = 'image' Tissue outline - Observations method = 'obs'.","code":""},{"path":"/reference/concept_tissue_outline.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Tissue Outline — concept_tissue_outline","text":"SPATA2 object can contain , tissue outline based observations image (multiple images matter). tissue outline based observations stored slot @outline SpatialData object. tissue outline based image lives slot @outline HistoImage container respective image (turn lives @slot images SpatialData object next HistoImage containers.)","code":""},{"path":"/reference/concept_tissue_outline.html","id":"tissue-outline-image","dir":"Reference","previous_headings":"","what":"Tissue outline - Image","title":"Tissue Outline — concept_tissue_outline","text":"tissue outline based image requires results identifyPixelContent() assigns pixel image one following categories: Tissue segment: contiguous tissue section valid downstream analyis. Tissue fragment: contiguous tissue section might big enough included downstream analysis. Artifcat: Objects image likely artifacts. Background:background. Pixels pixel groups categorized belonging tissue segments included computation tissue outline. Therefore resulting tissue outline obtained getTissueOutlineDf() method = 'image' corresponds spatial extent identified tissue image processing identifyPixelContent().","code":""},{"path":"/reference/concept_tissue_outline.html","id":"tissue-outline-observations","dir":"Reference","previous_headings":"","what":"Tissue outline - Observations","title":"Tissue Outline — concept_tissue_outline","text":"SPATA2 objects contain molecular data mapped observations, e.g. barcoded spots, barcoded beads cells. Several platforms, MERFISH XENIUM provide image. scenario, outline computed polygons required appropriately outline tissue based position data points.","code":""},{"path":[]},{"path":"/reference/concept_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Variables (Features) — concept_variables","title":"Variables (Features) — concept_variables","text":"context SPATA2, term variables refers features characterize observations. Throughout documentation term variables features used synonymously. work closely tidyverse. proposes concept tidy data, structures data.frames observations variables. Therefore, tend stick term variables Note: previous versions SPATA2 used term features feature data.frame slot @fdata refer variables related molecular counts like gene expression gene sets. resulted confusion many platforms Seurat use term features general refer refer variables. Therefore, slot @fdata renamed @meta_obs corresponding data.frame renamed meta data.frame, obtained getMetaDf(). Next obligatory variable barcodes - uniquely identifies observation - different kind variables exist SPATA2 object.","code":""},{"path":"/reference/concept_variables.html","id":"numeric-variables","dir":"Reference","previous_headings":"","what":"Numeric variables","title":"Variables (Features) — concept_variables","text":"Numeric variables represent continuous numerical data. variables can take numeric values typically used represent quantitative measurements counts. working SPATA2 numeric variables conceptually subdivided. spatial: Numeric variables used position observations two dimensional space. Stored coordinates data.frame obtained getCoordsDf(). E.g. x, x_orig, y y_orig. stored coordinates data.frame. molecular: Numeric variables used quantify molecular expression observation. Stored count processed matrices MolecularAssay objects. E.g. GFAP, VEGFA, LDH. dimensional reduction Numeric variables used position observations latent space. Stored slot @dim_red. signature: Specific scores mean expression based multiple molecular data variables. E.g. gene signatures like HM_HYPOXIA. SPATA2 object stores molecules signature consists, namely slot @signatures MolecularAssay. actual variable computed upon extraction. miscellaneous: Numeric variables fit descriptions often correspond meta data. E.g. number molecule counts per observation. . stored meta data.frame observations, obtained getMetaDf().","code":""},{"path":"/reference/concept_variables.html","id":"categorical-grouping-variables","dir":"Reference","previous_headings":"","what":"Categorical / Grouping variables","title":"Variables (Features) — concept_variables","text":"Categorical grouping variables represent qualitative data can take limited number distinct categories levels. variables used categorize group observations distinct groups classes. working SPATA2 grouping variables conceptually subdivided. cluster: Results clustering algorithms. E.g. runBayesSpaceClustering() segmentation: Results manual, spatial segmentation via createSpatialSegmentation() miscellaneous: Categorical variables fit descriptions . E.g. tissue section assignment identifyTissueOutline(), outlier assignment identifySpatialOutliers(). Grouping variables stored factors meta data.frame slot @meta_obs, obtained getMetaDf().","code":""},{"path":[]},{"path":"/reference/containsAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of an assay — containsAssay","title":"Check availability of an assay — containsAssay","text":"Checks provided object contains specific assay.","code":""},{"path":"/reference/containsAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of an assay — containsAssay","text":"","code":"containsAssay(object, assay_name, error = FALSE)"},{"path":"/reference/containsAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of an assay — containsAssay","text":"object object class SPATA2 , case S4 generics, objects classes method defined. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of an assay — containsAssay","text":"Logical value.","code":""},{"path":[]},{"path":"/reference/containsCCD.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of center to center distance — containsCCD","title":"Check availability of center to center distance — containsCCD","text":"Checks object contains center center distance obtained getCCD().","code":""},{"path":"/reference/containsCCD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of center to center distance — containsCCD","text":"","code":"containsCCD(object, ...)  # S4 method for class 'ANY' containsCCD(object, error = FALSE)"},{"path":"/reference/containsCCD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of center to center distance — containsCCD","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsCCD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of center to center distance — containsCCD","text":"Logical value.","code":""},{"path":"/reference/containsCNV.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability CNV results — containsCNV","title":"Check availability CNV results — containsCNV","text":"Logical tests check content exists SPATA2 object.","code":""},{"path":"/reference/containsCNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability CNV results — containsCNV","text":"","code":"containsCNV(object, error = FALSE)"},{"path":"/reference/containsCNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability CNV results — containsCNV","text":"object object class SPATA2 , case S4 generics, objects classes method defined. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsCNV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability CNV results — containsCNV","text":"Logical value.","code":""},{"path":"/reference/containsCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of cells — containsCells","title":"Check availability of cells — containsCells","text":"Checks object revolves around spatial method single cells observational unit.","code":""},{"path":"/reference/containsCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of cells — containsCells","text":"","code":"containsCells(object, ...)  # S4 method for class 'ANY' containsCells(object, error = FALSE)"},{"path":"/reference/containsCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of cells — containsCells","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of cells — containsCells","text":"Logical value.","code":""},{"path":[]},{"path":"/reference/containsHistoImages.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of image containers — containsHistoImages","title":"Check availability of image containers — containsHistoImages","text":"Checks input object contains HistoImage objects. Note confuse containsImage().","code":""},{"path":"/reference/containsHistoImages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of image containers — containsHistoImages","text":"","code":"containsHistoImages(object, ...)  # S4 method for class 'SPATA2' containsHistoImages(object, error = FALSE, ...)  # S4 method for class 'SpatialData' containsHistoImages(object, error = FALSE, ...)"},{"path":"/reference/containsHistoImages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of image containers — containsHistoImages","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsHistoImages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of image containers — containsHistoImages","text":"Logical value.","code":""},{"path":"/reference/containsHistologyImaging.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — containsHistologyImaging","title":"Deprecated — containsHistologyImaging","text":"Deprecated favor containsHistoImages().","code":""},{"path":"/reference/containsHistologyImaging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — containsHistologyImaging","text":"","code":"containsHistologyImaging(...)"},{"path":"/reference/containsImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of an image — containsImage","title":"Check availability of an image — containsImage","text":"Checks input object image respective slot slot empty.","code":""},{"path":"/reference/containsImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of an image — containsImage","text":"","code":"containsImage(object, ...)  # S4 method for class 'ANY' containsImage(object, img_name = activeImage(object), error = FALSE)  # S4 method for class 'SpatialAnnotation' containsImage(object, error = FALSE)  # S4 method for class 'HistoImage' containsImage(object, error = FALSE)"},{"path":"/reference/containsImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of an image — containsImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of an image — containsImage","text":"Logical value.","code":""},{"path":"/reference/containsInnerBorders.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for inner borders in a spatial annotation — containsInnerBorders","title":"Check for inner borders in a spatial annotation — containsInnerBorders","text":"Checks whether SpatialAnnotation object contains inner borders.","code":""},{"path":"/reference/containsInnerBorders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for inner borders in a spatial annotation — containsInnerBorders","text":"","code":"containsInnerBorders(object, ...)  # S4 method for class 'SPATA2' containsInnerBorders(object, id, ...)  # S4 method for class 'SpatialAnnotation' containsInnerBorders(object, ...)  # S4 method for class 'data.frame' containsInnerBorders(object, ...)"},{"path":"/reference/containsInnerBorders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for inner borders in a spatial annotation — containsInnerBorders","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation.","code":""},{"path":"/reference/containsInnerBorders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for inner borders in a spatial annotation — containsInnerBorders","text":"Logical value.","code":""},{"path":[]},{"path":"/reference/containsMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of specific methods — containsMethod","title":"Check availability of specific methods — containsMethod","text":"Tests input object associated specific methods.","code":""},{"path":"/reference/containsMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of specific methods — containsMethod","text":"","code":"containsMethod(object, ...)  # S4 method for class 'SPATA2' containsMethod(object, method_name, error = FALSE)  # S4 method for class 'SpatialData' containsMethod(object, method_name, error = FALSE)"},{"path":"/reference/containsMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of specific methods — containsMethod","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. method_name Character vector. Names methods check. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of specific methods — containsMethod","text":"Logical value.","code":""},{"path":"/reference/containsModality.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of molecular modality — containsModality","title":"Check availability of molecular modality — containsModality","text":"Tests input object contains molecular assay certain modality.","code":""},{"path":"/reference/containsModality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of molecular modality — containsModality","text":"","code":"containsModality(object, modality, error = FALSE, ...)"},{"path":"/reference/containsModality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of molecular modality — containsModality","text":"object object class SPATA2 , case S4 generics, objects classes method defined. modality Character value. molecular modality interst. error Logical. TRUE input invalid function throws error. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/containsModality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of molecular modality — containsModality","text":"Logical value.","code":""},{"path":"/reference/containsMoleculeCoordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability molecule coordinates — containsMoleculeCoordinates","title":"Check availability molecule coordinates — containsMoleculeCoordinates","text":"Check availability molecule coordinates","code":""},{"path":"/reference/containsMoleculeCoordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability molecule coordinates — containsMoleculeCoordinates","text":"","code":"containsMoleculeCoordinates(   object,   assay_name = activeAssay(object),   error = FALSE )"},{"path":"/reference/containsMoleculeCoordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability molecule coordinates — containsMoleculeCoordinates","text":"object object class SPATA2 , case S4 generics, objects classes method defined. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsPixelContent.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability pixel content — containsPixelContent","title":"Check availability pixel content — containsPixelContent","text":"Checks slot @pxl_content HistoImage object contains results identifyPixelContent().","code":""},{"path":"/reference/containsPixelContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability pixel content — containsPixelContent","text":"","code":"containsPixelContent(object, ...)  # S4 method for class 'SpatialData' containsPixelContent(object, img_name, error = FALSE)  # S4 method for class 'HistoImage' containsPixelContent(object, error = FALSE)"},{"path":"/reference/containsPixelContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability pixel content — containsPixelContent","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsPixelContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability pixel content — containsPixelContent","text":"Logical value.","code":""},{"path":[]},{"path":"/reference/containsPseudoImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the object contains only a pseudo image — containsPseudoImage","title":"Check if the object contains only a pseudo image — containsPseudoImage","text":"Tests object contains pseudo image makes suitable image depending processes.","code":""},{"path":"/reference/containsPseudoImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the object contains only a pseudo image — containsPseudoImage","text":"","code":"containsPseudoImage(object, ...)  # S4 method for class 'ANY' containsPseudoImage(object, error = FALSE)"},{"path":"/reference/containsPseudoImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the object contains only a pseudo image — containsPseudoImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsPseudoImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the object contains only a pseudo image — containsPseudoImage","text":"Logical value.","code":""},{"path":"/reference/containsScaleFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of specific scale factors — containsScaleFactor","title":"Check availability of specific scale factors — containsScaleFactor","text":"Tests specifics scale factors set .","code":""},{"path":"/reference/containsScaleFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of specific scale factors — containsScaleFactor","text":"","code":"containsScaleFactor(object, ...)  # S4 method for class 'SPATA2' containsScaleFactor(   object,   fct_name,   img_name = activeImage(object),   error = FALSE )  # S4 method for class 'SpatialData' containsScaleFactor(   object,   fct_name,   img_name = activeImage(object),   error = FALSE )"},{"path":"/reference/containsScaleFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of specific scale factors — containsScaleFactor","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. fct_name Character value. name scale factor interest. E.g. 'pixel' 'coords'. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsScaleFactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of specific scale factors — containsScaleFactor","text":"Logical value.","code":""},{"path":"/reference/containsSpatialAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of spatial annotations — containsSpatialAnnotations","title":"Check availability of spatial annotations — containsSpatialAnnotations","text":"Tests object contains spatial annotations created createGroupAnnotations createImageAnnotations createNumericAnnotations().","code":""},{"path":"/reference/containsSpatialAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of spatial annotations — containsSpatialAnnotations","text":"","code":"containsSpatialAnnotations(object, ...)  # S4 method for class 'SPATA2' containsSpatialAnnotations(object, error = FALSE)  # S4 method for class 'SpatialData' containsSpatialAnnotations(object, error = FALSE)"},{"path":"/reference/containsSpatialAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of spatial annotations — containsSpatialAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsSpatialAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of spatial annotations — containsSpatialAnnotations","text":"Logical value.","code":""},{"path":"/reference/containsSpatialData.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks availability of a SpatialData object — containsSpatialData","title":"Checks availability of a SpatialData object — containsSpatialData","text":"Tests input object contains object class SpatialData.","code":""},{"path":"/reference/containsSpatialData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks availability of a SpatialData object — containsSpatialData","text":"","code":"containsSpatialData(object, error = FALSE)"},{"path":"/reference/containsSpatialData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks availability of a SpatialData object — containsSpatialData","text":"object object class SPATA2 , case S4 generics, objects classes method defined. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsSpatialData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks availability of a SpatialData object — containsSpatialData","text":"Logical value.","code":""},{"path":"/reference/containsSpatialOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if spatial outliers exist — containsSpatialOutliers","title":"Check if spatial outliers exist — containsSpatialOutliers","text":"Checks identifySpatialOutliers() identified spatial outliers.","code":""},{"path":"/reference/containsSpatialOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if spatial outliers exist — containsSpatialOutliers","text":"","code":"containsSpatialOutliers(object, ...)"},{"path":"/reference/containsSpatialOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if spatial outliers exist — containsSpatialOutliers","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/containsSpatialOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if spatial outliers exist — containsSpatialOutliers","text":"Logical value.","code":""},{"path":[]},{"path":"/reference/containsSpots.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of spots — containsSpots","title":"Check availability of spots — containsSpots","text":"Checks object revolves around spatial method grid based spots observational unit.","code":""},{"path":"/reference/containsSpots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of spots — containsSpots","text":"","code":"containsSpots(object, ...)  # S4 method for class 'ANY' containsSpots(object, error = FALSE)"},{"path":"/reference/containsSpots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of spots — containsSpots","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsSpots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of spots — containsSpots","text":"Logical value.","code":""},{"path":[]},{"path":"/reference/containsTissueOutline.html","id":null,"dir":"Reference","previous_headings":"","what":"Check availability of tissue outline — containsTissueOutline","title":"Check availability of tissue outline — containsTissueOutline","text":"Tests object contains tissue outline identified identifyTissueOutline().","code":""},{"path":"/reference/containsTissueOutline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check availability of tissue outline — containsTissueOutline","text":"","code":"containsTissueOutline(object, ...)  # S4 method for class 'SPATA2' containsTissueOutline(   object,   method = NULL,   img_name = activeImage(object),   error = FALSE )  # S4 method for class 'SpatialData' containsTissueOutline(   object,   method = NULL,   img_name = activeImage(object),   error = FALSE )  # S4 method for class 'HistoImage' containsTissueOutline(object, img_name = activeImage(object), error = FALSE)"},{"path":"/reference/containsTissueOutline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check availability of tissue outline — containsTissueOutline","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/containsTissueOutline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check availability of tissue outline — containsTissueOutline","text":"Logical value.","code":""},{"path":"/reference/containsVersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks availability of slot @version — containsVersion","title":"Checks availability of slot @version — containsVersion","text":"Tests slot @version exists.","code":""},{"path":"/reference/containsVersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks availability of slot @version — containsVersion","text":"","code":"containsVersion(object, check_not_empty = FALSE)"},{"path":"/reference/containsVersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks availability of slot @version — containsVersion","text":"object object class SPATA2 , case S4 generics, objects classes method defined. check_not_empty Logical value. TRUE, tests additionally slot content empty.","code":""},{"path":"/reference/containsVersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks availability of slot @version — containsVersion","text":"Logical value.","code":""},{"path":"/reference/countImageAnnotationTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Count image annotation tags — countImageAnnotationTags","title":"Count image annotation tags — countImageAnnotationTags","text":"Counts image annotations tags. See details information.","code":""},{"path":"/reference/countImageAnnotationTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count image annotation tags — countImageAnnotationTags","text":"","code":"countImageAnnotationTags(object, tags = NULL, collapse = \" & \")"},{"path":"/reference/countImageAnnotationTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count image annotation tags — countImageAnnotationTags","text":"object object class SPATA2 , case S4 generics, objects classes method defined. tags Character vector list NULL. character vector image annotations pass \"tag test\" included counting process. list, every slot character vector tag names counted combinations. collapse Characer value. Given argument collapse sttringr::str_c() input argument tags list.","code":""},{"path":"/reference/countImageAnnotationTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count image annotation tags — countImageAnnotationTags","text":"data.frame two variables: tags n","code":""},{"path":"/reference/createGroupAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create spatial annotations from a group of data points — createGroupAnnotations","title":"Create spatial annotations from a group of data points — createGroupAnnotations","text":"Creates spatial annotations based spatial extent group data points (spots cells). See details information.","code":""},{"path":"/reference/createGroupAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create spatial annotations from a group of data points — createGroupAnnotations","text":"","code":"createGroupAnnotations(   object,   grouping,   group,   id,   tags = NULL,   tags_expand = TRUE,   use_dbscan = TRUE,   inner_borders = TRUE,   eps = recDbscanEps(object),   minPts = recDbscanMinPts(object),   min_size = nObs(object) * 0.01,   force1 = FALSE,   concavity = 2,   overwrite = FALSE,   verbose = NULL )"},{"path":"/reference/createGroupAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create spatial annotations from a group of data points — createGroupAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable containing group interest. group Character value. group interest. id Character value. ID spatial annotation. NULL, ID annotation created combining string 'spat_ann' index new annotation list annotations. tags character vector tags spatial annotation. tags_expand Logical value. TRUE, tags image annotations tagged expanded unsuffixed id, grouping, group 'createGroupAnnotations'. use_dbscan Logical value. TRUE, DBSCAN algorithm used identify spatial clusters outliers outline spatial annotation drawn. inner_borders Logical value. TRUE, algorithm checks whether annotation requires inner borders sets accordingly. FALSE, outer border created. eps Distance measure. Given eps dbscan::dbscan(). Determines size (radius) epsilon neighborhood. minPts Numeric value. Given dbscan::dbscan(). Determines number minimum points required eps neighborhood core points (including point ) min_size Numeric value. minimum number data points dbscan cluster must order discarded spatial outlier. force1 Logical value. TRUE, spatial sub groups identified DBSCAN merged one cluster. Note: FALSE (default), input ìd suffixed index label spatial annotation created uniquely, regardless many eventually created. E.g. id = \"my_ann\" algorithm created two spatial annotations, named my_ann_1 my_ann_2. concavity Numeric value. Given argument concavity concaveman::concaveman(). Determines relative measure concavity. 1 results relatively detailed shape, Infinity results convex hull. can use values lower 1, can produce pretty crazy shapes. overwrite Logical value. Must TRUE allow overwriting. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/createGroupAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create spatial annotations from a group of data points — createGroupAnnotations","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/createGroupAnnotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create spatial annotations from a group of data points — createGroupAnnotations","text":"functions filters coordinates data.frame obtained via getCoordsDf() based input argument grouping group. Following filtering, use_dbscan TRUE, DBSCAN algorithm identifies spatial outliers, removed. Furthermore, DBSCAN detects multiple dense clusters, can merged single group force1 also set TRUE. essential note bypassing DBSCAN step may lead inclusion individual data points dispersed across sample. results image annotation essentially spans entirety sample, lacking segregation specific variable expressions. Similarly, enabling force1 might unify multiple segregated areas, present sides sample, one group subsequently, one image annotation encompassing whole sample. Consider allow creation multiple spatial annotations (suffixed index) merging afterwards via mergeSpatialAnnotations() close together. Lastly, remaining data points fed concaveman algorithm per-group basis. algorithm calculates concave polygons outlining groups data points. dbscan_use FALSE, data points remained initial filtering submitted algorithm. Subsequently, polygons integrated addSpatialAnnotation() along unsuffixed id tags input arguments. ID suffixed index group.","code":""},{"path":"/reference/createGroupAnnotations.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Create spatial annotations from a group of data points — createGroupAnnotations","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":[]},{"path":"/reference/createGroupAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create spatial annotations from a group of data points — createGroupAnnotations","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  object <-  createGroupAnnotations(    object = object,    grouping = \"bayes_space\",    group = \"1\",    id = \"bspace1\",    tags = \"bspace_ann\"    )   plotSurface(object, color_by = \"bayes_space\") +    ggpLayerSpatAnnOutline(object, tags = \"bspace_ann\")"},{"path":"/reference/createHistoImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object of class HistoImage — createHistoImage","title":"Create an object of class HistoImage — createHistoImage","text":"Official constructor function S4 class HistoImage. See details different input options dirand image.","code":""},{"path":"/reference/createHistoImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object of class HistoImage — createHistoImage","text":"","code":"createHistoImage(   img_name,   sample,   dir = NULL,   img = NULL,   active = FALSE,   scale_factors = list(),   reference = FALSE,   verbose = TRUE,   ... )"},{"path":"/reference/createHistoImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object of class HistoImage — createHistoImage","text":"img_name Character value. name HistoImage refer via arguments img_name img_names. sample Character value. sample name image belongs. equal slot @sample SpatialData object HistoImage stored. dir Character value. directory retrieve image. img image. Must usable EBImage::.Image(). scale_factors list. Sets slot @scale_factors, reference Logical value. TRUE, HistoImage treated reference image registered images SpatialData object. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/createHistoImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object of class HistoImage — createHistoImage","text":"object class HistoImage","code":""},{"path":"/reference/createHistoImage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an object of class HistoImage — createHistoImage","text":"HistoImage object stores image well additional information regarding image. Among things, can store file directory. , turn, allows conveniently use multiple images SPATA2 object downstream analysis without store together object can occupy lot unnecessary memory storage. HistoImage can created three ways. First (recommended): directory specified via dir img NULL. case, function reads image directory stores , image well directoryin HistoImage container. Since directory stored, , image can conveniently unloaded loaded downstream analysis. Second: image provided via img directory dir NULL. case, function creates HistoImage container stores image since directory available, unloading loading later possible. Third: , img dir specified. case, image stored HistoImage container next directory directory dir exist, directory used save image device allows unloading loading later .","code":""},{"path":[]},{"path":"/reference/createImageAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create spatial annotations based on histo-morphological features — createImageAnnotations","title":"Create spatial annotations based on histo-morphological features — createImageAnnotations","text":"Opens interface user can interactively outline histomorphological features image. outline created way used create SpatialAnnotation subclass ImageAnnotation. confuse createSpatialSegmentation().","code":""},{"path":"/reference/createImageAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create spatial annotations based on histo-morphological features — createImageAnnotations","text":"","code":"createImageAnnotations(object, ...)"},{"path":"/reference/createImageAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create spatial annotations based on histo-morphological features — createImageAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/createImageAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create spatial annotations based on histo-morphological features — createImageAnnotations","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/createImageAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create spatial annotations based on histo-morphological features — createImageAnnotations","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  object <- createImageAnnotations(object)"},{"path":"/reference/createMolecularAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and add an object of class MolecularAssay — createMolecularAssay","title":"Create and add an object of class MolecularAssay — createMolecularAssay","text":"Creates adds object class MolecularAssay SPATA2 object.","code":""},{"path":"/reference/createMolecularAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and add an object of class MolecularAssay — createMolecularAssay","text":"","code":"createMolecularAssay(   object,   modality,   mtr_counts = Matrix::Matrix(),   mtr_proc = list(),   active_mtr = NULL,   overwrite = FALSE,   activate = FALSE,   verbose = NULL,   ... )"},{"path":"/reference/createMolecularAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and add an object of class MolecularAssay — createMolecularAssay","text":"object object class SPATA2 , case S4 generics, objects classes method defined. modality Character value. best describe molecular type count matrix. Additionally, defines assay name, created count matrix referred via argument assay_name. Read molecular modalities SPATA2 . mtr_counts count matrix. Column names correspond barcodes observations. Rownames correspond names molecular features (genes, proteins, metabolites etc.). mtr_proc list processed matrices set slot @mtr_proc. active_mtr Character value. name matrix chosen active matrix. mtr_proc empty list, value defaults 'counts' overwrite Logical value. Must TRUE allow overwriting. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Gives access set remaining slots MolecularAssay object.","code":""},{"path":"/reference/createMolecularAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and add an object of class MolecularAssay — createMolecularAssay","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/createMolecularAssay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create and add an object of class MolecularAssay — createMolecularAssay","text":"Creating assay processed matrices (mtr_proc) specifying mtr_counts possible. case, mtr_counts populated empty matrix contains unique molecule names found matrices rownames barcodes colnames. Generally speaking, count matrix contains molecule names! Processed matrices contain either identical molecule names subset found count matrix.","code":""},{"path":"/reference/createMolecularAssay.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create and add an object of class MolecularAssay — createMolecularAssay","text":"molecules added assay must already exist SPATA2 object. Variables SPATA2 case sensitive! want add, instance, protein assay SPATA2 object already contains genes, can provide protein names like Ldh gene names exist like LDH. See stringr::str_to_title() related functions.","code":""},{"path":"/reference/createNumericAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create spatial annotations based on numeric values — createNumericAnnotations","title":"Create spatial annotations based on numeric values — createNumericAnnotations","text":"Creates spatial annotations based gene expression continous data variable (e.g. read counts, copy number alterations). See details .","code":""},{"path":"/reference/createNumericAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create spatial annotations based on numeric values — createNumericAnnotations","text":"","code":"createNumericAnnotations(   object,   variable,   threshold,   id,   tags = NULL,   tags_expand = TRUE,   use_dbscan = TRUE,   inner_borders = TRUE,   eps = recDbscanEps(object),   minPts = recDbscanMinPts(object),   force1 = FALSE,   fct_incr = 1,   min_size = nObs(object) * 0.01,   concavity = 2,   method_gs = NULL,   transform_with = NULL,   overwrite = FALSE,   verbose = NULL,   ... )"},{"path":"/reference/createNumericAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create spatial annotations based on numeric values — createNumericAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variable Character value. name numeric variable interest. threshold Character value. Determines method /threshold data points filtered. Valid input options 'kmeans_high', 'kmeans_low' operator-value combinations '>0.75' '<=0.5'. See details . id Character value. ID spatial annotation. NULL, ID annotation created combining string 'spat_ann' index new annotation list annotations. tags character vector tags spatial annotation. tags_expand Logical value. TRUE, tags image annotations tagged expanded unsuffixed id, variable, threshold 'createGroupAnnotations'. use_dbscan Logical value. TRUE, DBSCAN algorithm used identify spatial clusters outliers outline spatial annotation drawn. inner_borders Logical value. TRUE, algorithm checks whether annotation requires inner borders sets accordingly. FALSE, outer border created. eps Distance measure. Given eps dbscan::dbscan(). Determines size (radius) epsilon neighborhood. minPts Numeric value. Given dbscan::dbscan(). Determines number minimum points required eps neighborhood core points (including point ) force1 Logical value. TRUE, spatial sub groups identified DBSCAN merged one cluster. Note: FALSE (default), input ìd suffixed index label spatial annotation created uniquely, regardless many eventually created. E.g. id = \"my_ann\" algorithm created two spatial annotations, named my_ann_1 my_ann_2. min_size Numeric value. minimum number data points dbscan cluster must order discarded spatial outlier. concavity Numeric value. Given argument concavity concaveman::concaveman(). Determines relative measure concavity. 1 results relatively detailed shape, Infinity results convex hull. can use values lower 1, can produce pretty crazy shapes. method_gs Character value. method according gene sets handled specified character length one. can either 'mean one 'gsva', 'ssgsea', 'zscore', 'plage'. latter four given gsva::GSVA(). transform_with List NULL. list, can used transform continuous variables usage. Names list slots refer variable. content slot refers transforming functions. E.g variable interest GFAP gene expression, following work: Single function: transform_with = log10, Multiple functions: transform_with = list(GFAP = list(log10, log2) case plotting: Useful want apply one transformation variables mapped plotting aesthetics. Input transform_with applied respective <aes>_trans argument. overwrite Logical value. Must TRUE allow overwriting. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional slot content given methods::new() constructing SpatialAnnotation object.","code":""},{"path":"/reference/createNumericAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create spatial annotations based on numeric values — createNumericAnnotations","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/createNumericAnnotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create spatial annotations based on numeric values — createNumericAnnotations","text":"function createNumericAnnotations() facilitates mapping expression values associated data points (spots cells) image. process achieved identifying data points meet criteria set threshold input, encompassing within polygon serves foundation creating SpatialAnnotation. annotation procedure, based position data points showcasing specific expression values, involves following key steps. Data point filtering: data points coordinates data.frame selectively retained based values variable specified variable argument. filtering conducted depends threshold. Grouping: remaining data points organized groups, behavior influenced values use_dbscan force1 arguments. Outlining: group data points subject concaveman algorithm, resulting creation outlining polygon. Spatial annotation: generated concave polygons serve foundation crafting spatial annotations. -depth Explanation: Initially, coordinates data.frame joined variable indicated variable argument. Subsequently, threshold input applied. Two primary methods exist conducting thresholding. threshold either 'kmeans_high' 'kmeans_low', data points undergo clustering based solely variable values, centers = 2. Depending chosen approach, group data points highest lowest mean retained, group excluded. Alternatively, threshold can comprise combination logical operator (e.g., '>', '>=', '<=', '<') numeric value. combination filters data points accordingly. instance, using variable = 'GFAP' threshold = '> 0.75' results retaining data points GFAP value 0.75 higher. Following filtering, use_dbscan TRUE, DBSCAN algorithm identifies spatial outliers, removed. Furthermore, DBSCAN detects multiple dense clusters, can merged single group force1 also set TRUE. essential note bypassing DBSCAN step may lead inclusion individual data points dispersed across sample. results spatial annotation essentially spans entirety sample, lacking segregation specific variable expressions. Similarly, enabling force1 might unify multiple segregated areas, present sides sample, one group subsequently, one spatial annotation encompassing whole sample. Consider allow creation multiple spatial annotations (suffixed index) merging afterwards via mergeSpatialAnnotations() close together. Lastly, remaining data points fed concaveman algorithm per-group basis. algorithm calculates concave polygons outlining groups data points. dbscan_use FALSE, data points remained initial filtering submitted algorithm. Subsequently, polygons integrated addSpatialAnnotation() along unsuffixed id tags input arguments. ID suffixed index group.","code":""},{"path":"/reference/createNumericAnnotations.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Create spatial annotations based on numeric values — createNumericAnnotations","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":[]},{"path":"/reference/createNumericAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create spatial annotations based on numeric values — createNumericAnnotations","text":"","code":"library(SPATA2) library(tidyverse) library(patchwork)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  # create an image annotation based on the segregated area of # high expression in hypoxia signatures  object <-    createNumericAnnotations(      object = object,      variable = \"HM_HYPOXIA\",      threshold = \"kmeans_high\",      id = \"hypoxia\",      tags = \"hypoxic\"    )   # visualize both  plotSurface(object, color_by = \"HM_HYPOXIA\") +    legendLeft() +   plotImage(object) +    ggpLayerSpatAnnOutline(object, tags = c(\"hypoxic\"))"},{"path":"/reference/createSegmentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — createSegmentation","title":"Deprecated — createSegmentation","text":"Deprecated favor createSpatialSegmentation().","code":""},{"path":"/reference/createSegmentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — createSegmentation","text":"","code":"createSegmentation(...)"},{"path":"/reference/createSpatialData.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object of class SpatialData from raw output — createSpatialData","title":"Create an object of class SpatialData from raw output — createSpatialData","text":"Official constructor function S4 class SpatialData. Functions suffixed platform name wrappers written standardized output folder.","code":""},{"path":"/reference/createSpatialData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object of class SpatialData from raw output — createSpatialData","text":"","code":"createSpatialData(   sample,   hist_img_ref = NULL,   hist_imgs = list(),   active = NULL,   unload = TRUE,   coordinates = tibble::tibble(),   meta = list(),   method = SpatialMethod(),   scale_factors = list(),   misc = list(),   verbose = TRUE,   ... )  createSpatialDataMERFISH(   dir,   sample,   file_coords = NULL,   meta = list(),   misc = list(),   verbose = TRUE )  createSpatialDataSlideSeqV1(   dir,   sample,   file_coords = NULL,   meta = list(),   misc = list() )  createSpatialDataVisium(   dir,   sample,   img_ref = \"lowres\",   img_active = \"lowres\",   meta = list(),   misc = list(),   verbose = TRUE )  createSpatialDataVisiumHD(   dir,   sample,   square_res,   img_ref = \"lowres\",   img_active = \"lowres\",   meta = list(),   misc = list(),   verbose = TRUE )  createSpatialDataXenium(dir, sample, meta = list(), misc = list())"},{"path":"/reference/createSpatialData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object of class SpatialData from raw output — createSpatialData","text":"sample Character value. sample name tissue. hist_img_ref SpatialData serving reference image. created createHistoImage(). hist_imgs List additional HistoImage objects slot @images. active Character value. Name HistoImage set active image. Defaults reference image. coordinates Data.frame least three variables: barcodes: Character variable unique IDs observation. x_orig: Numeric variable representing x-coordinates cartesian coordinate system. y_orig: Numeric variable representing y-coordinates cartesian coordinate system. Coordinates align tissue outline reference HistoImage multiplied withe coordinate scale factor slot @scale_factors$coords. meta List meta data regarding tissue. misc List miscellaneous information. verbose Logical. TRUE, progress messages printed. Default TRUE. ... Used absorb deprecated arguments functions. dir directory output folder platform. file_coords Character value NULL. character, specifies filename within directory dir leads coordinates .csv file. NULL expected filename tried: MERFISH: File contains 'cell_metadata' ends '.csv' SlideSeqV1: File ends 'MatchedBeadLocation.csv' VisiumSmall/VisiumLarge: File named 'tissue_positions_list.csv' 'tissue_positions.csv' VisiumHD: File named 'tissue_positions.parquet' Xenium: File named 'cells.csv.gz'. img_ref, img_active Character values specifying images register register . Click information definitions reference image active image. Setting arguments value results function register specified image active well reference image. Valid input options depend platform used: Visium: Either 'lowres' 'hires'. square_res Character. square resolution load data. One *c('16um', '8um', '2um'). See details .","code":""},{"path":"/reference/createSpatialData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object of class SpatialData from raw output — createSpatialData","text":"object class SpatialData","code":""},{"path":[]},{"path":"/reference/createSpatialMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an object of class SpatialMethod — createSpatialMethod","title":"Create an object of class SpatialMethod — createSpatialMethod","text":"simple wrapper construct objects class SpatialMethod. Input directly given basic constructer, slot @version set automatically.","code":""},{"path":"/reference/createSpatialMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an object of class SpatialMethod — createSpatialMethod","text":"","code":"createSpatialMethod(...)"},{"path":"/reference/createSpatialMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an object of class SpatialMethod — createSpatialMethod","text":"... Input respective slots. Use slotNames(SpatialMethod) printed console.","code":""},{"path":"/reference/createSpatialMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an object of class SpatialMethod — createSpatialMethod","text":"object class SpatialMethod.","code":""},{"path":"/reference/createSpatialSegmentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive sample segmentation — createSpatialSegmentation","title":"Interactive sample segmentation — createSpatialSegmentation","text":"Gives access interactive user interface data points can interactively annotated.","code":""},{"path":"/reference/createSpatialSegmentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive sample segmentation — createSpatialSegmentation","text":"","code":"createSpatialSegmentation(   object,   height = 500,   break_add = NULL,   box_widths = c(4, 4, 4) )"},{"path":"/reference/createSpatialSegmentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive sample segmentation — createSpatialSegmentation","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/createSpatialSegmentation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactive sample segmentation — createSpatialSegmentation","text":"Segmentation variables grouping variables stored meta data.frame SPATA2 object (clustering variables). differ clustering variables far result unsupervised cluster algorithms group assignment researcher conducts /(e.g. histological classification). Therefore, segmentation variables can extracted via getFeatureNames() part . specifically extract variables created createSpatialSegmentation() use getSegmentationNames(). remove annotations longer need use removeFeatures().","code":""},{"path":"/reference/createSpatialSegmentation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Interactive sample segmentation — createSpatialSegmentation","text":"interface allows zoom sample. useful SPATA2 object contains -image background want classify barcode spots based histology. images displayed pixels resolution decreases zoom . Many experiments (Visium output) contain high resolution images. can use function registerImage() register images higher resolution better histological classification.","code":""},{"path":"/reference/createSpatialSegmentation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive sample segmentation — createSpatialSegmentation","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  if(FALSE){   object <- createSpatialSegmentation(object)   }"},{"path":"/reference/createSpatialTrajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and add spatial trajectories interactively — createSpatialTrajectories","title":"Create and add spatial trajectories interactively — createSpatialTrajectories","text":"Opens interface user can interactively draw spatial trajectories surface sample.","code":""},{"path":"/reference/createSpatialTrajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and add spatial trajectories interactively — createSpatialTrajectories","text":"","code":"createSpatialTrajectories(object)"},{"path":"/reference/createSpatialTrajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and add spatial trajectories interactively — createSpatialTrajectories","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":[]},{"path":"/reference/createSpatialTrajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and add spatial trajectories interactively — createSpatialTrajectories","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  object <- createSpatialTrajectories(object)"},{"path":"/reference/createTrajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — createTrajectories","title":"Deprecated — createTrajectories","text":"Deprecated favor createSpatialTrajectories().","code":""},{"path":"/reference/createTrajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — createTrajectories","text":"","code":"createTrajectories(object)"},{"path":"/reference/createTrajectoryManually.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — createTrajectoryManually","title":"Deprecated — createTrajectoryManually","text":"Deprecated favor adSpatialTrajectory().","code":""},{"path":"/reference/createTrajectoryManually.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — createTrajectoryManually","text":"","code":"createTrajectoryManually(...)"},{"path":"/reference/create_model_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create model data.frame — create_model_df","title":"Create model data.frame — create_model_df","text":"Creates data.frame contains models spatial gradient screening algorithms.","code":""},{"path":"/reference/create_model_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create model data.frame — create_model_df","text":"","code":"create_model_df(   input,   var_order = NULL,   model_subset = NULL,   model_remove = NULL,   model_add = NULL,   noise_level = 0,   noise = NULL,   seed = 123,   range = c(0, 1),   verbose = TRUE )"},{"path":"/reference/create_model_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create model data.frame — create_model_df","text":"var_order Character. name variable supposed indicate direction. model_subset Character value. Used regex subset models. Use validModelNames() obtain model names known SPATA2 showModels() visualize . model_remove Character value. Used regex remove models supposed included. model_add Named list. Every slot list must either formula containing function takes numeric vector input returns numeric vector length input vector. numeric vector length input vector. Test models showModels(). seed Numeric value. Sets random seed. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/create_model_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create model data.frame — create_model_df","text":"Data.frame.","code":""},{"path":"/reference/cropSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop SPATA2 object — cropSpataObject","title":"Crop SPATA2 object — cropSpataObject","text":"Creates subset original SPATA2 object based x- y-range. Data poitns fall rectangle given xrange yrange kept.","code":""},{"path":"/reference/cropSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop SPATA2 object — cropSpataObject","text":"","code":"cropSpataObject(   object,   xrange,   yrange,   spatial_proc = TRUE,   adjust_capture_area = TRUE,   verbose = NULL )"},{"path":"/reference/cropSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop SPATA2 object — cropSpataObject","text":"object object class SPATA2 , case S4 generics, objects classes method defined. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. spatial_proc Logical value. Indicates whether new sub-object processed spatially. TRUE, new tissue outline identified based remaining observations via identifyTissueOutline(). , spatial annotations tested located either remaining tissue sections. , removed. FALSE, processing steps skipped. Generally speaking, recommended. set FALSE, know . adjust_capture_area Logical. TRUE, capture area adjusted input xrange yrange. FALSE, stays . Defaults TRUE. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/cropSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop SPATA2 object — cropSpataObject","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/cropSpataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop SPATA2 object — cropSpataObject","text":"","code":"library(SPATA2) library(tidyverse) library(patchwork)  # ----- Example 1: subsetSpataObject() object <- loadExampleObject(\"UKF313T\", meta = TRUE)  barcodes_keep <-  getMetaDf(object) %>%  filter(bayes_space %in% c(\"B3\", \"B2\", \"B1\")) %>%  pull(barcodes)  object_sub <- subsetSpataObject(object, barcodes = barcodes_keep)  show(object) show(object_sub)  plotSpatialAnnotations(object) # plots all annotations plotSpatialAnnotations(object_sub) # subsetting affects everything by default  ids <- getSpatAnnIds(object) ids_sub <- getSpatAnnIds(object_sub)  # use patchwork to compare plots plot_orig <-   plotSurface(object, color_by = \"bayes_space\", outline = T) +   ggpLayerSpatAnnOutline(object, ids = ids)  plot_sub <-   plotSurface(object_sub, color_by = \"bayes_space\", outline = T) +   ggpLayerSpatAnnOutline(object_sub, ids = ids_sub)  plot_orig + plot_sub  # ----- Example 2: splitSpataObject() # uses subsetSpataObject() in the background  object_mouse <- loadExampleObject(\"LMU_MCI\", process = TRUE, meta = TRUE)  orig_frame <- ggpLayerFrameByCoords(object_mouse)  ids <- getSpatAnnIds(object_mouse)  plotSurface(object_mouse, color_by = \"tissue_section\", pt_clr = \"lightgrey\") +   ggpLayerSpatAnnOutline(object, ids = ids) +   ggpLayerSpatAnnPointer(object, ids = ids, ptr_lengths = \"0.45mm\", text_dist = 10, text_size = 7)  obj_list <- splitSpataObject(object_mouse, grouping = \"tissue_section\")  # present resulting sub-objects purrr::map(obj_list, .f = ~ .x)  # present remaining ids purrr::map(obj_list, .f = ~ getSpatAnnIds(.x))  # show surface plot with all remaining spatial annotations purrr::map(obj_list, .f = ~ plotSurface(.x) + ggpLayerSpatAnnOutline(.x) + orig_frame) %>%   patchwork::wrap_plots()  # repeat with spatial_proc = FALSE obj_list <- splitSpataObject(object_mouse, grouping = \"tissue_section\", spatial_proc = FALSE)  # present remaining spatial annotation ids purrr::map(obj_list, .f = ~ getSpatAnnIds(.x))  # show surface plot with all remaining spatial annotations purrr::map(obj_list, .f = ~ plotSurface(.x) + ggpLayerSpatAnnOutline(.x) + orig_frame) %>%   patchwork::wrap_plots()  # -----  Example 3: cropSpataObject() # uses subsetSpataObject() in the background object <- loadExampleObject(\"UKF275T\", meta = TRUE)  orig_frame <- ggpLayerFrameByCoords(object)  xcrop <- c(\"2.5mm\", \"5.5mm\") ycrop <- c(\"5mm\", \"7mm\")  plotSurface(object, color_by = \"bayes_space\") +  ggpLayerAxesSI(object) +  ggpLayerRect(object, xrange = xcrop, yrange = ycrop)  object_cropped <-  cropSpataObject(object, xrange = xcrop, yrange = ycrop)  plotSurface(object_cropped, color_by = \"bayes_space\") + orig_frame"},{"path":"/reference/crop_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop image — crop_image","title":"Crop image — crop_image","text":"Crops image.","code":""},{"path":"/reference/crop_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop image — crop_image","text":"","code":"crop_image(image, xrange = NULL, yrange = NULL, expand = 0, ...)"},{"path":"/reference/crop_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop image — crop_image","text":"image Object class Image ÈBIMage package.","code":""},{"path":"/reference/crop_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop image — crop_image","text":"Cropped input object.","code":""},{"path":"/reference/currentSpata2Version.html","id":null,"dir":"Reference","previous_headings":"","what":"The current version of SPATA2 — currentSpata2Version","title":"The current version of SPATA2 — currentSpata2Version","text":"Outputs current version package.","code":""},{"path":"/reference/currentSpata2Version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The current version of SPATA2 — currentSpata2Version","text":"","code":"currentSpata2Version()"},{"path":"/reference/currentSpata2Version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The current version of SPATA2 — currentSpata2Version","text":"List three numeric slots: major, minor, patch","code":""},{"path":"/reference/data_counts-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The data_counts- Class — data_counts-class","title":"The data_counts- Class — data_counts-class","text":"Deprecated.","code":""},{"path":"/reference/defaultGeomObs.html","id":null,"dir":"Reference","previous_headings":"","what":"Default observations geometry — defaultGeomObs","title":"Default observations geometry — defaultGeomObs","text":"Extracts default ggplot2 geometry visualize observations 2D space surface plots.","code":""},{"path":"/reference/defaultGeomObs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default observations geometry — defaultGeomObs","text":"","code":"defaultGeomObs(object)"},{"path":"/reference/defaultGeomObs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default observations geometry — defaultGeomObs","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/defaultGeomObs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default observations geometry — defaultGeomObs","text":"Character value.","code":""},{"path":"/reference/default_instructions-class.html","id":null,"dir":"Reference","previous_headings":"","what":"default instructions — default_instructions-class","title":"default instructions — default_instructions-class","text":"default instructions","code":""},{"path":"/reference/deprecatedInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Information about deprecated aspects — deprecatedInfo","title":"Information about deprecated aspects — deprecatedInfo","text":"Outputs list recently deprecated content well replaced .","code":""},{"path":"/reference/deprecatedInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information about deprecated aspects — deprecatedInfo","text":"","code":"deprecatedInfo()"},{"path":"/reference/deprecatedInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information about deprecated aspects — deprecatedInfo","text":"List three slots: fns: list generally deprecated functions. Slot names functions deprecated. Slot content name function replaced . args: list systematic argument renaming. Slot names argument names deprecated. Slot content name argument old one replaced . args_spec: list function specific argument changes. Slot names function names. Slot content list organized slot args. content NA replacement und function/argument deleted longer use.","code":""},{"path":"/reference/dim_red-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The dim_red- Class — dim_red-class","title":"The dim_red- Class — dim_red-class","text":"Deprecated.","code":""},{"path":"/reference/dissolveGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Dissolve groups in a SPATA2 object — dissolveGroups","title":"Dissolve groups in a SPATA2 object — dissolveGroups","text":"function dissolves specified groups SPATA2 object merging closest neighboring groups based pairwise distances observations.","code":""},{"path":"/reference/dissolveGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dissolve groups in a SPATA2 object — dissolveGroups","text":"","code":"dissolveGroups(object, grouping, groups_dissolve, grouping_new = NULL)"},{"path":"/reference/dissolveGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dissolve groups in a SPATA2 object — dissolveGroups","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. groups_dissolve character vector specifying names groups dissolved. grouping_new character string specifying name new grouping variable. NULL, original grouping variable updated. Default NULL!","code":""},{"path":"/reference/dissolveGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dissolve groups in a SPATA2 object — dissolveGroups","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/dissolveGroups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dissolve groups in a SPATA2 object — dissolveGroups","text":"function performs following steps: Retrieves metadata data frame SPATA2 object. Checks specified grouping groups dissolve exist object. Computes pairwise distances observations. Identifies closest neighboring groups observations groups dissolved. Updates grouping variable new group assignments. grouping_new provided, new grouping variable created; otherwise, original grouping variable updated.","code":""},{"path":[]},{"path":"/reference/dissolveGroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dissolve groups in a SPATA2 object — dissolveGroups","text":"","code":"library(SPATA2) library(ggplot2) library(patchwork)  object <- loadExampleObject(\"UKF313T\")  # add example grouping # this is a random grouping variable solely created for demonstrating the # purpose of dissolveGroups()! It is not of any analytical value! object <- addFeatures(object, feature_df = example_data$dissolve_groups)  # note the many spots of class 'unnamed' surrounded by actual groups plot_before <-  plotSurface(object, color_by = \"histo_bad\", pt_clrp = \"uc\", clrp_adjust = c(\"unnamed\" = \"black\"))  # show plot plot_before  # dissolve the group \"unnamed\" object <-  dissolveGroups(    object = object,    grouping = \"histo_bad\",     groups_dissolve = \"unnamed\",     grouping_new = \"histo_better\"     )  # spots of group 'unnamed' have been dissolved into their respective neighbor group # use alpha (transparency) to highlight spots that used to of group \"unnamed\" plot_afterwards <-  plotSurface(object, color_by = \"histo_better\", pt_clrp = \"uc\", alpha_by = \"histo_alpha\") +  scale_alpha_identity()  # show plots plot_before + plot_afterwards"},{"path":"/reference/distToEdge.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance to edge of tissue section — distToEdge","title":"Distance to edge of tissue section — distToEdge","text":"Computes distance border spatial annotation farest data point tissue section located .","code":""},{"path":"/reference/distToEdge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance to edge of tissue section — distToEdge","text":"","code":"distToEdge(object, id = idSA(object), unit = getDefaultUnit(object))"},{"path":"/reference/distToEdge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance to edge of tissue section — distToEdge","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation. unit output unit distance measure.","code":""},{"path":"/reference/distToEdge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance to edge of tissue section — distToEdge","text":"Distance measure.","code":""},{"path":[]},{"path":"/reference/downloadFromPublication.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data from publications — downloadFromPublication","title":"Download data from publications — downloadFromPublication","text":"Downloads processed data used publications revolving around SPATA2. See details valid input options.","code":""},{"path":"/reference/downloadFromPublication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data from publications — downloadFromPublication","text":"","code":"downloadFromPublication(pub, sample_name)"},{"path":"/reference/downloadFromPublication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data from publications — downloadFromPublication","text":"pub Character value. publication interest. id Character value. id data object interest.","code":""},{"path":"/reference/downloadFromPublication.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data from publications — downloadFromPublication","text":"Depends argument input.","code":""},{"path":"/reference/downloadFromPublication.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download data from publications — downloadFromPublication","text":"following data can downloaded. Kueckelhaus et al., 2024 pub = 'Kueckelhaus_et_al_2024'. id = 'UKF313T'object class SPATA2 containing human glioblastoma Visium data. id = 'UKF269T'object class SPATA2 containing human glioblastoma Visium data. id = 'UKF265C'object class SPATA2 containing human neocortex Visium data. id = 'MCI_LMU'object class SPATA2 containing injured mouse cortex Visium data.","code":""},{"path":"/reference/downloadFromPublication.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download data from publications — downloadFromPublication","text":"","code":"# download the processed SPATA2 object from sample UKF313T from Kueckelhaus et al., 2024.  objectT313 <- downloadFromPublication(pub = \"kueckelhaus_et_al_2024\", what = \"UKF313T\")"},{"path":"/reference/downloadSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a SPATA2 object — downloadSpataObject","title":"Download a SPATA2 object — downloadSpataObject","text":"Downloads single SPATA2 object returns .","code":""},{"path":"/reference/downloadSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a SPATA2 object — downloadSpataObject","text":"","code":"downloadSpataObject(   sample_name,   overwrite = FALSE,   file = FALSE,   adjust_link = TRUE,   timeout = 600,   verbose = TRUE,   ... )"},{"path":"/reference/downloadSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a SPATA2 object — downloadSpataObject","text":"sample_name Character value. name sample want download. Use validSampleNames() obtain valid input options. overwrite Logical. Must set TRUE file directories downloaded files saved already exist. file want save object disc: filename SPATA2 object. Must end '.RDS' provided character. NULL, function saves object sample name '.RDS' suffix. FALSE, saving skipped object simply returned. adjust_link Logical value. Defaults TRUE. Allows function adjust link download fails due Google Drive warnings. See section information. timeout Numeric value. Indicates number seconds function time download object process aborted. Defaults 600s (10min). verbose Logical. set TRUE informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/downloadSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a SPATA2 object — downloadSpataObject","text":"downloaded SPATA2 object.","code":""},{"path":"/reference/downloadSpataObject.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download a SPATA2 object — downloadSpataObject","text":"Imported package SPATAData.","code":""},{"path":"/reference/downloadSpataObject.html","id":"google-drive-warning","dir":"Reference","previous_headings":"","what":"Google Drive Warning","title":"Download a SPATA2 object — downloadSpataObject","text":"SPATA2 objects stored Google Drive repository downloaded via weblink stored source data.frame. Often, SPATA2 objects large automatic Google Drive virus scan. result, weblink initially leads webpage asks okay skipping virus scan. cases Google Drive link leads warning page, function automatically adjust download link bypass warning attempt download . adjusted download still fails, error message displayed, prompting user manually download file using provided link. Since virus scan performed Google Drive regardless whether download within R manually, function defaults bypass warning automatically. prefer bypass warning, can set adjust_link = FALSE case, function give warning ask download object manually. downloaded objects contain viruses. way created, uploaded well web links added source data.frame can reconstructed populate_ scripts provided SPATAData repository github /scripts/.","code":""},{"path":[]},{"path":"/reference/downloadSpataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a SPATA2 object — downloadSpataObject","text":"","code":"# download & assign (no saving on the disk) object <- downloadSpataObject(sample_name = \"UKF275T\")  # download, assign and save on disk # -> stores the file under ~/UKF275T.RDS (where '~' is your working directory) object <- downloadSpataObject(sample_name = \"UKF275T\", file = TRUE)  # download, assign and save on disk in a specified directory object <- downloadSpataObject(sample_name = \"UKF275T\", file = \"my/path/to/spata_object.RDS\")"},{"path":"/reference/downloadSpataObjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and save several SPATA2 objects — downloadSpataObjects","title":"Download and save several SPATA2 objects — downloadSpataObjects","text":"Main function downloads several SPATA2 objects time saves .RDS file.","code":""},{"path":"/reference/downloadSpataObjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and save several SPATA2 objects — downloadSpataObjects","text":"","code":"downloadSpataObjects(   sample_names,   files = NULL,   folder = base::getwd(),   overwrite = FALSE,   adjust_link = TRUE,   timeout = 600,   verbose = TRUE,   ... )"},{"path":"/reference/downloadSpataObjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and save several SPATA2 objects — downloadSpataObjects","text":"sample_names Character vector. sample names SPATA2 objects downloaded. Use validSampleNames() obtain valid input options. files Character vector NULL. Specifies file names SPATA2 objects saved. character, input must length input argument sample_names. NULL, files named according sample name. folder Character value. character, specifies output folder SPATA2 object saved. Defaults working directory. overwrite Logical. Must set TRUE file directories downloaded files saved already exist. adjust_link Logical value. Defaults TRUE. Allows function adjust link download fails due Google Drive warnings. See section information. timeout Numeric value. Indicates number seconds function time download object process aborted. Defaults 600s (10min). verbose Logical. set TRUE informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/downloadSpataObjects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and save several SPATA2 objects — downloadSpataObjects","text":"invisible TRUE.","code":""},{"path":"/reference/downloadSpataObjects.html","id":"google-drive-warning","dir":"Reference","previous_headings":"","what":"Google Drive Warning","title":"Download and save several SPATA2 objects — downloadSpataObjects","text":"SPATA2 objects stored Google Drive repository downloaded via weblink stored source data.frame. Often, SPATA2 objects large automatic Google Drive virus scan. result, weblink initially leads webpage asks okay skipping virus scan. cases Google Drive link leads warning page, function automatically adjust download link bypass warning attempt download . adjusted download still fails, error message displayed, prompting user manually download file using provided link. Since virus scan performed Google Drive regardless whether download within R manually, function defaults bypass warning automatically. prefer bypass warning, can set adjust_link = FALSE case, function give warning ask download object manually. downloaded objects contain viruses. way created, uploaded well web links added source data.frame can reconstructed populate_ scripts provided SPATAData repository github /scripts/.","code":""},{"path":"/reference/downloadSpataObjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and save several SPATA2 objects — downloadSpataObjects","text":"","code":"# downloads three objects and # saves them as \"spata_objects/UKF275T.RDS\", \"spata_objects/UKF313t.RDS\", ... etc.    downloadSpataObjects(     sample_names = c(\"UKF275T\", \"UKF313T\", \"UKF334T\"),     folder = \"spata_objects\" # the folder in which to save the files    )"},{"path":"/reference/dropped_df_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"dropped_df — dropped_df_dummy","title":"dropped_df — dropped_df_dummy","text":"dropped_df","code":""},{"path":"/reference/dropped_df_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dropped_df — dropped_df_dummy","text":"","code":"dropped_df_dummy(dropped_df)"},{"path":"/reference/dropped_df_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dropped_df — dropped_df_dummy","text":"dropped_df data.frame NAs. (Result tidyr::drop_na()).","code":""},{"path":"/reference/example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data required for reproducible examples in SPATA2 tutorials. — example_data","title":"Data required for reproducible examples in SPATA2 tutorials. — example_data","text":"object_LMU_MCI_diet: Diet object hgnc_symbol: Character. Gene names HUGO format. chromosome_name: Character. Name chromosome. start_position: Integer. Starting position gene. end_position: Integer. Ending positiong gene.","code":""},{"path":"/reference/example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data required for reproducible examples in SPATA2 tutorials. — example_data","text":"","code":"example_data"},{"path":"/reference/example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data required for reproducible examples in SPATA2 tutorials. — example_data","text":"object class list length 12.","code":""},{"path":"/reference/example_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data required for reproducible examples in SPATA2 tutorials. — example_data","text":"@docType data @usage data(example_data)","code":""},{"path":"/reference/exchangeImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — exchangeImage","title":"Deprecated — exchangeImage","text":"Deprecated favor lastSpatialAnnotation().","code":""},{"path":"/reference/exchangeImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — exchangeImage","text":"","code":"exchangeImage(...)"},{"path":"/reference/expandSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand the outline of spatial annotations — expandSpatialAnnotation","title":"Expand the outline of spatial annotations — expandSpatialAnnotation","text":"Expands shrinks outer outline spatial annotation.","code":""},{"path":"/reference/expandSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand the outline of spatial annotations — expandSpatialAnnotation","text":"","code":"expandSpatialAnnotation(object, id, expand, new_id = FALSE, overwrite = FALSE)"},{"path":"/reference/expandSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand the outline of spatial annotations — expandSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value. ID spatial annotation interest. expand Distance measure expand border. Negative values shrink outline. new_id Character value FALSE. character, resulting spatial annotation stored new ID. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/expandSpatialAnnotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand the outline of spatial annotations — expandSpatialAnnotation","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/expandSpatialAnnotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand the outline of spatial annotations — expandSpatialAnnotation","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\")  plotImage(object) + ggpLayerSpatAnnOutline(object, ids = \"vessel1\", line_color = \"red\") plotSpatialAnnotations(object, \"vessel1\")  object <- expandSpatialAnnotation(object, id = \"vessel1\", expand = \"50um\", new_id = \"vessel1_exp\")  plotSpatialAnnotations(object, ids = c(\"vessel1\", \"vessel1_exp\"))"},{"path":"/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"dummy — export","title":"dummy — export","text":"dummy","code":""},{"path":"/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dummy — export","text":"","code":"export()"},{"path":"/reference/extract_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract distance units — extract_unit","title":"Extract distance units — extract_unit","text":"Extracts unit distance input.","code":""},{"path":"/reference/extract_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract distance units — extract_unit","text":"","code":"extract_unit(input)"},{"path":"/reference/extract_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract distance units — extract_unit","text":"input Character numeric vector. Elements must match requirements SPATA2 distance framework. See details information.","code":""},{"path":"/reference/extract_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract distance units — extract_unit","text":"Character vector length input. input numeric, extracted unit px.","code":""},{"path":"/reference/extract_unit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract distance units — extract_unit","text":"Several functions SPATA2 arguments take distance input. specifically refer distance unit must specified. three ways create valid input arguments. 1. pixel: two valid input options specify distance pixel: numeric: Single numeric values, e.g. arg_input <- c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input <- c('2px', '3.554px', '69px', '100.67px') Note: unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant. 2. According Systeme international d`unites (SI): Specifying distances SI units e.g. arg_input <- c('2mm', '4mm') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfLengthSI(). 3. vectors class unit: Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input <- units::set_unit(x = c(2,4), value = 'mm') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":"/reference/extract_unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract distance units — extract_unit","text":"","code":"library(SPATA2)  dist_vals <- c(\"2mm\", \"2.3mm\")  extrat_unit(dist_vals)  pixels <- c(2,5, 500)  extract_unit(pixels)"},{"path":"/reference/extract_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract distance value — extract_value","title":"Extract distance value — extract_value","text":"Extracts distance value distance input.","code":""},{"path":"/reference/extract_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract distance value — extract_value","text":"","code":"extract_value(input)"},{"path":"/reference/extract_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract distance value — extract_value","text":"input Character numeric vector. Elements must match requirements SPATA2 distance framework. See details information.","code":""},{"path":"/reference/extract_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract distance value — extract_value","text":"Numeric value.","code":""},{"path":"/reference/extract_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract distance value — extract_value","text":"Several functions SPATA2 arguments take distance input. specifically refer distance unit must specified. three ways create valid input arguments. 1. pixel: two valid input options specify distance pixel: numeric: Single numeric values, e.g. arg_input <- c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input <- c('2px', '3.554px', '69px', '100.67px') Note: unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant. 2. According Systeme international d`unites (SI): Specifying distances SI units e.g. arg_input <- c('2mm', '4mm') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfLengthSI(). 3. vectors class unit: Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input <- units::set_unit(x = c(2,4), value = 'mm') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":"/reference/extract_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract distance value — extract_value","text":"","code":"library(SPATA2)  dist_vals <- c(\"2mm\", \"2.3mm\")  extrat_unit(dist_vals)  pixels <- c(2,5, 500)  extract_unit(pixels)"},{"path":"/reference/extract_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract var names from filter expression — extract_var_names","title":"Extract var names from filter expression — extract_var_names","text":"function takes list quosures representing logical expressions returns variable names used expressions.","code":""},{"path":"/reference/extract_var_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract var names from filter expression — extract_var_names","text":"","code":"extract_var_names(filter_expr)"},{"path":"/reference/extract_var_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract var names from filter expression — extract_var_names","text":"filter_expr list quosures representing logical expressions.","code":""},{"path":"/reference/extract_var_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract var names from filter expression — extract_var_names","text":"character vector containing unique variable names used expressions.","code":""},{"path":"/reference/filterDeaDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Postprocess DEA results — filterDeaDf","title":"Postprocess DEA results — filterDeaDf","text":"Processes results getDeaResultsDf(). See details.","code":""},{"path":"/reference/filterDeaDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Postprocess DEA results — filterDeaDf","text":"","code":"filterDeaDf(   dea_df,   max_adj_pval = 0.05,   min_lfc = 0,   n_highest_lfc = 25,   n_lowest_pval = 25,   across_subset = NULL,   relevel = FALSE,   return = \"data.frame\" )"},{"path":"/reference/filterDeaDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Postprocess DEA results — filterDeaDf","text":"dea_df data.frame containing information differentially expressed genes. Must contain variables: gene Character. differentially expressed genes. cluster Character. clusters (experimental groups) across analysis performed. avg_logFC Numeric. average log-fold change belonging gene differentially expressed.. p_val Numeric. p-values. p_val_adj Numeric. adjusted p-values. Hint: Use resulting data.frame SPATA::findDE() descendants input. max_adj_pval Numeric value. Sets threshold adjusted p-values. genes adjusted p-values threshold ignored. min_lfc Numeric value. Sets threshold average log fold change. genes average log fold change threshold ignored. n_highest_lfc Numeric value. Affects total number genes kept. See details. n_lowest_pval Numeric value. Affects total number genes kept. See details. return Character value. Denotes output type. One 'data.frame', 'vector' 'list","code":""},{"path":"/reference/filterDeaDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Postprocess DEA results — filterDeaDf","text":"Depends input argument return: return = 'data.frame': filtered data.frame dea_df variables. return = 'vector': named vector genes remain. Named experimental group differently expressed. return = 'list: list named according experimental groups. Every slot list character vector containing differently expressed genes respective experimental group.","code":""},{"path":"/reference/filterDeaDf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Postprocess DEA results — filterDeaDf","text":"de-data.frame processed following steps performed every experimental group. Discards genes avg_logFC-values either infinite negative Discards genes adjusted p-values threshold set max_adj_pval Discard genes average log fold change treshold set min_lfc Slices data.frame order every experimental group: n genes highest avg_logFC-values kept n = n_highest_lfc n genes lowest p_val_adj-values kept n = n_lowest_pval Arranges genes according highest avg_logFC-values","code":""},{"path":"/reference/filterSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset SPATA2 object with logical expressions — filterSpataObject","title":"Subset SPATA2 object with logical expressions — filterSpataObject","text":"function filters SPATA2 object based specified logical expressions, retaining observations meet criteria. effect function subsetSpataObject() , provides convenient input options. Note . prefix arguments.","code":""},{"path":"/reference/filterSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset SPATA2 object with logical expressions — filterSpataObject","text":"","code":"filterSpataObject(   object,   ...,   .normalize = FALSE,   .spatial_proc = TRUE,   .verbose = TRUE )"},{"path":"/reference/filterSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset SPATA2 object with logical expressions — filterSpataObject","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... <data-masking> Expressions return logical value, defined terms variables .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. .normalize Logical value indicating whether numeric variables scaled 0-1 filtering. Default FALSE. .spatial_proc Logical value. Indicates whether new sub-object processed spatially. TRUE, new tissue outline identified based remaining observations via identifyTissueOutline(). , spatial annotations tested located either remaining tissue sections. , removed. FALSE, processing steps skipped. Generally speaking, recommended. set FALSE, know . .verbose Logical. TRUE, informative messages regarding computational process printed. (Warning messages always printed.)","code":""},{"path":"/reference/filterSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset SPATA2 object with logical expressions — filterSpataObject","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/filterSpataObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset SPATA2 object with logical expressions — filterSpataObject","text":"function filters input SPATA2 object based logical expressions provided .... expressions provided, function returns input object warning. variables used expressions extracted joined SPATA2 object's data frame. observations meet criteria specified logical expressions retained.","code":""},{"path":[]},{"path":"/reference/filterSpataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset SPATA2 object with logical expressions — filterSpataObject","text":"","code":"library(SPATA2) library(patchwork)  object <- loadExampleObject(\"UKF269T\", process = TRUE, meta = TRUE)  orig_frame <- ggpLayerFrameByCoords(object)  # exemplifies the effect of the 'normalize' # note the value range plotSurface(object, color_by = \"SNAP25\", normalize = TRUE) plotSurface(object, color_by = \"SNAP25\", normalize = FALSE)  # another grouping variable for this example plotSurface(object, color_by = \"bayes_space\")  # example 1: normalize = TRUE object_sub1 <- filterSpataObject(object, SNAP25 > 0.5, .normalize = TRUE)  plotSurface(object_sub1) + (plotSurface(object_sub1) + orig_frame)   # example 2: normalize = FALSE object_sub2 <- filterSpataObject(object, SNAP25 > 0.5, .normalize = FALSE)  plotSurface(object_sub2, color_by = \"SNAP25\") + (plotSurface(object_sub1) + orig_frame)  # example 3: logical tests can be more complex  object_sub3 <- filterSpataObject(object, GFAP > 0.5 | bayes_space %in% c(\"1\", \"3\"), .normalize = TRUE)  plotSurface(object_sub3, color_by = \"SNAP25\") + plotSurface(object_sub3, color_by = \"bayes_space\")"},{"path":"/reference/findSDEGS.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Differential Gene Expression — findSDEGS","title":"Spatial Differential Gene Expression — findSDEGS","text":"Identifies spatially differentially expressed genes (SDEGs) suggested Zeng et al. (2023).","code":""},{"path":"/reference/findSDEGS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Differential Gene Expression — findSDEGS","text":"","code":"findSDEGS(   object,   id,   distance = NA_integer_,   binwidth = NA_integer_,   n_bins_dist = NA_integer_,   angle_span = c(0, 360),   genes_rm = character(0),   variable.features.n = 3000,   method_de = \"wilcox\",   base = 2,   ... )"},{"path":"/reference/findSDEGS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Differential Gene Expression — findSDEGS","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value. spatial annotation interest. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) angle_span Numeric vector length 2. Confines area screened angle span relative center closest spatial annotation. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/findSDEGS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Differential Gene Expression — findSDEGS","text":"S4 object class SDEGS storing results.","code":""},{"path":"/reference/findSDEGS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial Differential Gene Expression — findSDEGS","text":"Groups data points spatial intervals depending distance spatial annotation specified distance. gene expression tested across created groups well 1v1 comparison data points outside interval based groups (group control). distance binning works: bin data points according localisation spatial annotation two following three parameters required (third one calculated): distance: distance border spatial annotation horizon periphery screening conducted. binwidth: width every bin. n_bins_dist: number bins created. three parameters stand following relation : n_bins_dist = distance / binwidth distance = n_bins_dist * binwidth binwidth = distance / n_bins_dist","code":""},{"path":"/reference/findSDEGS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial Differential Gene Expression — findSDEGS","text":"Zeng, H., Huang, J., Zhou, H. et al. Integrative situ mapping single-cell transcriptional states tissue histopathology mouse model Alzheimer's disease. Nat Neurosci 26, 430-446 (2023).","code":""},{"path":"/reference/flexible_call_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"flexible_call_dummy — flexible_call_dummy","title":"flexible_call_dummy — flexible_call_dummy","text":"flexible_call_dummy","code":""},{"path":"/reference/flexible_call_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"flexible_call_dummy — flexible_call_dummy","text":"","code":"flexible_call_dummy(...)"},{"path":"/reference/flexible_call_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"flexible_call_dummy — flexible_call_dummy","text":"... Allows manipulate functions called 'flexibly'. Denote function name argument name way want manipulate way called named list arguments. E.g. facet_wrap = list(drop = TRUE). Use validFlexiblyCalls() see functions can manipulate way.","code":""},{"path":"/reference/flipAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Mirror invert image and coordinates — flipAll","title":"Mirror invert image and coordinates — flipAll","text":"flip*() family mirror inverts current image coordinates spatial aspects everything. See details information. NOTE: flipImage() flips image lets everything else . use want flip image aligned spatial coordinates. want flip image maintaining alignment spatial aspects spata2 object use flipAll()!","code":""},{"path":"/reference/flipAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mirror invert image and coordinates — flipAll","text":"","code":"flipAll(object, axis, verbose = FALSE)  flipCoordinates(object, axis, verbose = FALSE)  flipCoordsDf(object, axis, verbose = FALSE)  flipImage(object, axis, img_name = NULL, verbose = FALSE)  flipSpatialAnnotations(object, axis, verbose = NULL)  flipSpatialTrajectories(object, axis, verbose = NULL)"},{"path":"/reference/flipAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mirror invert image and coordinates — flipAll","text":"object object class SPATA2 , case S4 generics, objects classes method defined. axis Character value. axis around content flipped. Either 'horizontal', 'h', 'vertical' 'v'. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/flipAll.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mirror invert image and coordinates — flipAll","text":"flip*() functions can used flip complete SPATA2 object flip single aspects. flipAll(): Flips everything. flipImage(): Flips image. flipCoordinates(): Flips coordinates data.frame, spatial annotations spatial trajectories. flipCoordsDf(): Flips coordinates data.frame. flipSpatialAnnotations(): Flips spatial annotations. flipSpatialTrajectories(): Flips spatial trajectories.","code":""},{"path":"/reference/flipAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mirror invert image and coordinates — flipAll","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  plotSurface(object, display_image = T)  object <- flipImage(object, axis = \"h\")  plotSurface(object, display_image = T)  object <- flipCoordinates(object, axis = \"h\")  plotSurface(object, display_image = T)  object <- flipAll(object, axis = \"v\")  plotSurface(object, display_image = T)"},{"path":"/reference/flipCoords.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — flipCoords","title":"Deprecated — flipCoords","text":"Deprecated favor flipCoordinates().","code":""},{"path":"/reference/flipCoords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — flipCoords","text":"","code":"flipCoords(...)"},{"path":"/reference/flip_coords_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip coordinate variables — flip_coords_df","title":"Flip coordinate variables — flip_coords_df","text":"Flip coordinate variables data.frame.","code":""},{"path":"/reference/flip_coords_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip coordinate variables — flip_coords_df","text":"","code":"flip_coords_df(   df,   axis,   ranges,   xvars = c(\"x_orig\", \"x\", \"xend\", \"col\", \"imagecol\"),   yvars = c(\"y_orig\", \"y\", \"yend\", \"row\", \"imagerow\"),   verbose = FALSE,   error = FALSE,   ... )"},{"path":"/reference/flip_coords_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip coordinate variables — flip_coords_df","text":"df Data.frame numeric coordinate variables. axis Character value. Denotes axis around coordinates flipped. Either x y adress coordinate variables specifically h (horizontal, flips y-coords) v (vertical - flips x-coords). ranges named list returned getImageRange(). Must least one slot named like input axis. slot numeric vector length two. First value axis minimum second value axis maximum. xvars, yvars Character vector. Names data.frame variables contain axis coordinates. names present input data.frame: Depending input verbose error functions silently skips flipping, gives feedback throws error. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) error Logical. TRUE input invalid function throws error. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/flip_coords_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip coordinate variables — flip_coords_df","text":"Adjusted data.frame.","code":""},{"path":"/reference/gene_pos_df.html","id":null,"dir":"Reference","previous_headings":"","what":"A data.frame necessary for cnv-analysis. Contains information about the gene positions on chromosomes. Contains the following variables: — gene_pos_df","title":"A data.frame necessary for cnv-analysis. Contains information about the gene positions on chromosomes. Contains the following variables: — gene_pos_df","text":"ensembl_gene_id: Character. ENSEMBL encoding gene names. hgnc_symbol: Character. Gene names HUGO format. chromosome_name: Character. Name chromosome. start_position: Integer. Starting position gene. end_position: Integer. Ending positiong gene.","code":""},{"path":"/reference/gene_pos_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data.frame necessary for cnv-analysis. Contains information about the gene positions on chromosomes. Contains the following variables: — gene_pos_df","text":"","code":"gene_pos_df"},{"path":"/reference/gene_pos_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data.frame necessary for cnv-analysis. Contains information about the gene positions on chromosomes. Contains the following variables: — gene_pos_df","text":"object class data.frame 17208 rows 5 columns.","code":""},{"path":"/reference/gene_pos_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A data.frame necessary for cnv-analysis. Contains information about the gene positions on chromosomes. Contains the following variables: — gene_pos_df","text":"@docType data @usage data(gene_pos_df)","code":""},{"path":"/reference/gene_set_path.html","id":null,"dir":"Reference","previous_headings":"","what":"gene_set_path — gene_set_path","title":"gene_set_path — gene_set_path","text":"gene_set_path","code":""},{"path":"/reference/gene_set_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gene_set_path — gene_set_path","text":"","code":"gene_set_path(gene_set_path)"},{"path":"/reference/gene_set_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gene_set_path — gene_set_path","text":"gene_set_path Character value (NULL). Specifies path .RDS-file containing data.frame used input slot @used_genesets. Must character-variables 'ont': gene set names. 'gene': belonging gene names. set NULL default gene-set data.frame used. Run ?gsdf get information.","code":""},{"path":"/reference/geom_point_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Points (fixed size ~ window ratio) — geom_point_fixed","title":"Points (fixed size ~ window ratio) — geom_point_fixed","text":"slightly changed version geom_point(). contrast default size rescales size plotting device.","code":""},{"path":"/reference/geom_point_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points (fixed size ~ window ratio) — geom_point_fixed","text":"","code":"geom_point_fixed(   ...,   mapping = ggplot2::aes(),   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_point_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points (fixed size ~ window ratio) — geom_point_fixed","text":"... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_segment_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Segments (fixed size ~ window ratio) — geom_segment_fixed","title":"Segments (fixed size ~ window ratio) — geom_segment_fixed","text":"slightly changed version geom_segment(). contrast default size rescales size plotting device.","code":""},{"path":"/reference/geom_segment_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segments (fixed size ~ window ratio) — geom_segment_fixed","text":"","code":"geom_segment_fixed(   ...,   mapping = ggplot2::aes(),   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_segment_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segments (fixed size ~ window ratio) — geom_segment_fixed","text":"... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_text_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Text (fixed size ~ window ratio) — geom_text_fixed","title":"Text (fixed size ~ window ratio) — geom_text_fixed","text":"slightly changed version geom_text(). contrast default size rescales size plotting device.","code":""},{"path":"/reference/geom_text_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text (fixed size ~ window ratio) — geom_text_fixed","text":"","code":"geom_text_fixed(   ...,   mapping = ggplot2::aes(),   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"/reference/geom_text_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text (fixed size ~ window ratio) — geom_text_fixed","text":"... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/getActive.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain name of active content — getActive","title":"Obtain name of active content — getActive","text":"Gets name currently active content object.","code":""},{"path":"/reference/getActive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain name of active content — getActive","text":"","code":"getActive(object, ...)  # S4 method for class 'SPATA2' getActive(object, what)"},{"path":"/reference/getActive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain name of active content — getActive","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getActive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain name of active content — getActive","text":"Character value.","code":""},{"path":"/reference/getActiveExpressionMatrixName.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getActiveExpressionMatrixName","title":"Deprecated — getActiveExpressionMatrixName","text":"Deprecated favor activeMatrix().","code":""},{"path":"/reference/getActiveExpressionMatrixName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getActiveExpressionMatrixName","text":"","code":"getActiveExpressionMatrixName(...)"},{"path":"/reference/getActiveMatrixName.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getActiveMatrixName","title":"Deprecated — getActiveMatrixName","text":"Deprecated favor activeMatrix().","code":""},{"path":"/reference/getActiveMatrixName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getActiveMatrixName","text":"","code":"getActiveMatrixName(object, ...)"},{"path":"/reference/getAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain molecular assay — getAssay","title":"Obtain molecular assay — getAssay","text":"Retrieves object class MolecularAssay provided object.","code":""},{"path":"/reference/getAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain molecular assay — getAssay","text":"","code":"getAssay(object, assay_name = activeAssay(object))"},{"path":"/reference/getAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain molecular assay — getAssay","text":"object object class SPATA2 , case S4 generics, objects classes method defined. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain molecular assay — getAssay","text":"Assay data corresponding specified name.","code":""},{"path":"/reference/getAssay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain molecular assay — getAssay","text":"function retrieves assay data provided object based specified assay name. internally calls containsAssay() ensure assay exists object.","code":""},{"path":[]},{"path":"/reference/getAssayModalities.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain assay names/modalites — getAssayModalities","title":"Obtain assay names/modalites — getAssayModalities","text":"Retrieves names modalities assays present provided object. Since name assay identical molecular modality functions return output. , something wrong.","code":""},{"path":"/reference/getAssayModalities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain assay names/modalites — getAssayModalities","text":"","code":"getAssayModalities(object)  getAssayNames(object)"},{"path":"/reference/getAssayModalities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain assay names/modalites — getAssayModalities","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getAssayModalities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain assay names/modalites — getAssayModalities","text":"character vector containing names assays.","code":""},{"path":[]},{"path":"/reference/getAutoencoderAssessment.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain information about the optimal neural network set up — getAutoencoderAssessment","title":"Obtain information about the optimal neural network set up — getAutoencoderAssessment","text":"Extracts results assessAutoencoderOptions().","code":""},{"path":"/reference/getAutoencoderAssessment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain information about the optimal neural network set up — getAutoencoderAssessment","text":"","code":"getAutoencoderAssessment(object, ...)"},{"path":"/reference/getAutoencoderAssessment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain information about the optimal neural network set up — getAutoencoderAssessment","text":"object valid spata-object.","code":""},{"path":"/reference/getAutoencoderAssessment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain information about the optimal neural network set up — getAutoencoderAssessment","text":"data.frame containing total variance measured irlba::prcomp_irlba() combination activations/bottlenecks.","code":""},{"path":"/reference/getAutoencoderSetUp.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain information on neural network — getAutoencoderSetUp","title":"Obtain information on neural network — getAutoencoderSetUp","text":"Returns argument input chosen construct neural network generated matrix denoted mtr_name.","code":""},{"path":"/reference/getAutoencoderSetUp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain information on neural network — getAutoencoderSetUp","text":"","code":"getAutoencoderSetUp(object, mtr_name, of_sample = NA)"},{"path":"/reference/getAutoencoderSetUp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain information on neural network — getAutoencoderSetUp","text":"named list.","code":""},{"path":"/reference/getBackgroundColor.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain background color — getBackgroundColor","title":"Obtain background color — getBackgroundColor","text":"Extracts results identifyBackgroundColor().","code":""},{"path":"/reference/getBackgroundColor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain background color — getBackgroundColor","text":"","code":"getBackgroundColor(object, ...)  # S4 method for class 'SPATA2' getBackgroundColor(object, img_name = NULL, default = \"white\", ...)  # S4 method for class 'SpatialData' getBackgroundColor(object, img_name = NULL, default = \"white\", ...)  # S4 method for class 'HistoImage' getBackgroundColor(object, default = \"white\")"},{"path":"/reference/getBackgroundColor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain background color — getBackgroundColor","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). default Color default background color set.","code":""},{"path":"/reference/getBackgroundColor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain background color — getBackgroundColor","text":"Character value.","code":""},{"path":"/reference/getBarcodeSpotDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getBarcodeSpotDistance","title":"Deprecated — getBarcodeSpotDistance","text":"Deprecated favor getObsDistances().","code":""},{"path":"/reference/getBarcodeSpotDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getBarcodeSpotDistance","text":"","code":"getBarcodeSpotDistance(...)"},{"path":"/reference/getBarcodeSpotDistances.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain distances between barcodes — getBarcodeSpotDistances","title":"Obtain distances between barcodes — getBarcodeSpotDistances","text":"Obtain distances barcodes","code":""},{"path":"/reference/getBarcodeSpotDistances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain distances between barcodes — getBarcodeSpotDistances","text":"","code":"getBarcodeSpotDistances(   object,   barcodes = NULL,   unit = \"pixel\",   arrange = FALSE,   verbose = NULL )"},{"path":"/reference/getBarcodeSpotDistances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain distances between barcodes — getBarcodeSpotDistances","text":"object object class SPATA2 , case S4 generics, objects classes method defined. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) barcdoes Character vector NULL. character, input barcodes considered.","code":""},{"path":"/reference/getBarcodeSpotDistances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain distances between barcodes — getBarcodeSpotDistances","text":"data.frame observation/row corresponds barcodes-spot ~ barcode-spot pair.","code":""},{"path":"/reference/getBarcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain barcodes — getBarcodes","title":"Obtain barcodes — getBarcodes","text":"Returns character vector barcode names. See details .","code":""},{"path":"/reference/getBarcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain barcodes — getBarcodes","text":"","code":"getBarcodes(object, across = NULL, across_subset = NULL, simplify = TRUE)"},{"path":"/reference/getBarcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain barcodes — getBarcodes","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. simplify Logical. set TRUE output list simplified vector possible. set FALSE list returned.","code":""},{"path":"/reference/getBarcodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain barcodes — getBarcodes","text":"Named character vector list.","code":""},{"path":"/reference/getBarcodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain barcodes — getBarcodes","text":"argument across specified output named according group membership variable specified assigns barcode spots . simplify set FALSE list returned. specifying across makes function return unnamed character vector containing barcodes.","code":""},{"path":"/reference/getBarcodesInPolygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain barcodes in polygon — getBarcodesInPolygon","title":"Obtain barcodes in polygon — getBarcodesInPolygon","text":"Extracts barcodes barcode-spots fall given polygon. Works closely sp::point..polygon().","code":""},{"path":"/reference/getBarcodesInPolygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain barcodes in polygon — getBarcodesInPolygon","text":"","code":"getBarcodesInPolygon(object, polygon_df, strictly = TRUE)  getBarcodesInPolygonList(object, polygon_list, strictly = TRUE)"},{"path":"/reference/getBarcodesInPolygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain barcodes in polygon — getBarcodesInPolygon","text":"object object class SPATA2 , case S4 generics, objects classes method defined. polygon_df data.frame contains vertices polygon form two variables: x y. Must scaled dimensions currently active image. strictly Logical value. TRUE, barcode spots strictly interior polygon returned. FALSE, barcodes relative interior polygon border vertices returned, . polygon_list named list data.frames numeric variables x y. Observations correspond vertices polygons confine spatial areas. Must contain slot named outer sets outer border spatial area. Can contain multiple slots named inner (suffixed numbers) correspond inner polygons - holes within annotation. Like inner1, inner2.","code":""},{"path":"/reference/getBarcodesInPolygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain barcodes in polygon — getBarcodesInPolygon","text":"Character vector.","code":""},{"path":"/reference/getCCD.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain center to center distance — getCCD","title":"Obtain center to center distance — getCCD","text":"Extracts center center distance barcode-spots depending method used.","code":""},{"path":"/reference/getCCD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain center to center distance — getCCD","text":"","code":"getCCD(object, ...)  # S4 method for class 'SPATA2' getCCD(object, unit = NULL, as_numeric = FALSE, round = FALSE)  # S4 method for class 'SpatialData' getCCD(object, unit = NULL, as_numeric = FALSE, round = FALSE)"},{"path":"/reference/getCCD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain center to center distance — getCCD","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. unit Character value NULL. character, specifies unit distance supposed returned. Use validUnitsOfLength() obtain  valid input options.","code":""},{"path":"/reference/getCCD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain center to center distance — getCCD","text":"Character value.","code":""},{"path":"/reference/getCaptureArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain capture area — getCaptureArea","title":"Obtain capture area — getCaptureArea","text":"Extracts frame data points plotted default.","code":""},{"path":"/reference/getCaptureArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain capture area — getCaptureArea","text":"","code":"getCaptureArea(object, img_name = activeImage(object), unit = NULL)"},{"path":"/reference/getCaptureArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain capture area — getCaptureArea","text":"object object class SPATA2 , case S4 generics, objects classes method defined. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). unit character, forces output unit capture area.","code":""},{"path":"/reference/getCaptureArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain capture area — getCaptureArea","text":"List two length two vectors named x y. Values correspond range capture area along respective axis.","code":""},{"path":[]},{"path":"/reference/getChrRegionsDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain chromosome information — getChrRegionsDf","title":"Obtain chromosome information — getChrRegionsDf","text":"Extracts information regarding start, end length chromosomal arms.","code":""},{"path":"/reference/getChrRegionsDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain chromosome information — getChrRegionsDf","text":"","code":"getChrRegionsDf(object, format = \"long\")"},{"path":"/reference/getChrRegionsDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain chromosome information — getChrRegionsDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. format Character. 'long' rows correspond chromosome arms 'wide' rows correspond chromosomes information respective arms stored separate columns.","code":""},{"path":"/reference/getChrRegionsDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain chromosome information — getChrRegionsDf","text":"Data.frame.","code":""},{"path":"/reference/getCnvFeatureNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain features names under which cnv-analysis results are stored. — getCnvFeatureNames","title":"Obtain features names under which cnv-analysis results are stored. — getCnvFeatureNames","text":"Returns character vector feature names referring barcode-spots chromosomal gains losses computed runCnvAnalysis().","code":""},{"path":"/reference/getCnvFeatureNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain features names under which cnv-analysis results are stored. — getCnvFeatureNames","text":"","code":"getCnvFeatureNames(object, ...)"},{"path":"/reference/getCnvFeatureNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain features names under which cnv-analysis results are stored. — getCnvFeatureNames","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getCnvFeatureNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain features names under which cnv-analysis results are stored. — getCnvFeatureNames","text":"Character vector.","code":""},{"path":"/reference/getCnvGenesDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain CNV results by gene — getCnvGenesDf","title":"Obtain CNV results by gene — getCnvGenesDf","text":"Extracts CNV results form barcode ~ pairs data.frame.","code":""},{"path":"/reference/getCnvGenesDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain CNV results by gene — getCnvGenesDf","text":"","code":"getCnvGenesDf(object, add_meta = TRUE)"},{"path":"/reference/getCnvGenesDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain CNV results by gene — getCnvGenesDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. add_meta Logical value. TRUE, meta information obtained getGenePosDf() every gene added data.frame","code":""},{"path":"/reference/getCnvGenesDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain CNV results by gene — getCnvGenesDf","text":"Data.frame.","code":""},{"path":"/reference/getCnvResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain CNV results — getCnvResults","title":"Obtain CNV results — getCnvResults","text":"Provides convenient access results runCNV().","code":""},{"path":"/reference/getCnvResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain CNV results — getCnvResults","text":"","code":"getCnvResults(object, ...)"},{"path":"/reference/getCnvResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain CNV results — getCnvResults","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getCnvResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain CNV results — getCnvResults","text":"named list.","code":""},{"path":"/reference/getCoordsCenter.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain coordinate center — getCoordsCenter","title":"Obtain coordinate center — getCoordsCenter","text":"Calculates extracts center coordinate frame.","code":""},{"path":"/reference/getCoordsCenter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain coordinate center — getCoordsCenter","text":"","code":"getCoordsCenter(object)"},{"path":"/reference/getCoordsCenter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain coordinate center — getCoordsCenter","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getCoordsCenter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain coordinate center — getCoordsCenter","text":"Numeric vector length two.","code":""},{"path":"/reference/getCoordsDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain coordinates — getCoordsDf","title":"Obtain coordinates — getCoordsDf","text":"Extracts coordinates data.frame identified known entities analysis revolves around.","code":""},{"path":"/reference/getCoordsDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain coordinates — getCoordsDf","text":"","code":"getCoordsDf(object, ...)  # S4 method for class 'SPATA2' getCoordsDf(   object,   variables = NULL,   img_name = activeImage(object),   exclude = TRUE,   as_is = FALSE,   ... )  # S4 method for class 'SpatialData' getCoordsDf(   object,   img_name = activeImage(object),   scale = TRUE,   wh = FALSE,   as_is = FALSE,   ... )"},{"path":"/reference/getCoordsDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain coordinates — getCoordsDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional arguments given joinWithVariables() argument variables specified. variables Character NULL. character, specifies variables merged coordinates data.frame via joinWithVariables(). img_name relevant SPATA2 object contains images. , specifies name image original coordinates scaled. NULL, defaults active image.","code":""},{"path":"/reference/getCoordsDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain coordinates — getCoordsDf","text":"Data.frame , among others, contains least variables x_orig, y_orig barcodes","code":""},{"path":[]},{"path":"/reference/getCoordsDfSA.html","id":null,"dir":"Reference","previous_headings":"","what":"Relate points to spatial annotations — getCoordsDfSA","title":"Relate points to spatial annotations — getCoordsDfSA","text":"Adds spatial relation spatial annotation coordinates data.frame. See details examples .","code":""},{"path":"/reference/getCoordsDfSA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relate points to spatial annotations — getCoordsDfSA","text":"","code":"getCoordsDfSA(   object,   ids = idSA(object),   distance = \"dte\",   resolution = recSgsRes(object),   core = TRUE,   core0 = FALSE,   periphery = TRUE,   angle_span = c(0, 360),   n_bins_angle = 1,   dist_unit = getDefaultUnit(object),   coords_df = NULL,   variables = NULL,   format = \"wide\",   incl_edge = TRUE,   drop_na = TRUE,   verbose = NULL,   ... )  getCoordsDfST(   object,   id = idST(object),   width = getTrajectoryLength(object, id = id),   dist_unit = getDefaultUnit(object),   resolution = recSgsRes(object),   outside = TRUE,   variables = NULL,   format = \"wide\",   verbose = NULL,   ... )"},{"path":"/reference/getCoordsDfSA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relate points to spatial annotations — getCoordsDfSA","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector. Specifies IDs spatial annotations interest. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). core Logical value. FALSE, data points lie inside core spatial annotation removed. core0 Logical value. TRUE, dist valus core data points set 0. angle_span Numeric vector length 2. Confines area screened angle span relative center closest spatial annotation. n_bins_angle Numeric value. number bins observations categorized variable bins_angle. dist_unit Character value. Unit distance computed. Defaults pixel. coords_df Data.frame. NULL, default, coordinates data.frame obtained via getCoordsDf() used. Else data.frame observations can put relation spatial annotation. Requires numeric variables named x y pixel units. variables Character vector. numeric variables included screening process. Makre sure correct matrix active respective assays. format Character value. Either 'long' 'wide'. Defaults 'wide'. 'wide' variable gets column.  'long', data.frame organized column called variables contains variable names column called 'values' contains values. incl_edge Logical value. TRUE, default, edges tissue sections identified identifyTissueOutline() used ensure data points related spatial annotation located tissue section spatial annotation. Data points share tissue section obtain NAs created variables. drop_na Logical value (relevant incl_edge = TRUE). TRUE, default, data points share tissue section spatial annotation dropped! verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional arguments given joinWithVariables(). used empty coords_df NULL.","code":""},{"path":"/reference/getCoordsDfSA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relate points to spatial annotations — getCoordsDfSA","text":"Data.frame. See details .","code":""},{"path":"/reference/getCoordsDfSA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relate points to spatial annotations — getCoordsDfSA","text":"coordinates data.frame returned getCoordsDf() additional variables: dist: Numeric. distance data point outline spatial annotation. dist_unit: Character. unit distance computed. bins_dist: Factor. bin data point assigned based dist value resolution parameter. Binwidth equal value resolution. angle: Numeric. angle data point center spatial annotation. bins_angle: Factor. bin data point assigned based angle value. rel_loc: Character. Possible values 'core', data point lies inside spatial annotation, 'periphery' data point lies outside boundaries spatial annotation inside area denoted via distance outside, data point lies beyond screening area (distance spatial annotation boundaries bigger value denoted distance). id Character. ID spatial annotation data points lies closest . (relevant case length(ids) > 1) tissue_section Character. tissue section spatial annotation variable id located.","code":""},{"path":"/reference/getCoordsDfSA.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Relate points to spatial annotations — getCoordsDfSA","text":"scenarious, make sense relate data points tissue sections spatial annotation located different tissue section. Hence, default function (incl_edge = TRUE, drop_na = TRUE) set simply remove data points output. See examples.","code":""},{"path":"/reference/getCoordsDfSA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relate points to spatial annotations — getCoordsDfSA","text":"","code":"library(SPATA2) library(patchwork) library(tidyverse)  data(\"example_data\")  # Example 1 - One spatial annotation on one tissue section object <- loadExampleObject(\"UKF275T\", process = TRUE, meta = TRUE)  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    inner_borders = FALSE,    force1 = TRUE    )  # default distance = \"dte\" -> uses distToEdge() coords_df <- getCoordsDfSA(object, ids = \"hypoxia_ann\", binwidth = \"1mm\")  p1 <-   plotSurface(object, \"HM_HYPOXIA\", pt_clrsp = \"inferno\") +   ggpLayerSpatAnnOutline(object, ids = \"hypoxia_ann\", line_color = \"white\")  p2 <- plotSurface(coords_df, \"dist\")  p1 + p2  plotSurface(coords_df, color_by = \"bins_dist\", pt_clrp = \"inferno\") plotSurface(coords_df, color_by = \"rel_loc\", pt_clrp = \"npg\")  coords_df_3mm <- getCoordsDfSA(object, ids = \"hypoxia_ann\", resolution = \"2mm\")  plotSurface(coords_df_3mm, color_by = \"dist\") +   plotSurface(coords_df_3mm, color_by = \"rel_loc\", pt_clrp = \"npg\")   ## Example 2 - Multiple spatial annotations on one tissue section  object <- loadExampleObject(\"UKF313T\")  necr_ids <- getSpatAnnIds(object, tags = c(\"compr\", \"necrotic\"), test = \"all\")  plotSpatialAnnotations(object, ids = necr_ids, line_size = 1, fill = NA)  # considered individually  map( .x = necr_ids, .f = function(id){    coords_df <- getCoordsDfSA(object, ids = id, distance = \"dte\")    p1 <-     plotSurface(coords_df, color_by = \"dist\") +     ggpLayerSpatAnnOutline(object, ids = id, line_color = \"white\") +     labs(caption = id)    return(p1)  } ) %>% wrap_plots(., nrow = 2)  # considered alltogether  coords_df <- getCoordsDfSA(object, ids = necr_ids)  plotSurface(coords_df, color_by = \"dist\") +   ggpLayerSpatAnnOutline(object, ids = necr_ids)  coords_df <- getCoordsDfSA(object, ids = necr_ids, core0 = TRUE)  plotSurface(coords_df, color_by = \"dist\") +   ggpLayerSpatAnnOutline(object, ids = necr_ids)   ## Example 3 - Multiple tissue sections  object <- loadExampleObject(\"LMU_MCI\", process = TRUE, meta = TRUE)  plotSurface(object, color_by = \"tissue_section\") +   ggpLayerTissueOutline(object)  plotSpatialAnnotations(object, ids = c(\"inj1\", \"inj2\"))  # the default coords_df <- getCoordsDfSA(object, ids = \"inj1\", incl_edge = T, drop_na = T)  plotSurface(coords_df, color_by = \"dist\") +   ggpLayerTissueOutline(object)  # drop_na = FALSE coords_df <- getCoordsDfSA(object, ids = \"inj1\", incl_edge = T, drop_na = F)  plotSurface(coords_df, color_by = \"dist\") +   ggpLayerTissueOutline(object) +   ggpLayerSpatAnnOutline(object, ids = c(\"inj1\", \"inj2\"))  # incl_edge = FALSE (does not make sense in this scenario) coords_df <- getCoordsDfSA(object, ids = \"inj1\", incl_edge = F)  plotSurface(coords_df, color_by = \"dist\") +   ggpLayerTissueOutline(object)  ## Example 4 - Using external coordinate data.frames  # get mouse data object <- example_data$object_lmu_mci_diet object <- identifyTissueOutline(object)  hemispheres <- ggpLayerTissueOutline(object) injuries <- ggpLayerSpatAnnOutline(object, ids = c(\"inj1\", \"inj2\"))  # get sc deconvolution data sc_input <- example_data$sc_input_mci_lmu  # plot space p_visium <-   plotSurface(object, \"tissue_section\") +   hemispheres +   injuries  p_sc <-   plotSurface(sc_input, color_by = \"cell_type\", pt_size = 1) +   hemispheres +   injuries  p_visium + p_sc  # relate cells to spatial annotations sc_input_rel <- getCoordsDfSA(object, ids = \"inj1\", coords_df = sc_input, binwidth = \"250um\")  plotSurface(sc_input_rel, color_by = \"dist\", pt_size = 1) +   hemispheres  ggplot(sc_input_rel, mapping = aes(x = bins_dist)) +  geom_bar(mapping = aes(fill = cell_type), color = \"black\", position = \"fill\") +  theme_classic() +  scale_color_add_on(aes = \"fill\", variable = sc_input_rel$cell_type, clrp = \"tab20b\")"},{"path":"/reference/getCoordsMtr.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain coordinates matrix — getCoordsMtr","title":"Obtain coordinates matrix — getCoordsMtr","text":"Wraps coordinates matrix column names x y rownames correspond barcodes.","code":""},{"path":"/reference/getCoordsMtr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain coordinates matrix — getCoordsMtr","text":"","code":"getCoordsMtr(object, img_name = activeImage(object), orig = FALSE)"},{"path":"/reference/getCoordsMtr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain coordinates matrix — getCoordsMtr","text":"object object class SPATA2 , case S4 generics, objects classes method defined. img_name Character value. name image coordinates scaled . NULL, defaults active image. orig Logical value. TRUE, coordinates scaled image.","code":""},{"path":"/reference/getCoordsMtr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain coordinates matrix — getCoordsMtr","text":"matrix.","code":""},{"path":"/reference/getCoordsMtr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain coordinates matrix — getCoordsMtr","text":"contrast getCoordsDf(), column names output matrix always named x y, regardless whether correspond original x- y-coordiantes (x_orig, y_orig) scaled image specified img_name. input argument orig decides!","code":""},{"path":"/reference/getCoordsRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain coordinate range — getCoordsRange","title":"Obtain coordinate range — getCoordsRange","text":"Extracts range x- y-coordinates.","code":""},{"path":"/reference/getCoordsRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain coordinate range — getCoordsRange","text":"","code":"getCoordsRange(object, cvars = c(\"x\", \"y\"), fct = NULL)"},{"path":"/reference/getCoordsRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain coordinate range — getCoordsRange","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getCoordsRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain coordinate range — getCoordsRange","text":"list two vectors length 2.","code":""},{"path":"/reference/getCountMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain raw counts — getCountMatrix","title":"Obtain raw counts — getCountMatrix","text":"Extracts unprocessed raw count matrix.","code":""},{"path":"/reference/getCountMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain raw counts — getCountMatrix","text":"","code":"getCountMatrix(object, ...)  # S4 method for class 'SPATA2' getCountMatrix(object, assay_name = activeAssay(object), ...)  # S4 method for class 'MolecularAssay' getCountMatrix(object, ...)"},{"path":"/reference/getCountMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain raw counts — getCountMatrix","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getCountMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain raw counts — getCountMatrix","text":"matrix unprocessed molecular counts rownames corresponding features column names corresponding barcodes.","code":""},{"path":"/reference/getDeaLfcName.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain LFC name — getDeaLfcName","title":"Obtain LFC name — getDeaLfcName","text":"Extracts name variable contains log fold change results DEA.","code":""},{"path":"/reference/getDeaLfcName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain LFC name — getDeaLfcName","text":"","code":"getDeaLfcName(object, across = getDefaultGrouping(object), method_de = NULL)"},{"path":"/reference/getDeaLfcName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain LFC name — getDeaLfcName","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options.","code":""},{"path":"/reference/getDeaLfcName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain LFC name — getDeaLfcName","text":"Character value.","code":""},{"path":"/reference/getDeaResultsDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain DEA results — getDeaGenes","title":"Obtain DEA results — getDeaGenes","text":"Extracts differential expression analysis results. Function getDeaGenes() wrapper around getDeaResultsDf() returns gene names character vector.","code":""},{"path":"/reference/getDeaResultsDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain DEA results — getDeaGenes","text":"","code":"getDeaGenes(   object,   across = getDefaultGrouping(object),   across_subset = NULL,   method_de = \"wilcox\",   max_adj_pval = NULL,   min_lfc = 0,   n_highest_lfc = NULL,   n_lowest_pval = NULL,   flatten = TRUE,   assay_name = activeAssay(object),   ... )  getDeaResultsDf(   object,   across = getDefaultGrouping(object),   across_subset = NULL,   relevel = FALSE,   method_de = \"wilcox\",   max_adj_pval = NULL,   min_lfc = NULL,   n_highest_lfc = NULL,   n_lowest_pval = NULL,   stop_if_null = TRUE,   assay_name = activeAssay(object),   ... )"},{"path":"/reference/getDeaResultsDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain DEA results — getDeaGenes","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. max_adj_pval Numeric value. Sets threshold adjusted p-values. genes adjusted p-values threshold ignored. min_lfc Numeric value. Sets threshold average log fold change. genes average log fold change threshold ignored. n_highest_lfc Numeric value. Affects total number genes kept. See details. n_lowest_pval Numeric value. Affects total number genes kept. See details. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). ... Used absorb deprecated arguments functions. relevel Logical value. set TRUE input order across_subset determines order groups interest displayed. Groups included dropped affects colors displayed.","code":""},{"path":"/reference/getDeaResultsDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain DEA results — getDeaGenes","text":"data.frame: gene Character. differentially expressed genes. 'across' Character. grouping across analysis performed. variable/column name equal input argument across. avg_logFC Numeric. average log-fold change belonging gene differentially expressed.. p_val Numeric. p-values. p_val_adj Numeric. adjusted p-values.","code":""},{"path":"/reference/getDeaResultsDf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain DEA results — getDeaGenes","text":"de-data.frame processed following steps performed every experimental group. Discards genes avg_logFC-values either infinite negative Discards genes adjusted p-values threshold set max_adj_pval Discard genes average log fold change treshold set min_lfc Slices data.frame order every experimental group: n genes highest avg_logFC-values kept n = n_highest_lfc n genes lowest p_val_adj-values kept n = n_lowest_pval Arranges genes according highest avg_logFC-values","code":""},{"path":"/reference/getDefaultGrouping.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getDefaultGrouping","title":"Deprecated — getDefaultGrouping","text":"Deprecated favor activeGrouping().","code":""},{"path":"/reference/getDefaultGrouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getDefaultGrouping","text":"","code":"getDefaultGrouping(object, ...)"},{"path":"/reference/getDefaultInstructions.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain default argument inputs — getDefault","title":"Obtain default argument inputs — getDefault","text":"Obtain default argument inputs","code":""},{"path":"/reference/getDefaultInstructions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain default argument inputs — getDefault","text":"","code":"getDefault(object, arg)  getDefaultInstructions(object)"},{"path":"/reference/getDefaultInstructions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain default argument inputs — getDefault","text":"object valid spata-object.","code":""},{"path":"/reference/getDefaultInstructions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain default argument inputs — getDefault","text":"S4 object containing default argument inputs. respective default case getDefault().","code":""},{"path":"/reference/getDefaultUnit.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain default unit — getDefaultUnit","title":"Obtain default unit — getDefaultUnit","text":"Extracts default unit spatial method spata2 object relies .","code":""},{"path":"/reference/getDefaultUnit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain default unit — getDefaultUnit","text":"","code":"getDefaultUnit(object)"},{"path":"/reference/getDefaultUnit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain default unit — getDefaultUnit","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getDefaultUnit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain default unit — getDefaultUnit","text":"Character value.","code":""},{"path":"/reference/getDimRedDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain dim red data.frame — getDimRedDf","title":"Obtain dim red data.frame — getDimRedDf","text":"Obtain dim red data.frame","code":""},{"path":"/reference/getDimRedDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain dim red data.frame — getDimRedDf","text":"","code":"getDimRedDf(object, method_dr = c(\"pca\", \"tsne\", \"umap\"), ...)  getPcaDf(object, n_pcs = NULL, ...)  getPcaMtr(object, n_pcs = NULL, ...)  getTsneDf(object, ...)  getUmapDf(object, ...)"},{"path":"/reference/getExpressionMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getExpressionMatrix","title":"Deprecated — getExpressionMatrix","text":"Deprecated favor getProcessedMatrix().","code":""},{"path":"/reference/getExpressionMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getExpressionMatrix","text":"","code":"getExpressionMatrix(object, ...)"},{"path":"/reference/getExpressionMatrixNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getExpressionMatrixNames","title":"Deprecated — getExpressionMatrixNames","text":"Deprecated favor getProcessedMatrixNames().","code":""},{"path":"/reference/getExpressionMatrixNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getExpressionMatrixNames","text":"","code":"getExpressionMatrixNames(object, assay_name = activeAssay(object), ...)"},{"path":"/reference/getFeatureDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getFeatureDf","title":"Deprecated — getFeatureDf","text":"Deprecated favor getMetaDf().","code":""},{"path":"/reference/getFeatureDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getFeatureDf","text":"","code":"getFeatureDf(...)"},{"path":"/reference/getFeatureNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain metadata column names — getFeatureNames","title":"Obtain metadata column names — getFeatureNames","text":"Extracts names entries meta data.frame.","code":""},{"path":"/reference/getFeatureNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain metadata column names — getFeatureNames","text":"","code":"getFeatureNames(object, of_class = NULL, ...)"},{"path":"/reference/getFeatureNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain metadata column names — getFeatureNames","text":"object object class SPATA2 , case S4 generics, objects classes method defined. of_class Character vector. Specify class(es) metadata entry must name returned. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getFeatureNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain metadata column names — getFeatureNames","text":"named character vector variables metadata slot (excluding 'sample').","code":""},{"path":"/reference/getFromSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe extraction — getFromSeurat","title":"Safe extraction — getFromSeurat","text":"wrapper around base::tryCatch() predefined error handling messages extraction seurat-object failed.","code":""},{"path":"/reference/getFromSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe extraction — getFromSeurat","text":"","code":"getFromSeurat(return_value, error_handling, error_value, error_ref)"},{"path":"/reference/getFromSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe extraction — getFromSeurat","text":"return_value Whatever needs extracted. error_handling Either 'warning 'stop'. error_value supposed returned extraction fails. error_ref reference feedback message.","code":""},{"path":"/reference/getGeneDistMtr.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain distance measurements of spatially correlated genes — getGeneDistMtr","title":"Obtain distance measurements of spatially correlated genes — getGeneDistMtr","text":"Obtain distance measurements spatially correlated genes","code":""},{"path":"/reference/getGeneDistMtr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain distance measurements of spatially correlated genes — getGeneDistMtr","text":"","code":"getGeneDistMtr(object, of_sample = NA)"},{"path":"/reference/getGeneDistMtr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain distance measurements of spatially correlated genes — getGeneDistMtr","text":"object valid spata-object. of_sample argument currently inactive. might reactivated spata-objects can store one sample.","code":""},{"path":"/reference/getGeneDistMtr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain distance measurements of spatially correlated genes — getGeneDistMtr","text":"data.frame distance matrix.","code":""},{"path":"/reference/getGeneMetaData.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getGeneMetaData","title":"Deprecated — getGeneMetaData","text":"Deprecated favor getMetaVarDf().","code":""},{"path":"/reference/getGeneMetaData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getGeneMetaData","text":"","code":"getGeneMetaData(object, ...)  getGeneMetaDf(object, ...)"},{"path":"/reference/getGenePosDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain gene CNV information — getGenePosDf","title":"Obtain gene CNV information — getGenePosDf","text":"Extracts information regarding gene positioning chromosomes /chromosome arms.","code":""},{"path":"/reference/getGenePosDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain gene CNV information — getGenePosDf","text":"","code":"getGenePosDf(object, keep = FALSE)"},{"path":"/reference/getGenePosDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain gene CNV information — getGenePosDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. keep Logical value, TRUE columns ensemble_gene_id hgnc_symbol included. content hgnc_symbol identical content column genes.","code":""},{"path":"/reference/getGenePosDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain gene CNV information — getGenePosDf","text":"Data.frame.","code":""},{"path":"/reference/getGeneSetDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain gene sets — getGeneSetDf","title":"Obtain gene sets — getGeneSetDf","text":"Extracts gene sets (gene signatures) stored transcriptomic assay.","code":""},{"path":"/reference/getGeneSetDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain gene sets — getGeneSetDf","text":"","code":"getGeneSetDf(object)"},{"path":"/reference/getGeneSetDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain gene sets — getGeneSetDf","text":"object valid spata-object.","code":""},{"path":"/reference/getGeneSetDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain gene sets — getGeneSetDf","text":"Either named list data.frame variables ont gene.","code":""},{"path":"/reference/getGroupNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain group names a grouping variable contains — getGroupNames","title":"Obtain group names a grouping variable contains — getGroupNames","text":"Extracts group names grouping variable.","code":""},{"path":"/reference/getGroupNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain group names a grouping variable contains — getGroupNames","text":"","code":"getGroupNames(object, grouping, ...)"},{"path":"/reference/getGroupNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain group names a grouping variable contains — getGroupNames","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getGroupNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain group names a grouping variable contains — getGroupNames","text":"Character vector","code":""},{"path":"/reference/getGroupNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain group names a grouping variable contains — getGroupNames","text":"","code":"library(SPATA2) library(patchwork)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  p_before <- plotSurface(object, color_by = \"bayes_space\")  plot(p_before)  getGroupNames(object, grouping = \"bayes_space\")  object <- relevelGroups(object, grouping = \"bayes_space\", new_levels = c(\"1\", \"2\", \"3\", \"7\", \"6\", \"5\", \"4\"))  getGroupNames(object, grouping = \"bayes_space\")  p_afterwards <- plotSurface(object, color_by = \"bayes_space\")  # different levels -> different order -> different color assignment p_before + p_afterwards"},{"path":"/reference/getGroupingOptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain variable names that group data points — getGroupingOptions","title":"Obtain variable names that group data points — getGroupingOptions","text":"Extracts names features class factor valid input options arguments grouping, grouping_variable, across.","code":""},{"path":"/reference/getGroupingOptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain variable names that group data points — getGroupingOptions","text":"","code":"getGroupingOptions(object, ...)"},{"path":"/reference/getGroupingOptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain variable names that group data points — getGroupingOptions","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getGroupingOptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain variable names that group data points — getGroupingOptions","text":"Character vector.","code":""},{"path":"/reference/getGseaDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain enrichment data.frame — getGseaDf","title":"Obtain enrichment data.frame — getGseaDf","text":"Extracts results gene set enrichment analysis form data.frame.","code":""},{"path":"/reference/getGseaDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain enrichment data.frame — getGseaDf","text":"","code":"getGseaDf(   object,   across,   across_subset = NULL,   method_de = NULL,   n_gsets = Inf,   signif_var = \"fdr\",   signif_threshold = 1,   stop_if_null = TRUE )"},{"path":"/reference/getGseaDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain enrichment data.frame — getGseaDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. n_gsets Numeric value. Maximal number gene sets whose results included. first n_gsets included starting one lowest significance value. signif_var Character value. Determines considered checking significance. Either 'pval' (p-Value) 'fdr' (False Discovery Rate). signif_threshold Numeric value. Significance values signif_threshold included.","code":""},{"path":"/reference/getGseaDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain enrichment data.frame — getGseaDf","text":"Data.frame contains results gene set enrichment analysis.","code":""},{"path":"/reference/getGseaResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain enrichment results — getGseaResults","title":"Obtain enrichment results — getGseaResults","text":"Extracts results gene set enrichment analysis form either list (reduce set TRUE) object class hyp (reduce set FALSE).","code":""},{"path":"/reference/getGseaResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain enrichment results — getGseaResults","text":"","code":"getGseaResults(   object,   across = getDefaultGrouping(object, verbose = TRUE, \"across\"),   across_subset = NULL,   method_de = NULL,   flatten = TRUE,   stop_if_null = TRUE,   assay_name = activeAssay(object) )"},{"path":"/reference/getGseaResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain enrichment results — getGseaResults","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options.","code":""},{"path":"/reference/getGseaResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain enrichment results — getGseaResults","text":"list object class hyp.","code":""},{"path":"/reference/getHistoImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain HistoImage object — getHistoImage","title":"Obtain HistoImage object — getHistoImage","text":"Extracts S4-containers registered images. Note slot @image might empty. Use loadImage() case. getHistoImage(): Extracts object name. default, active HistoImage image returned. getHistoImageRef(): Extracts reference HistoImage object.","code":""},{"path":"/reference/getHistoImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain HistoImage object — getHistoImage","text":"","code":"getHistoImage(object, ...)  # S4 method for class 'SPATA2' getHistoImage(object, img_name = activeImage(object), ...)  # S4 method for class 'SpatialData' getHistoImage(object, img_name = activeImage(object), ...)  getHistoImageRef(object, ...)  # S4 method for class 'SPATA2' getHistoImageRef(object, ...)  # S4 method for class 'SpatialData' getHistoImageRef(object, ...)"},{"path":"/reference/getHistoImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain HistoImage object — getHistoImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ...  img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/getImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain image — getImage","title":"Obtain image — getImage","text":"Extracts image object class Image specified package EBImage.","code":""},{"path":"/reference/getImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain image — getImage","text":"","code":"getImage(object, ...)  # S4 method for class 'SPATA2' getImage(   object,   img_name = activeImage(object),   xrange = NULL,   yrange = NULL,   expand = 0,   transform = TRUE,   scale_fct = 1,   ... )  # S4 method for class 'SpatialData' getImage(   object,   img_name = activeImage(object),   xrange = NULL,   yrange = NULL,   expand = 0,   transform = TRUE,   scale_fct = 1,   ... )  # S4 method for class 'HistoImage' getImage(   object,   xrange = NULL,   yrange = NULL,   expand = 0,   transform = TRUE,   scale_fct = 1,   ... )"},{"path":"/reference/getImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain image — getImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information. transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object.","code":""},{"path":"/reference/getImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain image — getImage","text":"Object class Image.","code":""},{"path":[]},{"path":"/reference/getImageAnnotationAreaDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImageAnnotationAreaDf","title":"Deprecated — getImageAnnotationAreaDf","text":"Deprecated favor getSpatAnnOutlineDf().","code":""},{"path":"/reference/getImageAnnotationAreaDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImageAnnotationAreaDf","text":"","code":"getImageAnnotationAreaDf(...)"},{"path":"/reference/getImageAnnotationCenter.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImageAnnotationCenter","title":"Deprecated — getImageAnnotationCenter","text":"Deprecated favor getSpatAnnCenter().","code":""},{"path":"/reference/getImageAnnotationCenter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImageAnnotationCenter","text":"","code":"getImageAnnotationCenter(...)"},{"path":"/reference/getImageAnnotationIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImageAnnotationIds","title":"Deprecated — getImageAnnotationIds","text":"Deprecated favor getSpatAnnIds().","code":""},{"path":"/reference/getImageAnnotationIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImageAnnotationIds","text":"","code":"getImageAnnotationIds(...)"},{"path":"/reference/getImageAnnotationTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImageAnnotationTags","title":"Deprecated — getImageAnnotationTags","text":"Deprecated favor getSpatAnnTags().","code":""},{"path":"/reference/getImageAnnotationTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImageAnnotationTags","text":"","code":"getImageAnnotationTags(...)"},{"path":"/reference/getImageCenter.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain image center — getImageCenter","title":"Obtain image center — getImageCenter","text":"Computes extracts center image frame.","code":""},{"path":"/reference/getImageCenter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain image center — getImageCenter","text":"","code":"getImageCenter(object, ...)  # S4 method for class 'SPATA2' getImageCenter(object)  # S4 method for class 'SpatialData' getImageCenter(object, img_name = activeImage(object))  # S4 method for class 'HistoImage' getImageCenter(object)"},{"path":"/reference/getImageCenter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain image center — getImageCenter","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/getImageCenter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain image center — getImageCenter","text":"Numeric vector length two.","code":""},{"path":"/reference/getImageDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain image as a data.frame — getImageDf","title":"Obtain image as a data.frame — getImageDf","text":"Extracts data.frame row corresponds pixel image. (Faster getPixelDf(), though without options.)","code":""},{"path":"/reference/getImageDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain image as a data.frame — getImageDf","text":"","code":"getImageDf(object, ...)  # S4 method for class 'SPATA2' getImageDf(   object,   img_name = activeImage(object),   transform = TRUE,   scale_fct = 1,   ... )  # S4 method for class 'SpatialData' getImageDf(   object,   img_name = activeImage(object),   transform = TRUE,   scale_fct = 1 )  # S4 method for class 'HistoImage' getImageDf(object, transform = TRUE, scale_fct = 1)  # S4 method for class 'SpatialAnnotation' getImageDf(object, rescale_axes = TRUE, scale_fct = 1)  # S4 method for class 'Image' getImageDf(object, scale_fct = 1)"},{"path":"/reference/getImageDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain image as a data.frame — getImageDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object. rescale_axes Logical value. TRUE, rescales pixel positions (height/width) position original image. image annotation contains crop original image shows area image annotation (plus expand, see getSpatialAnnotation()).","code":""},{"path":"/reference/getImageDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain image as a data.frame — getImageDf","text":"Data.frame three variables. width: Numeric. Width value pixel (position horizontal axis). height: Numeric. Height value pixel (position vertical axis). color: Character. HEX-code color pixel carries.","code":""},{"path":[]},{"path":"/reference/getImageDims.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain image dimensions/ranges — getImageDims","title":"Obtain image dimensions/ranges — getImageDims","text":"Extracts information regarding image. getImageDims(): Extracts dimensions image, namely width, height depth. getImageRange(): Extracts range image x- y-axis.","code":""},{"path":"/reference/getImageDims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain image dimensions/ranges — getImageDims","text":"","code":"getImageDims(object, ...)  # S4 method for class 'SPATA2' getImageDims(object, img_name = activeImage(object), ...)  # S4 method for class 'SpatialData' getImageDims(object, img_name = activeImage(object), ...)  # S4 method for class 'HistoImage' getImageDims(object, ...)  getImageRange(object, ...)  # S4 method for class 'SPATA2' getImageRange(object, img_name = activeImage(object), ...)  # S4 method for class 'SpatialData' getImageRange(object, img_name = activeImage(object))  # S4 method for class 'HistoImage' getImageRange(object, ...)"},{"path":"/reference/getImageDims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain image dimensions/ranges — getImageDims","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/getImageDims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain image dimensions/ranges — getImageDims","text":"Similar output, different data structure: getImageDims(): Vector length three: image width, image height, image depth getImageRange(): Named list, names x y. slot contains vector length two describes range x- y-axis.","code":""},{"path":"/reference/getImageDims.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain image dimensions/ranges — getImageDims","text":"case confusion due overlapping naming conventions: X-axis, x x-range terms coordinates, corresponds image width terms image analysis. Y-axis, y  y-range, terms coordinates, refers image-height terms image analysis. SPATA2 primarily uses coordinates naming convention.","code":""},{"path":"/reference/getImageDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain directory to image — getImageDir","title":"Obtain directory to image — getImageDir","text":"Extracts directory image loaded registered via registerImage().","code":""},{"path":"/reference/getImageDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain directory to image — getImageDir","text":"","code":"getImageDir(object, img_name = activeImage(object))  getImageDirectories(object)"},{"path":"/reference/getImageDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain directory to image — getImageDir","text":"object object class SPATA2 , case S4 generics, objects classes method defined. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/getImageDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain directory to image — getImageDir","text":"Character value vector case getImageDirectories().","code":""},{"path":"/reference/getImageDirDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImageDirDefault","title":"Deprecated — getImageDirDefault","text":"Deprecated favor getImageDir().","code":""},{"path":"/reference/getImageDirDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImageDirDefault","text":"","code":"getImageDirDefault(object, ...)"},{"path":"/reference/getImageDirHighres.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImageDirHighres","title":"Deprecated — getImageDirHighres","text":"Deprecated favor getImageDir().","code":""},{"path":"/reference/getImageDirHighres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImageDirHighres","text":"","code":"getImageDirHighres(object, fdb_fn = \"warning\", check = FALSE, ...)"},{"path":"/reference/getImageDirLowres.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImageDirLowres","title":"Deprecated — getImageDirLowres","text":"Deprecated favor getImageDir().","code":""},{"path":"/reference/getImageDirLowres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImageDirLowres","text":"","code":"getImageDirLowres(object, fdb_fn = \"warning\", check = FALSE)"},{"path":"/reference/getImageNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain names of registered images — getImageNames","title":"Obtain names of registered images — getImageNames","text":"Extracts names images (HistoImage container objects) currently registered object.","code":""},{"path":"/reference/getImageNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain names of registered images — getImageNames","text":"","code":"getImageNames(object, ...)  # S4 method for class 'SPATA2' getImageNames(object, ref = TRUE, ...)  # S4 method for class 'SpatialData' getImageNames(object, ref = TRUE, ...)"},{"path":"/reference/getImageNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain names of registered images — getImageNames","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. ref Logical value. FALSE, name reference image included.","code":""},{"path":"/reference/getImageNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain names of registered images — getImageNames","text":"Character vector.","code":""},{"path":"/reference/getImageRaster.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain image raster-(information) — getImageRaster","title":"Obtain image raster-(information) — getImageRaster","text":"Obtain image raster-(information)","code":""},{"path":"/reference/getImageRaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain image raster-(information) — getImageRaster","text":"","code":"getImageRaster(object, ...)  # S4 method for class 'SPATA2' getImageRaster(   object,   img_name = activeImage(object),   transform = TRUE,   xrange = NULL,   yrange = NULL,   expand = 0 )  # S4 method for class 'HistoImage' getImageRaster(object, xrange = NULL, yrange = NULL, expand = 0)  getImageRasterInfo(object, xrange = NULL, yrange = NULL)"},{"path":"/reference/getImageRaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain image raster-(information) — getImageRaster","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information.","code":""},{"path":"/reference/getImageSectionsByBarcode.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain image sections by barcode — getImageSectionsByBarcode","title":"Obtain image sections by barcode — getImageSectionsByBarcode","text":"Cuts area image covered barcode.","code":""},{"path":"/reference/getImageSectionsByBarcode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain image sections by barcode — getImageSectionsByBarcode","text":"","code":"getImageSectionsByBarcode(object, barcodes = NULL, expand = 0, verbose = NULL)"},{"path":"/reference/getImageSectionsByBarcode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain image sections by barcode — getImageSectionsByBarcode","text":"object object class SPATA2 , case S4 generics, objects classes method defined. barcodes Characte vector NULL. character, subsets barcodes interest. NULL, barcodes considered. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/getImageSectionsByBarcode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain image sections by barcode — getImageSectionsByBarcode","text":"named list. slot named one barcode. content another list contains barcode specific image section well x- y-ranges used crop section.","code":""},{"path":"/reference/getImageTransformations.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain image transformation instructions — getImageTransformations","title":"Obtain image transformation instructions — getImageTransformations","text":"Extracts list instructions required image transformations ensure alignment image reference image.","code":""},{"path":"/reference/getImageTransformations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain image transformation instructions — getImageTransformations","text":"","code":"getImageTransformations(object, ...)  # S4 method for class 'SPATA2' getImageTransformations(object, img_name = activeImage(object), ...)  # S4 method for class 'SpatialData' getImageTransformations(object, img_name = activeImage(object), ...)  # S4 method for class 'SpatialData' getImageTransformations(object, img_name = activeImage(object), ...)  # S4 method for class 'HistoImage' getImageTransformations(object, ...)"},{"path":"/reference/getImageTransformations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain image transformation instructions — getImageTransformations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/getImageTransformations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain image transformation instructions — getImageTransformations","text":"list following structure: angle: Numeric value ranges 0-359. Indicates angle degrees b y image needs rotated clockwise direction. flip: List two logical values named horizontal vertical indicating whether image flipped along respective axis. stretch: List two numeric values named horizontal vertical indicating whether (much) image stretched along respective axis. translate: Vector two numeric values named horizontal vertical. Indicate number pixels image needs translated. Positive values shift image downwards right, respectively. Negative values shift image upwards left, respectively.","code":""},{"path":"/reference/getImageTransformations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain image transformation instructions — getImageTransformations","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  plotImage(object)  object <- alignImage(object, img_name = \"lowres\", angle = 90)  # note that $angle contains instructions to rotate the image to 90° getImageTransformations(object, img_name = \"lowres\")  plotImage(object)  object <- resetImageTransformations(object, img_name = \"lowres\")  getImageTransformations(object, img_name = \"lowres\")  plotImage(object)"},{"path":"/reference/getImgAnnArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImgAnnArea","title":"Deprecated — getImgAnnArea","text":"Deprecated favor getSpatAnnArea().","code":""},{"path":"/reference/getImgAnnArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImgAnnArea","text":"","code":"getImgAnnArea(...)"},{"path":"/reference/getImgAnnBorderDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImgAnnBorderDf","title":"Deprecated — getImgAnnBorderDf","text":"Deprecated favor getSpatAnnOutlineDf().","code":""},{"path":"/reference/getImgAnnBorderDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImgAnnBorderDf","text":"","code":"getImgAnnBorderDf(...)"},{"path":"/reference/getImgAnnCenter.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImgAnnCenter","title":"Deprecated — getImgAnnCenter","text":"Deprecated favor getSpatAnnCenter().","code":""},{"path":"/reference/getImgAnnCenter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImgAnnCenter","text":"","code":"getImgAnnCenter(...)"},{"path":"/reference/getImgAnnCenters.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImgAnnCenters","title":"Deprecated — getImgAnnCenters","text":"Deprecated favor getSpatAnnCenters().","code":""},{"path":"/reference/getImgAnnCenters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImgAnnCenters","text":"","code":"getImgAnnCenters(...)"},{"path":"/reference/getImgAnnIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImgAnnIds","title":"Deprecated — getImgAnnIds","text":"Deprecated favor getSpatAnnIds().","code":""},{"path":"/reference/getImgAnnIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImgAnnIds","text":"","code":"getImgAnnIds(...)"},{"path":"/reference/getImgAnnOutlineDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImgAnnOutlineDf","title":"Deprecated — getImgAnnOutlineDf","text":"Deprecated favor getSpatAnnOutlineDf().","code":""},{"path":"/reference/getImgAnnOutlineDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImgAnnOutlineDf","text":"","code":"getImgAnnOutlineDf(...)"},{"path":"/reference/getImgAnnRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImgAnnRange","title":"Deprecated — getImgAnnRange","text":"Deprecated favor getSpatAnnRange().","code":""},{"path":"/reference/getImgAnnRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImgAnnRange","text":"","code":"getImgAnnRange(...)"},{"path":"/reference/getImgAnnTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getImgAnnTags","title":"Deprecated — getImgAnnTags","text":"Deprecated favor getSpatAnnTags().","code":""},{"path":"/reference/getImgAnnTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getImgAnnTags","text":"","code":"getImgAnnTags(...)"},{"path":"/reference/getLogfileDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain object logfile data.frame — getLogfileDf","title":"Obtain object logfile data.frame — getLogfileDf","text":"Extracts logfile stores information progress made provided SPATA2 object.","code":""},{"path":"/reference/getLogfileDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain object logfile data.frame — getLogfileDf","text":"","code":"getLogfileDf(object)"},{"path":"/reference/getLogfileDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain object logfile data.frame — getLogfileDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getLogfileDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain object logfile data.frame — getLogfileDf","text":"data.frame variables fn_name, date_time, args_input, pkg_version. See vignette logfile information.","code":""},{"path":"/reference/getMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a data matrix — getMatrix","title":"Obtain a data matrix — getMatrix","text":"Extracts matrix multiple matrices molecular data.","code":""},{"path":"/reference/getMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a data matrix — getMatrix","text":"","code":"getMatrix(object, mtr_name = NULL, ...)  # S4 method for class 'SPATA2' getMatrix(object, mtr_name = NULL, assay_name = activeAssay(object))  # S4 method for class 'MolecularAssay' getMatrix(object, mtr_name = NULL)  getMatrices(object, ...)  # S4 method for class 'SPATA2' getMatrices(object, assay_name = activeAssay(object), ...)  # S4 method for class 'MolecularAssay' getMatrices(object, ...)"},{"path":"/reference/getMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a data matrix — getMatrix","text":"object object class SPATA2 , case S4 generics, objects classes method defined. mtr_name Character value. name matrix extract. NULL, defaults active matrix provided specified assay. ... Used absorb deprecated arguments functions. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a data matrix — getMatrix","text":"numeric matrix rownames corresponding molecule names column names corresponding barcodes. named list case getMatrices().","code":""},{"path":[]},{"path":"/reference/getMatrixNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain matrix names — getMatrixNames","title":"Obtain matrix names — getMatrixNames","text":"Retrieves names matrices present specified provided assay.","code":""},{"path":"/reference/getMatrixNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain matrix names — getMatrixNames","text":"","code":"getMatrixNames(object, ...)  # S4 method for class 'SPATA2' getMatrixNames(   object,   assay_name = activeAssay(object),   only_proc = FALSE,   ... )  # S4 method for class 'MolecularAssay' getMatrixNames(object, only_proc = FALSE, ...)"},{"path":"/reference/getMatrixNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain matrix names — getMatrixNames","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). only_proc Logical. TRUE, names processed matrices slot @mtr_proc returned.","code":""},{"path":"/reference/getMatrixNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain matrix names — getMatrixNames","text":"character vector containing names matrices.","code":""},{"path":[]},{"path":"/reference/getMetaDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain meta data.frame for observations — getMetaDf","title":"Obtain meta data.frame for observations — getMetaDf","text":"Retrieves meta data frame provided object contains meta information objects's observations.","code":""},{"path":"/reference/getMetaDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain meta data.frame for observations — getMetaDf","text":"","code":"getMetaDf(object)"},{"path":"/reference/getMetaDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain meta data.frame for observations — getMetaDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getMetaDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain meta data.frame for observations — getMetaDf","text":"meta data frame.","code":""},{"path":"/reference/getMetaVarDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain molecular meta data.frame — getMetaVarDf","title":"Obtain molecular meta data.frame — getMetaVarDf","text":"Retrieves metadata variable data frame specified assay given object. metadata variable data frame empty, creates new one based molecule names. confuse getMetaDf() contains meta variables observations.","code":""},{"path":"/reference/getMetaVarDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain molecular meta data.frame — getMetaVarDf","text":"","code":"getMetaVarDf(object, assay_name = activeAssay(object), verbose = TRUE)"},{"path":"/reference/getMetaVarDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain molecular meta data.frame — getMetaVarDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/getMetaVarDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain molecular meta data.frame — getMetaVarDf","text":"data frame containing metadata variables specified assay.","code":""},{"path":"/reference/getMethodSpecifics.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain platform details — getMethodSpecifics","title":"Obtain platform details — getMethodSpecifics","text":"Extracts list method specifics SpatialMethod SPATA2 object.","code":""},{"path":"/reference/getMethodSpecifics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain platform details — getMethodSpecifics","text":"","code":"getMethodSpecifics(object)"},{"path":"/reference/getMethodSpecifics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain platform details — getMethodSpecifics","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getMethodSpecifics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain platform details — getMethodSpecifics","text":"named list.","code":""},{"path":"/reference/getModality.html","id":null,"dir":"Reference","previous_headings":"","what":"Obatin molecular modality — getModality","title":"Obatin molecular modality — getModality","text":"Extracts molecular modality chosen molecular assay.","code":""},{"path":"/reference/getModality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obatin molecular modality — getModality","text":"","code":"getModality(object, ...)  # S4 method for class 'SPATA2' getModality(object, assay_name = activeAssay(object), ...)  # S4 method for class 'MolecularAssay' getModality(object, ...)"},{"path":"/reference/getModality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obatin molecular modality — getModality","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getModality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obatin molecular modality — getModality","text":"Character value.","code":""},{"path":"/reference/getModality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obatin molecular modality — getModality","text":"","code":"library(SPATA2)  object <- loadExampleObject(\"UKF275T\")  getModality(object)"},{"path":"/reference/getMoleculeCoordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain molecule coordinates — getMoleculeCoordinates","title":"Obtain molecule coordinates — getMoleculeCoordinates","text":"Extracts molecule coordinates specfific assay.","code":""},{"path":"/reference/getMoleculeCoordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain molecule coordinates — getMoleculeCoordinates","text":"","code":"getMoleculeCoordinates(   object,   molecules = NULL,   assay_name = activeAssay(object) )"},{"path":"/reference/getMoleculeCoordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain molecule coordinates — getMoleculeCoordinates","text":"object object class SPATA2 , case S4 generics, objects classes method defined. molecules Character NULL. character, specifies molecules interest output data.frame filtered accordingly. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getMoleculeCoordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain molecule coordinates — getMoleculeCoordinates","text":"Data.frame variables molecule, x_orig, x, y_orig, y.","code":""},{"path":"/reference/getMoleculeTypeList.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a list of molecules — getMoleculeTypeList","title":"Obtain a list of molecules — getMoleculeTypeList","text":"Retrieves list molecules sorted molecular modality.","code":""},{"path":"/reference/getMoleculeTypeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a list of molecules — getMoleculeTypeList","text":"","code":"getMoleculeTypeList(object, molecules = NULL)"},{"path":"/reference/getMoleculeTypeList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a list of molecules — getMoleculeTypeList","text":"object object class SPATA2 , case S4 generics, objects classes method defined. molecules character vector specifying subset molecules include output. default, molecules included.","code":""},{"path":"/reference/getMoleculeTypeList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a list of molecules — getMoleculeTypeList","text":"list containing names molecules categorized type.","code":""},{"path":"/reference/getMoleculeTypeList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain a list of molecules — getMoleculeTypeList","text":"function categorizes molecules different types based provided object. 'molecules' argument provided character vector, function returns specified molecules categorized type. Otherwise, returns molecules categorized type.","code":""},{"path":[]},{"path":"/reference/getMolecules.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain molecule names — getGenes","title":"Obtain molecule names — getGenes","text":"Retrieves names molecules present given object, optionally filtered specific signature.","code":""},{"path":"/reference/getMolecules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain molecule names — getGenes","text":"","code":"getGenes(object, signatures = NULL, simplify = TRUE, ...)  getMetabolites(object, signatures = NULL, simplify = TRUE, ...)  getMolecules(   object,   signatures = NULL,   simplify = TRUE,   assay_name = activeAssay(object) )  getProteins(object, signatures = NULL, simplify = TRUE, ...)"},{"path":"/reference/getMolecules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain molecule names — getGenes","text":"object object class SPATA2 , case S4 generics, objects classes method defined. signatures Character vector NULL. character, specifies name signatures filter molecules . simplify relevant signatures NULL. TRUE, molecule names merged one character vector unique molecule names. FALSE, named list character vectors returned (names correspond signatures). ... Used absorb deprecated arguments functions. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getMolecules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain molecule names — getGenes","text":"character vector named list character vectors.","code":""},{"path":"/reference/getMolecules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain molecule names — getGenes","text":"functions retrieve molecule names provided object. getMolecules(): molecules assay specified assay_name. getGenes():  molecules assay @modality = 'gene' (assay_name = 'gene'). getMetabolites(): molecules assay @modality = 'metabolite' (assay_name = 'metabolite'). getProteins(): molecules assay @modality = 'protein' (assay_name = 'protein'). 'signature' NULL, returns molecules respective assay object.","code":""},{"path":"/reference/getMolecules.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Obtain molecule names — getGenes","text":"Molecule names picked raw count matrix assay.","code":""},{"path":[]},{"path":"/reference/getMolecules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain molecule names — getGenes","text":"","code":"library(SPATA2) object <- loadExampleObject(\"UKF313T\")  getAssayNames(object)  ## no subsetting by signatures # opt 1 genes <- getMolecules(object)  str(genes)  # opt 2 genes <- getMolecules(object, assay_name = \"gene\")  str(genes)  # opt 3 genes <- getGenes(object)  # opt 4 - fails cause no 'protein' assay  proteins <- getProteins(object)  ## using signatures argument # character vector of molecules of specific signatures (simplify defaults to TRUE) genes_hyp <- getGenes(object, signatures = \"HM_HYPOXIA\")  genes_hyp  # list of gene sets tcr_gs <- c(\"RCTM_TCR_SIGNALING\", \"RCTM_DOWNSTREAM_SIGNALING\")  # simplify = TRUE (default) merges the output to a character vector of unique names tcr_genes_vec <- getGenes(object, signatures = tcr_gs, simplify = TRUE)  str(tcr_genes_vec)  # simplify = FALSE returns a list tcr_genes_lst <- getGenes(object, signatures = tcr_gs, simplify = FALSE)  str(tcr_genes_lst)  ## DEPRECATED: of_gene_sets tcr_genes <- getGenes(object, of_gene_sets = tcr_gs, simplify = FALSE)"},{"path":"/reference/getPixelDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain pixel data.frame — getPixelDf","title":"Obtain pixel data.frame — getPixelDf","text":"Extracts data.frame row corresponds pixel current image x- y-coordinates.","code":""},{"path":"/reference/getPixelDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain pixel data.frame — getPixelDf","text":"","code":"getPixelDf(object, ...)  # S4 method for class 'SPATA2' getPixelDf(   object,   img_name = activeImage(object),   colors = FALSE,   hex_code = FALSE,   content = FALSE,   transform = TRUE,   xrange = NULL,   yrange = NULL,   scale_fct = 1 )  # S4 method for class 'SpatialData' getPixelDf(   object,   img_name = activeImage(object),   colors = FALSE,   hex_code = FALSE,   content = FALSE,   xrange = NULL,   yrange = NULL,   transform = TRUE,   scale_fct = 1,   ... )  # S4 method for class 'HistoImage' getPixelDf(   object,   colors = FALSE,   hex_code = FALSE,   content = FALSE,   xrange = NULL,   yrange = NULL,   transform = TRUE,   scale_fct = 1,   ... )  # S4 method for class 'Image' getPixelDf(   object,   colors = FALSE,   hex_code = FALSE,   use_greyscale = FALSE,   frgmt_threshold = c(5e-04, 0.01),   eps = 1,   minPts = 3,   ... )"},{"path":"/reference/getPixelDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain pixel data.frame — getPixelDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). colors Logical value. TRUE, adds colors image variables named col1-col.n n number colors. transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. eps Distance measure. Given eps dbscan::dbscan(). Determines size (radius) epsilon neighborhood. minPts Numeric value. Given dbscan::dbscan(). Determines number minimum points required eps neighborhood core points (including point ) tissue Logical value. TRUE, adds variable called pxl_group indicates whether pixel placed contiguous tissue section, artefact tissue fragments background.","code":""},{"path":"/reference/getPixelDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain pixel data.frame — getPixelDf","text":"Data.frame.","code":""},{"path":"/reference/getPixelScaleFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain scale factor for pixel to SI conversion — getPixelScaleFactor","title":"Obtain scale factor for pixel to SI conversion — getPixelScaleFactor","text":"Extracts side length pixel sides depending resolution chosen image.","code":""},{"path":"/reference/getPixelScaleFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain scale factor for pixel to SI conversion — getPixelScaleFactor","text":"","code":"getPixelScaleFactor(object, ...)  # S4 method for class 'SPATA2' getPixelScaleFactor(   object,   unit,   img_name = activeImage(object),   switch = FALSE,   add_attr = TRUE,   verbose = NULL,   ... )  # S4 method for class 'SpatialData' getPixelScaleFactor(   object,   unit,   img_name = activeImage(object),   switch = FALSE,   add_attr = TRUE,   verbose = NULL,   ... )  # S4 method for class 'HistoImage' getPixelScaleFactor(   object,   unit,   switch = FALSE,   add_attr = TRUE,   verbose = TRUE,   ... )"},{"path":"/reference/getPixelScaleFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain scale factor for pixel to SI conversion — getPixelScaleFactor","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. unit Character value. SI-unit interest. Determines reference unit pixel size. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). switch Logical value. TRUE, unit output switched. See details . verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/getPixelScaleFactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain scale factor for pixel to SI conversion — getPixelScaleFactor","text":"single numeric value unit defined attribute unit.","code":""},{"path":"/reference/getPixelScaleFactor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain scale factor for pixel to SI conversion — getPixelScaleFactor","text":"switch FALSE, default, output interpreted unit/pixel. E.g. unit = 'um' output 15 'um/px' means current resolution image height width one pixel corresponds 15 um height width original tissue. switch TRUE, output interpreted pixel/unit.  E.g. output value 0.07 'px/um' means current image resolution one micrometer corresponds 0.07 pixel image.","code":""},{"path":[]},{"path":"/reference/getPlatform.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain platform name — getPlatform","title":"Obtain platform name — getPlatform","text":"Generic function retrieve platform information object - name spatial method.","code":""},{"path":"/reference/getPlatform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain platform name — getPlatform","text":"","code":"getPlatform(object, ...)  # S4 method for class 'SPATA2' getPlatform(object, ...)  # S4 method for class 'SpatialData' getPlatform(object, ...)"},{"path":"/reference/getPlatform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain platform name — getPlatform","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getPlatform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain platform name — getPlatform","text":"character string representing platform information.","code":""},{"path":"/reference/getPlatform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain platform name — getPlatform","text":"","code":"library(SPATA2) library(SPATAData)  # VisiumSmall object <- loadExampleData(\"UKF313T\") getPlatform(object)  # VisiumLarge object <- downloadSpataObject(\"HumanKidneyVL\") getPlatform(object)"},{"path":"/reference/getPrResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain pattern recognition results — getPrResults","title":"Obtain pattern recognition results — getPrResults","text":"Obtain pattern recognition results","code":""},{"path":"/reference/getPrResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain pattern recognition results — getPrResults","text":"","code":"getPrResults(object, method_pr = \"hspa\", of_sample = NA)  getPatternNames(object, method_pr = \"hotspot\", of_sample = NA)"},{"path":"/reference/getPrResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain pattern recognition results — getPrResults","text":"object valid spata-object. of_sample argument currently inactive. might reactivated spata-objects can store one sample.","code":""},{"path":"/reference/getPrResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain pattern recognition results — getPrResults","text":"list containing information respective pattern recognition algorithm returns. getPrResults(): List containing information respective method returns getPrSuggestion(): List containing actual pattern suggestions. getPatternNames(): Character vector pattern names.","code":""},{"path":"/reference/getProcessedMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain processed data matrix — getProcessedMatrix","title":"Obtain processed data matrix — getProcessedMatrix","text":"Extracts processed data matrix.","code":""},{"path":"/reference/getProcessedMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain processed data matrix — getProcessedMatrix","text":"","code":"getProcessedMatrix(object, ...)  # S4 method for class 'SPATA2' getProcessedMatrix(object, mtr_name, assay_name = activeAssay(object), ...)  # S4 method for class 'MolecularAssay' getProcessedMatrix(object, mtr_name, ...)"},{"path":"/reference/getProcessedMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain processed data matrix — getProcessedMatrix","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. mtr_name Character value. name processed matrix interest. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getProcessedMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain processed data matrix — getProcessedMatrix","text":"numeric matrix rownames corresponding molecule names column names corresponding barcodes.","code":""},{"path":"/reference/getProcessedMatrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Obtain processed data matrix — getProcessedMatrix","text":"argument mtr_name must specified contrast getMatrix().","code":""},{"path":[]},{"path":"/reference/getProcessedMatrixNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain names of processed matrices — getProcessedMatrixNames","title":"Obtain names of processed matrices — getProcessedMatrixNames","text":"Extract names processed matrices.","code":""},{"path":"/reference/getProcessedMatrixNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain names of processed matrices — getProcessedMatrixNames","text":"","code":"getProcessedMatrixNames(object, ...)  # S4 method for class 'SPATA2' getProcessedMatrixNames(object, assay_name = activeAssay(object), ...)  # S4 method for class 'MolecularAssay' getProcessedMatrixNames(object, ...)"},{"path":"/reference/getProcessedMatrixNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain names of processed matrices — getProcessedMatrixNames","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getProcessedMatrixNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain names of processed matrices — getProcessedMatrixNames","text":"Character vector.","code":""},{"path":[]},{"path":"/reference/getProjectionDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain trajectory projection — getProjectionDf","title":"Obtain trajectory projection — getProjectionDf","text":"Extracts projection data.frame trajectory. variables specified","code":""},{"path":"/reference/getProjectionDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain trajectory projection — getProjectionDf","text":"","code":"getProjectionDf(object, id, width = NULL, img_name = activeImage(object), ...)"},{"path":"/reference/getProjectionDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain trajectory projection — getProjectionDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). ... Given joinWith()","code":""},{"path":"/reference/getProjectionDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain trajectory projection — getProjectionDf","text":"Data.frame contains projection length barcode-spot relation trajectory specified id.","code":""},{"path":"/reference/getResultsDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getResultsDf","title":"Deprecated — getResultsDf","text":"Deprecated favor getSgsResultsDf().","code":""},{"path":"/reference/getResultsDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getResultsDf","text":"","code":"getResultsDf(...)"},{"path":"/reference/getResultsVec.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getResultsVec","title":"Deprecated — getResultsVec","text":"Deprecated favor getSgsResultsVec().","code":""},{"path":"/reference/getResultsVec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getResultsVec","text":"","code":"getResultsVec(...)"},{"path":"/reference/getSampleAreaSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getSampleAreaSize","title":"Deprecated — getSampleAreaSize","text":"Deprecated favor getTissueArea().","code":""},{"path":"/reference/getSampleAreaSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getSampleAreaSize","text":"","code":"getSampleAreaSize(...)"},{"path":"/reference/getSampleName.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain name of SPATA2 object — getSampleName","title":"Obtain name of SPATA2 object — getSampleName","text":"Extracts name/ID SPATA2 object form single character value.","code":""},{"path":"/reference/getSampleName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain name of SPATA2 object — getSampleName","text":"","code":"getSampleName(object)"},{"path":"/reference/getSampleName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain name of SPATA2 object — getSampleName","text":"object valid spata-object.","code":""},{"path":"/reference/getSampleName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain name of SPATA2 object — getSampleName","text":"character value.","code":""},{"path":"/reference/getSasDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain spatial annotation screening data.frame — getSasDf","title":"Obtain spatial annotation screening data.frame — getSasDf","text":"Extracts data.frame inferred gradients numeric variables function distance spatial annotations.","code":""},{"path":"/reference/getSasDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain spatial annotation screening data.frame — getSasDf","text":"","code":"getSasDf(   object,   ids,   distance = \"dte\",   resolution = recSgsRes(object),   core = FALSE,   angle_span = c(0, 360),   n_bins_angle = 1,   variables = NULL,   unit = getDefaultUnit(object),   ro = c(0, 1),   format = \"wide\",   bcs_exclude = NULL,   outlier_rm = FALSE,   verbose = FALSE,   ... )"},{"path":"/reference/getSasDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain spatial annotation screening data.frame — getSasDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector. Specifies IDs spatial annotations interest. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). angle_span Numeric vector length 2. Confines area screened angle span relative center closest spatial annotation. variables Character vector. numeric variables included screening process. Makre sure correct matrix active respective assays. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. ro numeric range output gradients scaled. Defaults c(0,1). bcs_exclude Character value containing barcodes observations excluded analysis. outlier_rm Deprecated. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getSasDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain spatial annotation screening data.frame — getSasDf","text":"Data.frame.","code":""},{"path":"/reference/getScaleFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain scale factors — getScaleFactor","title":"Obtain scale factors — getScaleFactor","text":"Extracts scale factors. See details .","code":""},{"path":"/reference/getScaleFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain scale factors — getScaleFactor","text":"","code":"getScaleFactor(object, ...)  # S4 method for class 'SPATA2' getScaleFactor(object, fct_name, img_name = activeImage(object))  # S4 method for class 'SpatialData' getScaleFactor(object, fct_name, img_name = activeImage(object))  # S4 method for class 'HistoImage' getScaleFactor(object, fct_name)"},{"path":"/reference/getScaleFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain scale factors — getScaleFactor","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. fct_name Character value. Name scale factor. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/getScaleFactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain scale factors — getScaleFactor","text":"Single value whose properties depend fct_name.","code":""},{"path":"/reference/getScaleFactor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain scale factors — getScaleFactor","text":"function gives access slot @scale_factors registered HistoImage. list can flexibly expanded. following scale factor slots reserved: image: image scale factor used create variables x y variables x_orig y_orig coordinates data.frame outline data.frames spatial annotations tissue. scale factor depends deviation resolution original image - based coordinates data.frame created - image picked img_name. pixel: pixel scale factor used convert pixel values SI units. attribute called \"unit\" conforming format \"SI-unit/px Find information .","code":""},{"path":"/reference/getSegmentationNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getSegmentationNames","title":"Deprecated — getSegmentationNames","text":"Deprecated favor getSpatSegmVarNames().","code":""},{"path":"/reference/getSegmentationNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getSegmentationNames","text":"","code":"getSegmentationNames(...)"},{"path":"/reference/getSgsResultsDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain spatial gradient screening results — getSgsResultsDf","title":"Obtain spatial gradient screening results — getSgsResultsDf","text":"Extracts content slot @results screening S4 objects. detailed explanation slot contains see documentation SpatialGradientScreening.","code":""},{"path":"/reference/getSgsResultsDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain spatial gradient screening results — getSgsResultsDf","text":"","code":"getSgsResultsDf(object, ...)  # S4 method for class 'SpatialGradientScreening' getSgsResultsDf(   object,   eval = \"mae\",   pval = \"fdr\",   arrange_by = eval,   threshold_eval = 0.25,   threshold_pval = 0.05,   model_subset = NULL,   model_remove = NULL,   best_only = TRUE,   as_is = FALSE )"},{"path":"/reference/getSgsResultsDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain spatial gradient screening results — getSgsResultsDf","text":"object object method defined. eval Character value. evaluation variable use. Either 'mae' (Mean Absolute Error) 'rmse' (Root Mean Squared Error). pval Character value. p-value variable. Defaults 'fdr' (False Discovery Rate). threshold_pval, threshold_eval Numeric values. threshold results filtered. Default 1. Since p-values model fit evaluation scores range 0-1 (1 worst), default includes everything. best_only Logical value. TRUE, best gradient-model fit according chosen evaluation metric (eval) screened variable kept. as_is Logical value. TRUE, parameters ignored $significance $model_fits data.frames simply joined return without filtering.","code":""},{"path":"/reference/getSgsResultsDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain spatial gradient screening results — getSgsResultsDf","text":"data.frame results spatial gradient screening conducted. Column names : variables name variable row corresponds. models name model fits best inferred gradient. mae mean absolute error gradient-model fit. rmse root mean squared error gradient-model fit. p_value p-value regarding hypothesis whether gradient can obtained random circumstances. fdr adjusted p-value using false discovery rate. Data.frame.","code":""},{"path":"/reference/getSgsResultsDf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain spatial gradient screening results — getSgsResultsDf","text":"Without argument specification function getSgsResultsDf() returns complete data.frame. arguments can used filter results. Filtering works follows: Model-fits filtered according input model_subset model_remove. Model-fits filtered according threshold_ arguments. best_only set TRUE, model-fits filtered best model-fit (among remaining models 1.) every gene remains. E.g. gene GFAP fits model descending_linear score 0.2 descending_gradual MAE score 0.15 model-fit GFAP-descending_gradual remains output. output arranged evaluation score.","code":""},{"path":"/reference/getSgsResultsVec.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain spatial gradient screening results — getSgsResultsVec","title":"Obtain spatial gradient screening results — getSgsResultsVec","text":"Extracts results form character vectors.","code":""},{"path":"/reference/getSgsResultsVec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain spatial gradient screening results — getSgsResultsVec","text":"","code":"getSgsResultsVec(object, ...)  # S4 method for class 'SpatialGradientScreening' getSgsResultsVec(   object,   eval = \"mae\",   pval = \"fdr\",   arrange_by = eval,   threshold_eval = 0.25,   threshold_pval = 0.05,   model_subset = NULL,   model_remove = NULL,   name_output = FALSE )"},{"path":"/reference/getSgsResultsVec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain spatial gradient screening results — getSgsResultsVec","text":"object object method defined. name_output TRUE, output vector equipped names correspond model fit best gradient.","code":""},{"path":"/reference/getSgsResultsVec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain spatial gradient screening results — getSgsResultsVec","text":"Named character vector. Values variable/gene names. Names correspond model fitted best.","code":""},{"path":"/reference/getSgsResultsVec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain spatial gradient screening results — getSgsResultsVec","text":"Extraction works similar getSgsResultsDf(). Argument best_only, however, always set TRUE.","code":""},{"path":"/reference/getSignature.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain molecular signature — getGeneSet","title":"Obtain molecular signature — getGeneSet","text":"Extracts character vector molecule names making molecular signature.","code":""},{"path":"/reference/getSignature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain molecular signature — getGeneSet","text":"","code":"getGeneSet(object, gene_set, ...)  getMetaboliteSet(object, metabolite_set, ...)  getProteinSet(object, protein_set, ...)  getSignature(object, signature, assay_name = activeAssay(object))"},{"path":"/reference/getSignature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain molecular signature — getGeneSet","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. signature Character value. signature interest. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getSignature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain molecular signature — getGeneSet","text":"Character vector.","code":""},{"path":"/reference/getSignature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain molecular signature — getGeneSet","text":"functions retrieve molecule names single signatures. getSignature(): character vector molecule names signature specified. getGeneSet():  character vector gene names gene set specified. getMetaboliteSet(): character vector metabolite names metabolite set specified. getProteinSet(): character vector protein names protein set specified.","code":""},{"path":"/reference/getSignatureList.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain molecular signatures — getGeneSetList","title":"Obtain molecular signatures — getGeneSetList","text":"Retrieves list molecular signatures stored molecular assay. getSignatureList() allows extract signatures assays, getGeneSetList(), getMetaboliteSetList() getProteinSetList() quick wrappers. require assays specific names/molecular modalities.","code":""},{"path":"/reference/getSignatureList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain molecular signatures — getGeneSetList","text":"","code":"getGeneSetList(object, ..., class = NULL)  getMetaboliteSetList(object, ..., class = NULL)  getProteinSetList(object, ..., class = NULL)  getSignatureList(object, ..., class = NULL, assay_name = activeAssay(object))"},{"path":"/reference/getSignatureList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain molecular signatures — getGeneSetList","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional selection helpers tidyselect package match names according given pattern. class Character vector signature classes subset output. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getSignatureList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain molecular signatures — getGeneSetList","text":"named list character vectors.","code":""},{"path":"/reference/getSignatureList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain molecular signatures — getGeneSetList","text":"functions retrieve signatures provided object. getSignatureList(): list signatures assay specified assay_name. getGeneSetList():  list signatures assay @modality = 'gene' (assay_name = 'gene'). getMetaboliteSetList(): list signatures assay @modality = 'metabolite' (assay_name = 'metabolite'). getProteinSetLit(): list signatures assay @modality = 'protein' (assay_name = 'protein').","code":""},{"path":[]},{"path":"/reference/getSignatureList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain molecular signatures — getGeneSetList","text":"","code":"library(SPATA2)  object <- loadSpataObject(\"UKF269T\")  ## how the different functions work getAssayNames(object)  # opt 1 activeAssay(object) gene_sets <- getSignatureList(object)  head(gene_sets)  # opt 2 (equal to opt 1, cause active and only assay is 'gene') gene_sets <- getSignatureList(object, assay_name = \"gene\")  head(gene_sets)  # opt 3 gene_sets <- getGeneSetList(object)  head(gene_sets)  # opt 4 - fails cause no 'protein' assay protein_sets <- getProteinSetList(object)  ## using class argument  hm_gene_sets <- getGeneSetList(object, class = \"HM\")  head(hm_gene_sets) tail(hm_gene_sets)  two_kinds_of_gene_sets <- getGeneSetList(object, class = c(\"HM\", \"RCTM\"))  head(two_kinds_of_gene_sets) tail(two_kinds_of_gene_sets)  # subsetting with tidyselect grammar  tcr_gene_sets <- getGeneSetList(object, contains(\"TCR\"))  str(tcr_gene_sets)  tcr_gene_sets2 <- getGeneSetList(object, contains(\"TCR\") & !starts_with(\"RCTM\"))  str(tcr_gene_sets2)"},{"path":"/reference/getSignatureNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain molecular signature names — getGeneSets","title":"Obtain molecular signature names — getGeneSets","text":"Extracts character vector molecular signature names.","code":""},{"path":"/reference/getSignatureNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain molecular signature names — getGeneSets","text":"","code":"getGeneSets(object, ..., class = NULL)  getMetaboliteSets(object, ..., class = NULL)  getProteinSets(object, ..., class = NULL)  getSignatureNames(object, ..., class = NULL, assay_name = activeAssay(object))"},{"path":"/reference/getSignatureNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain molecular signature names — getGeneSets","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional selection helpers tidyselect package match names according given pattern. class Character vector signature classes subset output. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getSignatureNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain molecular signature names — getGeneSets","text":"Character vector.","code":""},{"path":"/reference/getSignatureNames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain molecular signature names — getGeneSets","text":"functions retrieve signature names provided object. getSignatureNames(): signature names assay specified assay_name. getGeneSets():  signature names assay @modality = 'gene' (assay_name = 'gene'). getMetaboliteSets(): signature names assay @modality = 'metabolite' (assay_name = 'metabolite'). getProteinSets(): signature names assay @modality = 'protein' (assay_name = 'protein'). 'signature' NULL, returns molecules respective assay object.","code":""},{"path":[]},{"path":"/reference/getSignatureNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain molecular signature names — getGeneSets","text":"","code":"library(SPATA2)  object <- loadExampleObject(\"UKF269T\", process = TRUE)  # only one assay exists... getAssayNames(object)  # ... which is the default assay activeAssay(object)  ## extraction # opt 1 all_signatures <- getSignatureNames(object, assay_name = \"gene\")  str(all_signatures)  # whether you specify assay_name or not does not make a difference since # the object only contains one assay hallmark_signatures <- getSignatureNames(object, class = \"HM\")  str(hallmark_signatures)  # opt 2 hallmark_signatures <- getGeneSets(object, class = \"HM\")  str(hallmark_signatures)  # opt 3 - failes cause no 'protein' assay protein_signatures <- getProteinSets(object, assay_name = \"protein\")  ## usage as character vector for argument input  set.seed(123) color_by <- sample(all_signatures, size = 9)  plotSurfaceComparison(object, color_by = color_by, outline = T, pt_clrsp = \"Reds 3\")  coords_df <- getCoordsDf(object)  print(coords_df)  coords_df <- joinWithVariables(object, spata_df = coords_df, variables = hallmark_signatures)  print(coords_df)"},{"path":"/reference/getSignatureOverview.html","id":null,"dir":"Reference","previous_headings":"","what":"Overview about the current signature collection — getGeneSetOverview","title":"Overview about the current signature collection — getGeneSetOverview","text":"Counts number signatures class - subsetting desired.","code":""},{"path":"/reference/getSignatureOverview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overview about the current signature collection — getGeneSetOverview","text":"","code":"getGeneSetOverview(object, ...)  getMetaboliteOverview(object, ...)  getProteinSetOverview(object, ...)  getSignatureOverview(object, ..., assay_name = activeAssay(object))"},{"path":"/reference/getSignatureOverview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overview about the current signature collection — getGeneSetOverview","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional selection helpers tidyselect package match names according given pattern. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getSignatureOverview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overview about the current signature collection — getGeneSetOverview","text":"data.frame two variables Class Available Signatures indicating number different signatures classes contain.","code":""},{"path":"/reference/getSignatureTypeList.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a list of signatures — getSignatureTypeList","title":"Obtain a list of signatures — getSignatureTypeList","text":"Retrieves list signatures sorted molecular type present given object.","code":""},{"path":"/reference/getSignatureTypeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a list of signatures — getSignatureTypeList","text":"","code":"getSignatureTypeList(object, signatures = NULL)"},{"path":"/reference/getSignatureTypeList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a list of signatures — getSignatureTypeList","text":"object object class SPATA2 , case S4 generics, objects classes method defined. signatures character vector specifying subset signatures include output (default: NULL).","code":""},{"path":"/reference/getSignatureTypeList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a list of signatures — getSignatureTypeList","text":"list containing names signatures categorized assay type.","code":""},{"path":"/reference/getSignatureTypeList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain a list of signatures — getSignatureTypeList","text":"function categorizes signatures different types based provided object. 'signatures' argument provided character vector, function returns specified signatures categorized assay type. Otherwise, returns signatures categorized type.","code":""},{"path":[]},{"path":"/reference/getSmrdResultsDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getSmrdResultsDf","title":"Deprecated — getSmrdResultsDf","text":"Deprecated favor getSgsResults().","code":""},{"path":"/reference/getSmrdResultsDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getSmrdResultsDf","text":"","code":"getSmrdResultsDf(ias, ...)"},{"path":"/reference/getSpCorCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain cluster results based on spatial correlation analysis — getSpCorCluster","title":"Obtain cluster results based on spatial correlation analysis — getSpCorCluster","text":"Obtain cluster results based spatial correlation analysis","code":""},{"path":"/reference/getSpCorCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain cluster results based on spatial correlation analysis — getSpCorCluster","text":"","code":"getSpCorCluster(object, method_hclust = \"complete\", of_sample = NA)  getSpCorClusterNames(object, of_sample = NA)"},{"path":"/reference/getSpCorCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain cluster results based on spatial correlation analysis — getSpCorCluster","text":"object valid spata-object. method_hclust Character value. Denotes method used generate clustering results want extract. of_sample argument currently inactive. might reactivated spata-objects can store one sample.","code":""},{"path":"/reference/getSpCorCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain cluster results based on spatial correlation analysis — getSpCorCluster","text":"list containing information clustering results.","code":""},{"path":"/reference/getSpCorResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain spatial correlation results — getSpCorResults","title":"Obtain spatial correlation results — getSpCorResults","text":"Obtain spatial correlation results","code":""},{"path":"/reference/getSpCorResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain spatial correlation results — getSpCorResults","text":"","code":"getSpCorResults(object, of_sample = NA)"},{"path":"/reference/getSpCorResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain spatial correlation results — getSpCorResults","text":"object valid spata-object. of_sample argument currently inactive. might reactivated spata-objects can store one sample.","code":""},{"path":"/reference/getSpCorResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain spatial correlation results — getSpCorResults","text":"list containing information clustering results.","code":""},{"path":"/reference/getSpatAnnArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain area of spatial annotation — getSpatAnnArea","title":"Obtain area of spatial annotation — getSpatAnnArea","text":"Computes area spatial annotations.","code":""},{"path":"/reference/getSpatAnnArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain area of spatial annotation — getSpatAnnArea","text":"","code":"getSpatAnnArea(object, ...)  # S4 method for class 'SPATA2' getSpatAnnArea(   object,   ids = NULL,   unit = \"mm2\",   tags = NULL,   test = \"any\",   as_numeric = TRUE,   verbose = NULL,   ... )  # S4 method for class 'SpatialData' getSpatAnnArea(   object,   ids = NULL,   tags = NULL,   test = \"any\",   unit = \"mm2\",   as_numeric = TRUE,   verbose = NULL,   ... )"},{"path":"/reference/getSpatAnnArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain area of spatial annotation — getSpatAnnArea","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. test Character value. One c(''. '', 'identical', 'not_identical', 'none'). Specifies input tags used select spatial annotations. See section Selection spatial annotations information. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/getSpatAnnArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain area of spatial annotation — getSpatAnnArea","text":"Contains area spatial annotations unit specified unit. unit attached output attribute named unit. E.g. unit = *mm2* output value unit mm^2.","code":""},{"path":"/reference/getSpatAnnArea.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Obtain area of spatial annotation — getSpatAnnArea","text":"area computed solely based outline annotation even annotation transgresses tissue outline! want area annotation tissue section adjust annotation mergeWithTissueOutline(). See examples.","code":""},{"path":[]},{"path":"/reference/getSpatAnnArea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain area of spatial annotation — getSpatAnnArea","text":"","code":"library(SPATA2)  object <- loadExampleObject(\"UKF313T\")  ids <- c(\"necrotic_edge2\", \"necrotic_edge2_transgr\")  plotSpatialAnnotations(object, ids = ids)  getSpatAnnArea(object, ids = ids)"},{"path":"/reference/getSpatAnnBarcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain barcodes by spatial annotations — getSpatAnnBarcodes","title":"Obtain barcodes by spatial annotations — getSpatAnnBarcodes","text":"Extracts barcodes covered extent annotated structures interest.","code":""},{"path":"/reference/getSpatAnnBarcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain barcodes by spatial annotations — getSpatAnnBarcodes","text":"","code":"getSpatAnnBarcodes(   object,   ids = NULL,   tags = NULL,   test = \"any\",   class = NULL,   coords_df = getCoordsDf(object),   simplify = TRUE )"},{"path":"/reference/getSpatAnnBarcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain barcodes by spatial annotations — getSpatAnnBarcodes","text":"object object class SPATA2 , case S4 generics, objects classes method defined. tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. test Character value. One c(''. '', 'identical', 'not_identical', 'none'). Specifies input tags used select spatial annotations. See section Selection spatial annotations information. simplify Logical. set TRUE output list simplified vector possible. set FALSE list returned.","code":""},{"path":"/reference/getSpatAnnBarcodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain barcodes by spatial annotations — getSpatAnnBarcodes","text":"Character vector, simplify = TRUE. Else named list character vectors.","code":""},{"path":"/reference/getSpatAnnBarcodes.html","id":"selection-of-spatial-annotations","dir":"Reference","previous_headings":"","what":"Selection of spatial annotations","title":"Obtain barcodes by spatial annotations — getSpatAnnBarcodes","text":"Selection spatial annotations via arguments ids, class, tags test works three steps: First, ids character prefilters annotations ID specified ones submitted next steps. NULL, annotations submitted next steps. Secondd, class character filters annotations remaining first step class. NULL, step skipped. Third, tags character used combination test select spatial annotations remain second step based meta data tagged . multiple options: Argument test set '' 1: included, image annotation must tagged least one input tags. Argument test set '' 2: included, image annotation must tagged input tags. Can contain tags specified. Argument test set 'identical' 3: included, image annotation must tagged input tags. Can tagged anything else. Argument test set not_identical 4: included, image annotation must tagged combination input tags. Argument test set 'none' 5: included, image annotation must contain input tags. tags NULL, step skipped. Therefore, ids, class tags NULL, default, annotations selected subsetting steps skipped. Eventually, remaining spatial annotations submitted whatever respective function .","code":""},{"path":"/reference/getSpatAnnCenter.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain center of a spatial annotation — getSpatAnnCenter","title":"Obtain center of a spatial annotation — getSpatAnnCenter","text":"getSpatAnnCenter() computes x- y- coordinates center outer border, returns numeric vector length two. getSpatAnnCenters() computes center outer every inner border returns list numeric vectors length two.","code":""},{"path":"/reference/getSpatAnnCenter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain center of a spatial annotation — getSpatAnnCenter","text":"","code":"getSpatAnnCenter(object, ...)  # S4 method for class 'SPATA2' getSpatAnnCenter(object, id)  # S4 method for class 'SpatialData' getSpatAnnCenter(object, id)  # S4 method for class 'SpatialAnnotation' getSpatAnnCenter(object)  getSpatAnnCenters(object, ...)  # S4 method for class 'SPATA2' getSpatAnnCenters(object, id, outer = TRUE, inner = TRUE)  # S4 method for class 'SpatialData' getSpatAnnCenters(object, id, outer = TRUE, inner = TRUE)  # S4 method for class 'SpatialAnnotation' getSpatAnnCenters(object, outer = TRUE, inner = TRUE)"},{"path":"/reference/getSpatAnnCenter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain center of a spatial annotation — getSpatAnnCenter","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation. outer Logical value. applies image annotation contains secondary image annotation within area. FALSE, outer border image annotation included output. inner Logical value. applies image annotation contains secondary image annotation within area. FALSE, inner borders image annotation included output.","code":""},{"path":"/reference/getSpatAnnCenter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain center of a spatial annotation — getSpatAnnCenter","text":"Numeric vector length two list . Values named x y.","code":""},{"path":"/reference/getSpatAnnCenter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain center of a spatial annotation — getSpatAnnCenter","text":"","code":"library(SPATA2)  object <- loadExampleObject(\"LMU_MCI\")  plotSpatialAnnotations(object, unit = \"px\")  getSpatAnnCenter(object, id = \"inj1\")"},{"path":"/reference/getSpatAnnCenterBcsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain center data point — getSpatAnnCenterBcsp","title":"Obtain center data point — getSpatAnnCenterBcsp","text":"Extracts barcode spot (data point) lies closest center spatial annotation.","code":""},{"path":"/reference/getSpatAnnCenterBcsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain center data point — getSpatAnnCenterBcsp","text":"","code":"getSpatAnnCenterBcsp(object, id)"},{"path":"/reference/getSpatAnnCenterBcsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain center data point — getSpatAnnCenterBcsp","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation.","code":""},{"path":"/reference/getSpatAnnCenterBcsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain center data point — getSpatAnnCenterBcsp","text":"Data.frame returned getCoordsDf() one row.","code":""},{"path":"/reference/getSpatAnnIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain IDs of spatial annotations — getSpatAnnIds","title":"Obtain IDs of spatial annotations — getSpatAnnIds","text":"Extracts spatial annotation IDs character vector.","code":""},{"path":"/reference/getSpatAnnIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain IDs of spatial annotations — getSpatAnnIds","text":"","code":"getSpatAnnIds(object, ...)  # S4 method for class 'ANY' getSpatAnnIds(object, ids = NULL, tags = NULL, test = \"any\", class = NULL)  # S4 method for class 'SpatialData' getSpatAnnIds(   object,   ids = NULL,   tags = NULL,   test = \"any\",   class = NULL,   error = FALSE )"},{"path":"/reference/getSpatAnnIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain IDs of spatial annotations — getSpatAnnIds","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. test Character value. One c(''. '', 'identical', 'not_identical', 'none'). Specifies input tags used select spatial annotations. See section Selection spatial annotations information. class Character vector NULL. character, defines subtypes spatial annotations consider. Must combination c('Group', 'Image' 'Numeric'). error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/getSpatAnnIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain IDs of spatial annotations — getSpatAnnIds","text":"Character vector. spatial annotations returned character vector length 0. spatial annotations stored yet, functions remains silent. due selection options, function throws warning.","code":""},{"path":"/reference/getSpatAnnIds.html","id":"selection-of-spatial-annotations","dir":"Reference","previous_headings":"","what":"Selection of spatial annotations","title":"Obtain IDs of spatial annotations — getSpatAnnIds","text":"Selection spatial annotations via arguments ids, class, tags test works three steps: First, ids character prefilters annotations ID specified ones submitted next steps. NULL, annotations submitted next steps. Secondd, class character filters annotations remaining first step class. NULL, step skipped. Third, tags character used combination test select spatial annotations remain second step based meta data tagged . multiple options: Argument test set '' 1: included, image annotation must tagged least one input tags. Argument test set '' 2: included, image annotation must tagged input tags. Can contain tags specified. Argument test set 'identical' 3: included, image annotation must tagged input tags. Can tagged anything else. Argument test set not_identical 4: included, image annotation must tagged combination input tags. Argument test set 'none' 5: included, image annotation must contain input tags. tags NULL, step skipped. Therefore, ids, class tags NULL, default, annotations selected subsetting steps skipped. Eventually, remaining spatial annotations submitted whatever respective function .","code":""},{"path":[]},{"path":"/reference/getSpatAnnOutlineDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the outline of a spatial annotation — getSpatAnnOutlineDf","title":"Obtain the outline of a spatial annotation — getSpatAnnOutlineDf","text":"Extracts coordinates vertices polygon represents borders spatial annotation.","code":""},{"path":"/reference/getSpatAnnOutlineDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the outline of a spatial annotation — getSpatAnnOutlineDf","text":"","code":"getSpatAnnOutlineDf(object, ...)  # S4 method for class 'SPATA2' getSpatAnnOutlineDf(   object,   ids = NULL,   class = NULL,   tags = NULL,   test = \"any\",   outer = TRUE,   inner = TRUE,   incl_edge = FALSE,   add_tags = FALSE,   sep = \" & \",   last = \" & \" )  # S4 method for class 'SpatialData' getSpatAnnOutlineDf(   object,   ids = NULL,   class = NULL,   tags = NULL,   test = \"any\",   outer = TRUE,   inner = TRUE,   incl_edge = FALSE,   add_tags = FALSE,   sep = \" & \",   last = \" & \" )  # S4 method for class 'SpatialAnnotation' getSpatAnnOutlineDf(   object,   add_tags = TRUE,   sep = \" & \",   last = \" & \",   expand_outline = NULL,   ... )"},{"path":"/reference/getSpatAnnOutlineDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the outline of a spatial annotation — getSpatAnnOutlineDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. test Character value. One c(''. '', 'identical', 'not_identical', 'none'). Specifies input tags used select spatial annotations. See section Selection spatial annotations information. outer Logical value. applies image annotation contains secondary image annotation within area. FALSE, outer border image annotation included output. inner Logical value. applies image annotation contains secondary image annotation within area. FALSE, inner borders image annotation included output. incl_edge Logical value. TRUE, function includes tissue edge (see identifyTissueOutline()) visualization removes parts outline transgress tissues edge. expand_outline Distance measure outline area expanded.","code":""},{"path":"/reference/getSpatAnnOutlineDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the outline of a spatial annotation — getSpatAnnOutlineDf","text":"data.frame contains variables id, border, numeric variables x, y tags.","code":""},{"path":"/reference/getSpatAnnOutlineDf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain the outline of a spatial annotation — getSpatAnnOutlineDf","text":"variables x y give position vertices polygon drawn used area via createGroupAnnotations(), createImageAnnotations() createNumericAnnotations(). vertices correspond border annotation.","code":""},{"path":"/reference/getSpatAnnOutlineDf.html","id":"selection-of-spatial-annotations","dir":"Reference","previous_headings":"","what":"Selection of spatial annotations","title":"Obtain the outline of a spatial annotation — getSpatAnnOutlineDf","text":"Selection spatial annotations via arguments ids, class, tags test works three steps: First, ids character prefilters annotations ID specified ones submitted next steps. NULL, annotations submitted next steps. Secondd, class character filters annotations remaining first step class. NULL, step skipped. Third, tags character used combination test select spatial annotations remain second step based meta data tagged . multiple options: Argument test set '' 1: included, image annotation must tagged least one input tags. Argument test set '' 2: included, image annotation must tagged input tags. Can contain tags specified. Argument test set 'identical' 3: included, image annotation must tagged input tags. Can tagged anything else. Argument test set not_identical 4: included, image annotation must tagged combination input tags. Argument test set 'none' 5: included, image annotation must contain input tags. tags NULL, step skipped. Therefore, ids, class tags NULL, default, annotations selected subsetting steps skipped. Eventually, remaining spatial annotations submitted whatever respective function .","code":""},{"path":"/reference/getSpatAnnRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain spatial annotations range — getSpatAnnRange","title":"Obtain spatial annotations range — getSpatAnnRange","text":"Extracts minimum maximum x- y-coordinates spatial annotation border.","code":""},{"path":"/reference/getSpatAnnRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain spatial annotations range — getSpatAnnRange","text":"","code":"getSpatAnnRange(object, ...)  # S4 method for class 'SPATA2' getSpatAnnRange(object, id, expand = 0, scale_fct = 1, ...)  # S4 method for class 'SpatialData' getSpatAnnRange(object, id, scale_fct = 1)"},{"path":"/reference/getSpatAnnRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain spatial annotations range — getSpatAnnRange","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information.","code":""},{"path":"/reference/getSpatAnnRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain spatial annotations range — getSpatAnnRange","text":"List length two. Named x y. slot contains vector length two minima maxima pixel.","code":""},{"path":"/reference/getSpatAnnSf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the outline of a spatial anontation — getSpatAnnSf","title":"Obtain the outline of a spatial anontation — getSpatAnnSf","text":"Exracts object created sf::st_polygon() corresponds spatial annotation.","code":""},{"path":"/reference/getSpatAnnSf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the outline of a spatial anontation — getSpatAnnSf","text":"","code":"getSpatAnnSf(object, id, img_name = activeImage(object))"},{"path":"/reference/getSpatAnnSf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the outline of a spatial anontation — getSpatAnnSf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation.","code":""},{"path":"/reference/getSpatAnnSf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the outline of a spatial anontation — getSpatAnnSf","text":"object class POLYGON sf package.","code":""},{"path":"/reference/getSpatAnnTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain spatial annotation tags — getSpatAnnTags","title":"Obtain spatial annotation tags — getSpatAnnTags","text":"Extracts unique tags spatial annotations tagged.","code":""},{"path":"/reference/getSpatAnnTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain spatial annotation tags — getSpatAnnTags","text":"","code":"getSpatAnnTags(object, ...)  # S4 method for class 'SPATA2' getSpatAnnTags(object, simplify = TRUE)  # S4 method for class 'SpatialData' getSpatAnnTags(object, simplify = TRUE)"},{"path":"/reference/getSpatAnnTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain spatial annotation tags — getSpatAnnTags","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. simplify Logical value. TRUE, default, character vector unique tags returned. FALSE, list character vectors returned named spatial annotation tags belong.","code":""},{"path":"/reference/getSpatAnnTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain spatial annotation tags — getSpatAnnTags","text":"Character vector named list .","code":""},{"path":"/reference/getSpatAnnTags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain spatial annotation tags — getSpatAnnTags","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- loadExampleObject(\"LMU_MCI\")  getSpatAnnTags(object, simplify = FALSE) getSpatAnnTags(object)"},{"path":"/reference/getSpatSegmVarNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain segmentation variable names — getSpatSegmVarNames","title":"Obtain segmentation variable names — getSpatSegmVarNames","text":"Extracts names variables created via createSpatialSegmentation().","code":""},{"path":"/reference/getSpatSegmVarNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain segmentation variable names — getSpatSegmVarNames","text":"","code":"getSpatSegmVarNames(object, fdb_fn = \"message\", ...)"},{"path":"/reference/getSpatSegmVarNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain segmentation variable names — getSpatSegmVarNames","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getSpatSegmVarNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain segmentation variable names — getSpatSegmVarNames","text":"Character vector.","code":""},{"path":"/reference/getSpataDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a data.frame of observations — getSpataDf","title":"Obtain a data.frame of observations — getSpataDf","text":"function basic start want extract data individual analysis. (order extract coordinates well use getCoordsDf().)","code":""},{"path":"/reference/getSpataDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a data.frame of observations — getSpataDf","text":"","code":"getSpataDf(object, ...)"},{"path":"/reference/getSpataDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a data.frame of observations — getSpataDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getSpataDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a data.frame of observations — getSpataDf","text":"tidy data.frame containing character variables barcodes sample.","code":""},{"path":[]},{"path":"/reference/getSpataDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain SPATA2 object directory — getSpataDir","title":"Obtain SPATA2 object directory — getSpataDir","text":"Extracts file directory SPATA2 object saved default saveSpataObject().","code":""},{"path":"/reference/getSpataDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain SPATA2 object directory — getSpataDir","text":"","code":"getSpataDir(object)"},{"path":"/reference/getSpataDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain SPATA2 object directory — getSpataDir","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getSpataDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain SPATA2 object directory — getSpataDir","text":"Character value error directory set.","code":""},{"path":[]},{"path":"/reference/getSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a SpatialAnnotation object — getSpatialAnnotation","title":"Obtain a SpatialAnnotation object — getSpatialAnnotation","text":"Extracts object class SpatialAnnotation ID.","code":""},{"path":"/reference/getSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a SpatialAnnotation object — getSpatialAnnotation","text":"","code":"getSpatialAnnotation(object, ...)  # S4 method for class 'SPATA2' getSpatialAnnotation(   object,   id = idSA(object),   add_image = containsHistoImages(object),   expand = 0,   square = FALSE,   ... )  # S4 method for class 'SpatialData' getSpatialAnnotation(   object,   id = idSA(object),   add_image = TRUE,   expand = 0,   square = FALSE,   ... )"},{"path":"/reference/getSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a SpatialAnnotation object — getSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation. add_image Logical. TRUE, area histology image occupied annotated structure added SpatialAnnotation object slot @image. Dimensions image can adjusted square expand. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information. square Logical value. image annotations come variable shapes different horizontal vertical diameters. Therefore, height width image section usually equal. square = TRUE, cropped section image contains annotated structure forced square: bigger diameter taken default. E.g. horizontal diameter image annotation 1mm vertical diameter 1.5mm, output image height width 1.5mm. , terms coordinates, x-range y-range 1.5mm. Processing image output depending argument expand happens afterwards.","code":""},{"path":"/reference/getSpatialAnnotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a SpatialAnnotation object — getSpatialAnnotation","text":"object class SpatialAnnotation.","code":""},{"path":"/reference/getSpatialAnnotation.html","id":"expansion-of-cropped-image-sections","dir":"Reference","previous_headings":"","what":"Expansion of cropped image sections","title":"Obtain a SpatialAnnotation object — getSpatialAnnotation","text":"argument expand versatile way, specify cropped image section extracted. want cropped image , specify expand = 0. Else, multiple options. general, expand takes three kinds values, namely percentages, distances distance exclamations. Percentage: string suffixed %. E.g. expand = '50%' adds 50% distance center border image annotation image frame. Distance measures: pixel European units length. E.g. expand =  list(x = '1mm') expands x-axis sides 1mm. expand = list(x = c('0.5mm', 1.5mm') expands x-axis left side 0.5mm right side 1.5mm. Exclam distance measures: Distance measure exclamation mark suffix. E.g. expand = '1mm!' centers image forces axis length 1 millimeter. (Example 5) Depending values specified different parts image can expanded. Single values, like expand = 50, recycled: Every end image axis expanded 50 pixel. (Example 2) Vectors length two, like expand = c('1mm', '2mm'), recycled: beginning axis expanded 1 millimeter. end axis expanded 2mm. (Example 3) Named lists can precise. expand = list(x = c('1mm', '0.5mm'), y = c('0.25mm', '1mm')). Applies vectors expand corresponding axis. (Example 4) Using exclam input side axis must specified axis fixed whole. E.g expand = list(x = '1mm!', y = '2mm!') results output expand = list(x = c('1mm!', '1mm!'), y = c('2mm!', '2mm!').","code":""},{"path":"/reference/getSpatialAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain list of SpatialAnnotation objects — getSpatialAnnotations","title":"Obtain list of SpatialAnnotation objects — getSpatialAnnotations","text":"Extracts list objects class SpatialAnnotation.","code":""},{"path":"/reference/getSpatialAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain list of SpatialAnnotation objects — getSpatialAnnotations","text":"","code":"getSpatialAnnotations(object, ...)  # S4 method for class 'SPATA2' getSpatialAnnotations(   object,   ids = NULL,   class = NULL,   tags = NULL,   test = \"any\",   add_image = containsImage(object),   expand = 0,   square = FALSE,   error = FALSE,   ... )  # S4 method for class 'SpatialData' getSpatialAnnotations(   object,   ids = NULL,   class = NULL,   tags = NULL,   test = \"any\",   add_image = containsImage(object),   expand = 0,   square = FALSE,   error = FALSE,   ... )"},{"path":"/reference/getSpatialAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain list of SpatialAnnotation objects — getSpatialAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. class Character vector NULL. character, defines subtypes spatial annotations consider. Must combination c('Group', 'Image' 'Numeric'). tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. test Character value. One c(''. '', 'identical', 'not_identical', 'none'). Specifies input tags used select spatial annotations. See section Selection spatial annotations information. add_image Logical. TRUE, area histology image occupied annotated structure added SpatialAnnotation object slot @image. Dimensions image can adjusted square expand. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information. square Logical value. image annotations come variable shapes different horizontal vertical diameters. Therefore, height width image section usually equal. square = TRUE, cropped section image contains annotated structure forced square: bigger diameter taken default. E.g. horizontal diameter image annotation 1mm vertical diameter 1.5mm, output image height width 1.5mm. , terms coordinates, x-range y-range 1.5mm. Processing image output depending argument expand happens afterwards. error Logical. TRUE input invalid function throws error. strictly Logical. TRUE, barcodes spots strictly interior area spatial annotation added output. FALSE, barcodes spots relative interior area vertices border added, .","code":""},{"path":"/reference/getSpatialAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain list of SpatialAnnotation objects — getSpatialAnnotations","text":"list objects class SpatialAnnotation.","code":""},{"path":"/reference/getSpatialAnnotations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Obtain list of SpatialAnnotation objects — getSpatialAnnotations","text":"test extracted image section looks like depending input argument square expand use plotSpatialAnnotations(..., encircle = FALSE).","code":""},{"path":"/reference/getSpatialAnnotations.html","id":"expansion-of-cropped-image-sections","dir":"Reference","previous_headings":"","what":"Expansion of cropped image sections","title":"Obtain list of SpatialAnnotation objects — getSpatialAnnotations","text":"argument expand versatile way, specify cropped image section extracted. want cropped image , specify expand = 0. Else, multiple options. general, expand takes three kinds values, namely percentages, distances distance exclamations. Percentage: string suffixed %. E.g. expand = '50%' adds 50% distance center border image annotation image frame. Distance measures: pixel European units length. E.g. expand =  list(x = '1mm') expands x-axis sides 1mm. expand = list(x = c('0.5mm', 1.5mm') expands x-axis left side 0.5mm right side 1.5mm. Exclam distance measures: Distance measure exclamation mark suffix. E.g. expand = '1mm!' centers image forces axis length 1 millimeter. (Example 5) Depending values specified different parts image can expanded. Single values, like expand = 50, recycled: Every end image axis expanded 50 pixel. (Example 2) Vectors length two, like expand = c('1mm', '2mm'), recycled: beginning axis expanded 1 millimeter. end axis expanded 2mm. (Example 3) Named lists can precise. expand = list(x = c('1mm', '0.5mm'), y = c('0.25mm', '1mm')). Applies vectors expand corresponding axis. (Example 4) Using exclam input side axis must specified axis fixed whole. E.g expand = list(x = '1mm!', y = '2mm!') results output expand = list(x = c('1mm!', '1mm!'), y = c('2mm!', '2mm!').","code":""},{"path":"/reference/getSpatialAnnotations.html","id":"selection-of-spatial-annotations","dir":"Reference","previous_headings":"","what":"Selection of spatial annotations","title":"Obtain list of SpatialAnnotation objects — getSpatialAnnotations","text":"Selection spatial annotations via arguments ids, class, tags test works three steps: First, ids character prefilters annotations ID specified ones submitted next steps. NULL, annotations submitted next steps. Secondd, class character filters annotations remaining first step class. NULL, step skipped. Third, tags character used combination test select spatial annotations remain second step based meta data tagged . multiple options: Argument test set '' 1: included, image annotation must tagged least one input tags. Argument test set '' 2: included, image annotation must tagged input tags. Can contain tags specified. Argument test set 'identical' 3: included, image annotation must tagged input tags. Can tagged anything else. Argument test set not_identical 4: included, image annotation must tagged combination input tags. Argument test set 'none' 5: included, image annotation must contain input tags. tags NULL, step skipped. Therefore, ids, class tags NULL, default, annotations selected subsetting steps skipped. Eventually, remaining spatial annotations submitted whatever respective function .","code":""},{"path":"/reference/getSpatialData.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain SpatialData object — getSpatialData","title":"Obtain SpatialData object — getSpatialData","text":"Extracts S4-object used container images.","code":""},{"path":"/reference/getSpatialData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain SpatialData object — getSpatialData","text":"","code":"getSpatialData(object)"},{"path":"/reference/getSpatialData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain SpatialData object — getSpatialData","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getSpatialData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain SpatialData object — getSpatialData","text":"Object class SpatialData.","code":""},{"path":"/reference/getSpatialData.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Obtain SpatialData object — getSpatialData","text":"getImageObject() deprecated version v3.0.0 favor getSpatialData().","code":""},{"path":[]},{"path":"/reference/getSpatialMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain spatial method — getSpatialMethod","title":"Obtain spatial method — getSpatialMethod","text":"Extracts S4 object class SpatialMethod contains meta data set protocol followed create data used object.","code":""},{"path":"/reference/getSpatialMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain spatial method — getSpatialMethod","text":"","code":"getSpatialMethod(object, ...)  # S4 method for class 'SPATA2' getSpatialMethod(object)  # S4 method for class 'SpatialData' getSpatialMethod(object)"},{"path":"/reference/getSpatialMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain spatial method — getSpatialMethod","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getSpatialMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain spatial method — getSpatialMethod","text":"object class SpatialMethod.","code":""},{"path":[]},{"path":"/reference/getSpatialTrajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain SpatialTrajectory objects — getSpatialTrajectory","title":"Obtain SpatialTrajectory objects — getSpatialTrajectory","text":"Extracts objects class SpatialTrajectory.","code":""},{"path":"/reference/getSpatialTrajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain SpatialTrajectory objects — getSpatialTrajectory","text":"","code":"getSpatialTrajectory(object, id)  getSpatialTrajectories(object, ids = NULL)"},{"path":"/reference/getSpatialTrajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain SpatialTrajectory objects — getSpatialTrajectory","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value. Denotes spatial trajectory interest. ids Character vector. Denotes spatial trajectories interest.","code":""},{"path":"/reference/getSpatialTrajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain SpatialTrajectory objects — getSpatialTrajectory","text":"object class SpatialTrajectory case getSpatialTrajectory() named list SpatialTrajectory objects case getSpatialTrajectories(). empty list nSpatialTrajectories() == 0.","code":""},{"path":"/reference/getSpatialTrajectoryIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain trajectory IDs — getSpatialTrajectoryIds","title":"Obtain trajectory IDs — getSpatialTrajectoryIds","text":"Extracts ids objects class SpatialTrajectory SPATA2 object.","code":""},{"path":"/reference/getSpatialTrajectoryIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain trajectory IDs — getSpatialTrajectoryIds","text":"","code":"getSpatialTrajectoryIds(object)"},{"path":"/reference/getSpatialTrajectoryIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain trajectory IDs — getSpatialTrajectoryIds","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getSpatialTrajectoryIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain trajectory IDs — getSpatialTrajectoryIds","text":"Character vector.","code":""},{"path":"/reference/getSpotSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain spot size — getSpotSize","title":"Obtain spot size — getSpotSize","text":"Extracts spot size display barcoded spots surface plots.","code":""},{"path":"/reference/getSpotSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain spot size — getSpotSize","text":"","code":"getSpotSize(object, ...)  # S4 method for class 'SPATA2' getSpotSize(object, ...)  # S4 method for class 'SpatialData' getSpotSize(object, ...)"},{"path":"/reference/getSpotSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain spot size — getSpotSize","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getSpotSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain spot size — getSpotSize","text":"Numeric value.","code":""},{"path":"/reference/getStsDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain spatial trajectory screening data.frame — getStsDf","title":"Obtain spatial trajectory screening data.frame — getStsDf","text":"Extracts data.frame inferred gradients related course trajectory.","code":""},{"path":"/reference/getStsDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain spatial trajectory screening data.frame — getStsDf","text":"","code":"getStsDf(   object,   variables,   id = idST(object),   resolution = recSgsRes(object),   width = NULL,   unit = getDefaultUnit(object),   ro = c(0, 1),   bcs_exclude = NULL,   format = \"wide\",   control = NULL,   verbose = FALSE,   ... )"},{"path":"/reference/getStsDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain spatial trajectory screening data.frame — getStsDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. numeric variables included screening process. resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). width Distance measure. width trajectory frame. Defaults trajectory length. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. ro numeric range output gradients scaled. Defaults c(0,1). bcs_exclude Character value containing barcodes observations excluded analysis. format Character value. Either 'long' 'wide'. Defaults 'wide'. 'wide' variable gets column.  'long', data.frame organized column called variables contains variable names column called 'values' contains values. control list arguments taken stats::loess.control(). Default setting stored SPATA2::sgs_loess_control. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getStsDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain spatial trajectory screening data.frame — getStsDf","text":"Data.frame.","code":""},{"path":"/reference/getTissueArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain tissue area size — getTissueArea","title":"Obtain tissue area size — getTissueArea","text":"Computes extracts size area covered tissue.","code":""},{"path":"/reference/getTissueArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain tissue area size — getTissueArea","text":"","code":"getTissueArea(object, unit, method = \"obs\", img_name = activeImage(object))"},{"path":"/reference/getTissueArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain tissue area size — getTissueArea","text":"object object class SPATA2 , case S4 generics, objects classes method defined. unit Character value. Output unit. Must one validUnitsOfArea(). method Character value. Defines origin based outline computed. Either 'image' 'obs'. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/getTissueArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain tissue area size — getTissueArea","text":"vector area measures. Length equal number tissue sections.","code":""},{"path":[]},{"path":"/reference/getTissueArea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain tissue area size — getTissueArea","text":"","code":"library(SPATA2)  ## Example 1 - image based object <- example_data$object_UKF313T_diet  object <- identifyPixelContent(object) object <- identifyTissueOutline(object, method = \"image\")  plotImage(object, outline = TRUE) +  ggpLayerAxesSI(object, unit = \"mm\")  getTissueArea(object, unit = \"mm\")  ## Example 2 - coordinates based object <- loadExampleObject(\"UKF313T\")  object <- identifyTissueOutline(object, method = \"obs\")  plotSurface(object, color_by = \"tissue_section\") +  ggpLayerTissueOutline(object)  area_out <- getTissueArea(object)  print(area_out)  sum(area_out)"},{"path":"/reference/getTissueOutlineCentroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain tissue outline centroid — getTissueOutlineCentroid","title":"Obtain tissue outline centroid — getTissueOutlineCentroid","text":"Extracts centroid polygon used outline whole tissue.","code":""},{"path":"/reference/getTissueOutlineCentroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain tissue outline centroid — getTissueOutlineCentroid","text":"","code":"getTissueOutlineCentroid(object, ...)  # S4 method for class 'SpatialData' getTissueOutlineCentroid(   object,   method = NULL,   img_name = activeImage(object),   transform = TRUE,   ... )  # S4 method for class 'HistoImage' getTissueOutlineCentroid(object, transform = TRUE, ...)"},{"path":"/reference/getTissueOutlineCentroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain tissue outline centroid — getTissueOutlineCentroid","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. method Character value. Either 'obs' 'image'. Decides whether tissue outline used based observations image used. method = NULL, function checks first HistoImage registered. , outline image specified img_name returned. images, outline computed identifyTissueOutline(..., method = 'obs') used. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object.","code":""},{"path":"/reference/getTissueOutlineCentroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain tissue outline centroid — getTissueOutlineCentroid","text":"Numeric vector length two.","code":""},{"path":"/reference/getTissueOutlineDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the outline of tissue sections — getTissueOutlineDf","title":"Obtain the outline of tissue sections — getTissueOutlineDf","text":"Extracts polygons necessary outline tissue. See vignette tissue outline information.","code":""},{"path":"/reference/getTissueOutlineDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the outline of tissue sections — getTissueOutlineDf","text":"","code":"getTissueOutlineDf(object, ...)  # S4 method for class 'SPATA2' getTissueOutlineDf(   object,   method = \"obs\",   img_name = activeImage(object),   by_section = TRUE,   section_subset = NULL,   transform = TRUE,   ... )  # S4 method for class 'SpatialData' getTissueOutlineDf(   object,   method = NULL,   img_name = activeImage(object),   by_section = TRUE,   section_subset = NULL,   transform = TRUE )  # S4 method for class 'HistoImage' getTissueOutlineDf(   object,   by_section = TRUE,   section_subset = NULL,   transform = TRUE )"},{"path":"/reference/getTissueOutlineDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the outline of tissue sections — getTissueOutlineDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. method Character value. Either 'obs' 'image'. Decides whether tissue outline used based observations image used. method = NULL, function checks first HistoImage registered. , outline image specified img_name returned. images, outline computed identifyTissueOutline(..., method = 'obs') used. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). by_section Logical value. TRUE, outline used acknowledges potential multiple tissue sections. FALSE, outline used simply outlines everything one single polygon. section_subset Character vector NULL. character, specifies tissue sections interest filters output accordingly. transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object.","code":""},{"path":"/reference/getTissueOutlineDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the outline of tissue sections — getTissueOutlineDf","text":"Data.frame vertices x- y-coordinates. by_section = TRUE, data.frame contains additional variable indicates tissue section polygon vertex belongs outlines.","code":""},{"path":"/reference/getTissueSections.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the names of tissue sections — getTissueSections","title":"Obtain the names of tissue sections — getTissueSections","text":"Extracts unique tissue sections metadata given object.","code":""},{"path":"/reference/getTissueSections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the names of tissue sections — getTissueSections","text":"","code":"getTissueSections(object)"},{"path":"/reference/getTissueSections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the names of tissue sections — getTissueSections","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/getTissueSections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the names of tissue sections — getTissueSections","text":"character vector unique tissue sections, excluding \"tissue_section_0\".","code":""},{"path":[]},{"path":"/reference/getTissueSections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain the names of tissue sections — getTissueSections","text":"","code":"library(SPATA2)  object <- loadExampleObject(\"LMU_MCI\", process = TRUE)  tissue_sections <- getTissueSections(object)  print(tissue_sections)  plotSurface(object, color_by = \"tissue_section\")"},{"path":"/reference/getTrajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getTrajectory","title":"Deprecated — getTrajectory","text":"Deprecated favor getSpatialTrajectory().","code":""},{"path":"/reference/getTrajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getTrajectory","text":"","code":"getTrajectory(object, id, ...)"},{"path":"/reference/getTrajectoryDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getTrajectoryDf","title":"Deprecated — getTrajectoryDf","text":"Deprecated favor getStsDf().","code":""},{"path":"/reference/getTrajectoryDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getTrajectoryDf","text":"","code":"getTrajectoryDf(...)"},{"path":"/reference/getTrajectoryIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getTrajectoryIds","title":"Deprecated — getTrajectoryIds","text":"Deprecated favor getSpatialTrajectoryIds().","code":""},{"path":"/reference/getTrajectoryIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getTrajectoryIds","text":"","code":"getTrajectoryIds(...)"},{"path":"/reference/getTrajectoryLength.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain length of spatial trajectory — getTrajectoryLength","title":"Obtain length of spatial trajectory — getTrajectoryLength","text":"Computes returns length spatial trajectory.","code":""},{"path":"/reference/getTrajectoryLength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain length of spatial trajectory — getTrajectoryLength","text":"","code":"getTrajectoryLength(object, id, unit = \"px\", round = FALSE, as_numeric = FALSE)"},{"path":"/reference/getTrajectoryLength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain length of spatial trajectory — getTrajectoryLength","text":"object object class SPATA2 , case S4 generics, objects classes method defined. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options.","code":""},{"path":"/reference/getTrajectoryLength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain length of spatial trajectory — getTrajectoryLength","text":"length spatial directory single distance value.","code":""},{"path":"/reference/getTrajectoryNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getTrajectoryNames","title":"Deprecated — getTrajectoryNames","text":"Deprecated favor getSpatialTrajectoryIds().","code":""},{"path":"/reference/getTrajectoryNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getTrajectoryNames","text":"","code":"getTrajectoryNames(object, ...)"},{"path":"/reference/getTrajectoryObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getTrajectoryObject","title":"Deprecated — getTrajectoryObject","text":"Deprecated favor getSpatialTrajectory().","code":""},{"path":"/reference/getTrajectoryObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getTrajectoryObject","text":"","code":"getTrajectoryObject(...)"},{"path":"/reference/getTrajectoryScreeningDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — getTrajectoryScreeningDf","title":"Deprecated — getTrajectoryScreeningDf","text":"Deprecated favor getStsDf().","code":""},{"path":"/reference/getTrajectoryScreeningDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — getTrajectoryScreeningDf","text":"","code":"getTrajectoryScreeningDf(...)"},{"path":"/reference/getTrajectorySegmentDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain trajectory course — getTrajectorySegmentDf","title":"Obtain trajectory course — getTrajectorySegmentDf","text":"Extracts data.frame contains course spatial trajectory.","code":""},{"path":"/reference/getTrajectorySegmentDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain trajectory course — getTrajectorySegmentDf","text":"","code":"getTrajectorySegmentDf(object, id = idST(object), ...)"},{"path":"/reference/getTrajectorySegmentDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain trajectory course — getTrajectorySegmentDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value. Denotes spatial trajectory interest. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getTrajectorySegmentDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain trajectory course — getTrajectorySegmentDf","text":"Data.frame.","code":""},{"path":"/reference/getTrajectoryWidth.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain trajectory width — getTrajectoryWidth","title":"Obtain trajectory width — getTrajectoryWidth","text":"Computes extracts default width trajectory.","code":""},{"path":"/reference/getTrajectoryWidth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain trajectory width — getTrajectoryWidth","text":"","code":"getTrajectoryWidth(object, id = idST(object), unit = \"px\", orig = FALSE)"},{"path":"/reference/getTrajectoryWidth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain trajectory width — getTrajectoryWidth","text":"object object class SPATA2 , case S4 generics, objects classes method defined. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options.","code":""},{"path":"/reference/getTrajectoryWidth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain trajectory width — getTrajectoryWidth","text":"Distance value.","code":""},{"path":"/reference/getVarTypeList.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variable type list — getVarTypeList","title":"Get variable type list — getVarTypeList","text":"Retrieves list variable types present SPATA2 object.","code":""},{"path":"/reference/getVarTypeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable type list — getVarTypeList","text":"","code":"getVarTypeList(object, variables = NULL)"},{"path":"/reference/getVarTypeList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable type list — getVarTypeList","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables character vector specifying subset variables include output. default, variables known object returned output list.","code":""},{"path":"/reference/getVarTypeList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variable type list — getVarTypeList","text":"list containing names variables categorized type.","code":""},{"path":"/reference/getVarTypeList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get variable type list — getVarTypeList","text":"function categorizes variables different types, including spatial coordinates, molecules, signatures, meta features, additional information like barcodes sample identifiers. 'variables' argument provided character vector, function returns specified variables categorized type. Otherwise, returns variables categorized type.","code":""},{"path":[]},{"path":"/reference/getVariableMolecules.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain molecules of high variability — getVariableMolecules","title":"Obtain molecules of high variability — getVariableMolecules","text":"Extracts results identifyVariableMolecules().","code":""},{"path":"/reference/getVariableMolecules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain molecules of high variability — getVariableMolecules","text":"","code":"getVariableMolecules(object, method = NULL, assay_name = activeAssay(object))"},{"path":"/reference/getVariableMolecules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain molecules of high variability — getVariableMolecules","text":"object object class SPATA2 , case S4 generics, objects classes method defined. method Character value NULL. NULL variable features stored one method results returned, else method must specified. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/getVariableMolecules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain molecules of high variability — getVariableMolecules","text":"Character vector.","code":""},{"path":"/reference/getVariableMolecules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain molecules of high variability — getVariableMolecules","text":"","code":"library(SPATA2) data(\"example_data\")  object <- loadExampleObject(\"UKF269T\")  # default is method = 'vst' object <- identifyVariableMolecules(object, n_mol = 2000)  # multiple results can be stored simultaneously object <- identifyVariableMolecules(object, n_mol = 3000, method = \"mean.var.plot\")  # fails, cause results for two methods are stored and method = NULL vars_vst <- getVariableMolecules(object)  vars_vst <- getVariableMoleculs(object, method = \"vst\") # works  # should work vars_mvp <- getVariableMolecules(object, method = \"mean.var.plot\")  length(vars_vst) length(vars_mvp)"},{"path":"/reference/getVariableNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain variable names of the SPATA2 object — getVariableNames","title":"Obtain variable names of the SPATA2 object — getVariableNames","text":"Extracts character vector variable names currently known SPATA2 object.","code":""},{"path":"/reference/getVariableNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain variable names of the SPATA2 object — getVariableNames","text":"","code":"getVariableNames(object, protected = FALSE)"},{"path":"/reference/getVariableNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain variable names of the SPATA2 object — getVariableNames","text":"object object class SPATA2 , case S4 generics, objects classes method defined. protected Logical value. TRUE, variable names protected SPATA2 returned, , regardless use .","code":""},{"path":"/reference/getVariableNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain variable names of the SPATA2 object — getVariableNames","text":"Character vector.","code":""},{"path":"/reference/getVariableNames.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Obtain variable names of the SPATA2 object — getVariableNames","text":"Molecule names picked raw count matrix assay.","code":""},{"path":"/reference/getWindowSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain window size of padded image — getWindowSize","title":"Obtain window size of padded image — getWindowSize","text":"Extracts window size (max. dimension) image pixel.","code":""},{"path":"/reference/getWindowSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain window size of padded image — getWindowSize","text":"","code":"getWindowSize(object, ...)  # S4 method for class 'HistoImage' getWindowSize(object, ...)"},{"path":"/reference/getWindowSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain window size of padded image — getWindowSize","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/getWindowSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain window size of padded image — getWindowSize","text":"Numeric value.","code":""},{"path":"/reference/get_names_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"get_names — get_names_dummy","title":"get_names — get_names_dummy","text":"get_names","code":""},{"path":"/reference/get_names_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_names — get_names_dummy","text":"","code":"get_names_dummy()"},{"path":"/reference/get_names_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_names — get_names_dummy","text":"Character vector names. content present character vector length 0.","code":""},{"path":"/reference/ggpInit.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate ggplot2 layering — ggpInit","title":"Initiate ggplot2 layering — ggpInit","text":"Initiates ggplot object ggpLayer- functions can added individual plotting ideas.","code":""},{"path":"/reference/ggpInit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate ggplot2 layering — ggpInit","text":"","code":"ggpInit(object = \"object\", theme = \"void\", data = \"coords\")"},{"path":"/reference/ggpInit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate ggplot2 layering — ggpInit","text":"object object class SPATA2 , case S4 generics, objects classes method defined. theme Character value. String denotes default theme. Defaults void","code":""},{"path":"/reference/ggpInit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiate ggplot2 layering — ggpInit","text":"empty ggplot.","code":""},{"path":"/reference/ggpLayerAxesClean.html","id":null,"dir":"Reference","previous_headings":"","what":"Display clean axes — ggpLayerAxesClean","title":"Display clean axes — ggpLayerAxesClean","text":"Removes axis text, -ticks -titles (labs) plot.","code":""},{"path":"/reference/ggpLayerAxesClean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display clean axes — ggpLayerAxesClean","text":"","code":"ggpLayerAxesClean(..., object = NULL)"},{"path":"/reference/ggpLayerAxesClean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display clean axes — ggpLayerAxesClean","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerAxesSI.html","id":null,"dir":"Reference","previous_headings":"","what":"Display axes with SI units of length — ggpLayerAxesSI","title":"Display axes with SI units of length — ggpLayerAxesSI","text":"Performs necessary transformations display axes surface plots STS/IAS line- ridgeplots SI units length.","code":""},{"path":"/reference/ggpLayerAxesSI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display axes with SI units of length — ggpLayerAxesSI","text":"","code":"ggpLayerAxesSI(   object,   unit = getSpatialMethod(object)@unit,   which = c(\"x\", \"y\"),   breaks = NULL,   add_labs = TRUE,   round = 2,   xrange = NULL,   yrange = NULL,   ... )"},{"path":"/reference/ggpLayerAxesSI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display axes with SI units of length — ggpLayerAxesSI","text":"object object class SPATA2 , case S4 generics, objects classes method defined. unit desired unit. Defaults unit original size image spatial method provided. Obtain valid input options validUnitsOfLengthSI(). One two 'x' 'y'. Specifies axes transformation performed. Defaults . breaks Specifies breaks set. Labels plotted unit specified unit. Valid input: NULL: specification. Five breaks set equally distributed. work STS/IAS related plots range taken whole image. vector: Vector distance measures. Breaks set axes denoted . (Defaults , x y.) list: List slots x y. Vector distance measures set axis specifically. add_labs Logical. TRUE, adds x- y-labs plot. round Numeric value FALSE. numeric, given digits base::round(). Rounds transformed values returned. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. ... Used absorb deprecated arguments functions. expand Specifies axis expanded. Using expand ggplot2::scale_x/y_continuous(). Valid input: NULL TRUE: specification. Default used. FALSE: expansion. vector: Numeric vector length two. Input set axes denoted . (Defaults , x y.) list: List slots x y. Numeric vector length two, used axis specifically. breaks_x, breaks_y Deprecated favor breaks. frame_by Deprecated. Use ggplayerFrame*() - functions. xlim, ylim Vectors length two. Distance measures set limits respective axes.","code":""},{"path":"/reference/ggpLayerAxesSI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display axes with SI units of length — ggpLayerAxesSI","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerAxesSI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display axes with SI units of length — ggpLayerAxesSI","text":"Several functions SPATA2 arguments take distance input. specifically refer distance unit must specified. three ways create valid input arguments. 1. pixel: two valid input options specify distance pixel: numeric: Single numeric values, e.g. arg_input <- c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input <- c('2px', '3.554px', '69px', '100.67px') Note: unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant. 2. According Systeme international d`unites (SI): Specifying distances SI units e.g. arg_input <- c('2mm', '4mm') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfLengthSI(). 3. vectors class unit: Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input <- units::set_unit(x = c(2,4), value = 'mm') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":"/reference/ggpLayerAxesSI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display axes with SI units of length — ggpLayerAxesSI","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\")   containsPixelScaleFactor(object) # must be TRUE   # no axes specification  plotSurface(object, color_by = \"METRN\") +   ggpLayerThemeCoords()   # in millimeters  plotSurface(object, color_by = \"METRN\") +   ggpLayerThemeCoords() +   ggpLayerAxesSI(object, unit = \"mm\")    # in millimeters set specifically  my_breaks <- str_c(1:7, \"mm\")   print(my_breaks)   # breaks can be a vector of distance values  plotSurface(object, color_by = \"METRN\") +   ggpLayerThemeCoords() +   ggpLayerAxesSI(object, unit = \"mm\", breaks = my_breaks, add_labs = TRUE)   # or a list of vectors of distance values for each axis  plotSurface(object, color_by = \"METRN\") +   ggpLayerThemeCoords() +   ggpLayerAxesSI(object, unit = \"mm\", breaks = list(x = my_breaks, y = str_c(2:5, \"mm\")), add_labs = TRUE)"},{"path":"/reference/ggpLayerCaptureArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Add capture area to surface plot — ggpLayerCaptureArea","title":"Add capture area to surface plot — ggpLayerCaptureArea","text":"Adds capture area rectangular /crops frame plot accordingly.","code":""},{"path":"/reference/ggpLayerCaptureArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add capture area to surface plot — ggpLayerCaptureArea","text":"","code":"ggpLayerCaptureArea(   object,   opt = c(\"rect\"),   rect_alpha = 0.9,   rect_clr = \"black\",   rect_line_type = \"solid\",   rect_size = 1,   expand_rect = 0.025,   expand_x = ggplot2::waiver(),   expand_y = ggplot2::waiver(),   img_name = activeImage(object) )"},{"path":"/reference/ggpLayerCaptureArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add capture area to surface plot — ggpLayerCaptureArea","text":"object object class SPATA2 , case S4 generics, objects classes method defined. opt Combination 'rect' /'crop'. expand_x, expand_y Given expand ggplot2::scale_x/y_continuous().","code":""},{"path":"/reference/ggpLayerCaptureArea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add capture area to surface plot — ggpLayerCaptureArea","text":"List ggpLayer outputs.","code":""},{"path":[]},{"path":"/reference/ggpLayerCaptureArea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add capture area to surface plot — ggpLayerCaptureArea","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\")  plotImage(object) +  ggpLayerCaptureArea(object, opt = \"rect\")  plotImage(object) +  ggpLayerCaptureArea(object, opt = \"crop\")"},{"path":"/reference/ggpLayerColorGroupScale.html","id":null,"dir":"Reference","previous_headings":"","what":"Add group specific color spectrum — ggpLayerColorGroupScale","title":"Add group specific color spectrum — ggpLayerColorGroupScale","text":"Creates color spectrum color used represent group transparent white (can changed) maintain consistent color scheme.","code":""},{"path":"/reference/ggpLayerColorGroupScale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add group specific color spectrum — ggpLayerColorGroupScale","text":"","code":"ggpLayerColorGroupScale(   object,   grouping,   group,   clrp,   clrp_adjust = NULL,   low = ggplot2::alpha(\"white\", 0),   aes = \"color\",   ... )"},{"path":"/reference/ggpLayerColorGroupScale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add group specific color spectrum — ggpLayerColorGroupScale","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. clrp, clrp_adjust colorpalette adjustment used visualize grouping. low color plot. aes Either 'color' 'fill'. ... Additional arguments given ggplot2::scale_color_gradient()","code":""},{"path":"/reference/ggpLayerColorGroupScale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add group specific color spectrum — ggpLayerColorGroupScale","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerEncirclingGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — ggpLayerEncirclingGroups","title":"Deprecated — ggpLayerEncirclingGroups","text":"Deprecated favor ggpLayerGroupOutline().","code":""},{"path":"/reference/ggpLayerEncirclingGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — ggpLayerEncirclingGroups","text":"","code":"ggpLayerEncirclingGroups(...)"},{"path":"/reference/ggpLayerEncirclingSAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — ggpLayerEncirclingSAS","title":"Deprecated — ggpLayerEncirclingSAS","text":"Deprecated favor ggpLayerExprEstimatesSAS().","code":""},{"path":"/reference/ggpLayerEncirclingSAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — ggpLayerEncirclingSAS","text":"","code":"ggpLayerEncirclingSAS(...)"},{"path":"/reference/ggpLayerExprEstimatesSAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add SAS expression estimates — ggpLayerExprEstimatesSAS","title":"Add SAS expression estimates — ggpLayerExprEstimatesSAS","text":"Visualizes distances expression numeric feature estimated certain SAS set .","code":""},{"path":"/reference/ggpLayerExprEstimatesSAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add SAS expression estimates — ggpLayerExprEstimatesSAS","text":"","code":"ggpLayerExprEstimatesSAS(   object,   ids,   distance = \"dte\",   resolution = recSgsRes(object),   core = FALSE,   alpha_core = 0,   fill_core = NA,   line_alpha = 1,   line_color = \"black\",   line_size = (line_size_core * 0.75),   line_size_core = 1,   incl_edge = TRUE,   method = \"normal\",   verbose = NULL,   ... )"},{"path":"/reference/ggpLayerExprEstimatesSAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add SAS expression estimates — ggpLayerExprEstimatesSAS","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector. Specifies IDs spatial annotations interest. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. size display lines expression estimates. line_size_core Numeric. size display core outline spatial annotation. incl_edge Logical. TRUE, makes use SPATA2 automatic tissue outline algorithm. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/ggpLayerExprEstimatesSAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add SAS expression estimates — ggpLayerExprEstimatesSAS","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerExprEstimatesSAS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add SAS expression estimates — ggpLayerExprEstimatesSAS","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\")  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    force1 = TRUE    )  plotSurface(object, color_by = \"HM_HYPOXIA\", outline = T, pt_clrsp = \"Reds 3\") +  ggpLayerExprEstimatesSAS(object, ids = \"hypoxia_ann\", distance = \"3mm\") +  ggpLayerScaleBarSI(object, sb_pos = c(\"3mm\", \"2mm\"))"},{"path":"/reference/ggpLayerFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix ggplot frame — ggpLayerFrame","title":"Fix ggplot frame — ggpLayerFrame","text":"Crops frame surface plot. Soft deprecated favor arguments xrange yrange plotSurface().","code":""},{"path":"/reference/ggpLayerFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix ggplot frame — ggpLayerFrame","text":"","code":"ggpLayerFrame(object, xrange, yrange, expand = FALSE)  ggpLayerFixFrame(object)"},{"path":"/reference/ggpLayerFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix ggplot frame — ggpLayerFrame","text":"object object class SPATA2 , case S4 generics, objects classes method defined. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information.","code":""},{"path":"/reference/ggpLayerFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix ggplot frame — ggpLayerFrame","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerFrameByCoords.html","id":null,"dir":"Reference","previous_headings":"","what":"Set plot limits — ggpLayerFrameByCoords","title":"Set plot limits — ggpLayerFrameByCoords","text":"Sets limits x- y-axis surface plot based coordinate range objects observations image. Soft deprecated favor arguments xrange yrange plotSurface().","code":""},{"path":"/reference/ggpLayerFrameByCoords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set plot limits — ggpLayerFrameByCoords","text":"","code":"ggpLayerFrameByCoords(object = \"object\", ...)  ggpLayerFrameByImage(object = \"object\", ...)"},{"path":"/reference/ggpLayerFrameByCoords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set plot limits — ggpLayerFrameByCoords","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/ggpLayerFrameByCoords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set plot limits — ggpLayerFrameByCoords","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerFrameByCoords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set plot limits — ggpLayerFrameByCoords","text":"","code":"library(SPATA2) library(patchwork)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\")  plotImage(object) + plotSurface(object)  (plotImage(object) + ggpLayerFrameByCoords(object)) + plotSurface(object)"},{"path":"/reference/ggpLayerGroupOutline.html","id":null,"dir":"Reference","previous_headings":"","what":"Add group outline — ggpLayerGroupOutline","title":"Add group outline — ggpLayerGroupOutline","text":"Highlights groups barcode-spots encircling . Depending plot_type can added surface plot dimensional reduction plot.","code":""},{"path":"/reference/ggpLayerGroupOutline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add group outline — ggpLayerGroupOutline","text":"","code":"ggpLayerGroupOutline(   object,   grouping,   group_subset = NULL,   plot_type = \"surface\",   line_alpha = 1,   line_color = \"black\",   line_size = 1,   line_type = \"solid\",   alpha = 0,   fill = NA,   incl_edge = FALSE,   merdge_edge = FALSE,   incr_vert = FALSE,   bcsp_rm = character(0),   outlier_rm = TRUE,   eps = recDbscanEps(object),   minPts = recDbscanMinPts(object),   concavity = NULL,   expand_outline = getCCD(object, \"px\") * 1.1,   ... )"},{"path":"/reference/ggpLayerGroupOutline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add group outline — ggpLayerGroupOutline","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. group_subset Character value NULL. character, specifies exact groups outlined. NULL, groups encircled. plot_type Character value. Either 'surface' name conducted dimensional reduction. line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. line_type Character. line type. One 'blank', 'solid', 'dashed', 'dotted', 'dotdash', 'longdash' 'twodash'. incl_edge Logical. TRUE, include tissue section outline. See examples getTissueOutlineDf(). incr_vert Logical value. TRUE, number vertices polygon plotted increased linear interpolation. can lead smoother visualization also increased runtime. bcsp_rm Character vector NULL. character, specifies barcode-spots removed analysis plotting. (Deprecated favor bcs_rm). outlier_rm, minPts Logical. TRUE, spatial outlier group outline removed outline via dbscan::dbscan(..., minPts = minPts). Ignored plot_type 'surface'. eps Distance measure. Given eps dbscan::dbscan(). Determines size (radius) epsilon neighborhood. concavity Numeric value. Given argument concavity concaveman::concaveman(). Determines relative measure concavity. 1 results relatively detailed shape, Infinity results convex hull. can use values lower 1, can produce pretty crazy shapes. expand_outline Distance measure expand outline. Must provided pixel units! ... Additional arguments given ggforce::geom_polygon(). Affects encircling.","code":""},{"path":"/reference/ggpLayerGroupOutline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add group outline — ggpLayerGroupOutline","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerGroupOutline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add group outline — ggpLayerGroupOutline","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\", meta = TRUE)  plotSurface(object, color_by = \"bayes_space\") +  ggpLayerGroupOutline(object, grouping = \"bayes_space\", group_subset = c(\"B1\", \"B2\"))"},{"path":"/reference/ggpLayerHorizonSAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add SAS screening horizon — ggpLayerHorizonSAS","title":"Add SAS screening horizon — ggpLayerHorizonSAS","text":"Visualizes border screened tissue (environment) everything beyond included screening (periphery).","code":""},{"path":"/reference/ggpLayerHorizonSAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add SAS screening horizon — ggpLayerHorizonSAS","text":"","code":"ggpLayerHorizonSAS(   object,   id,   distance = distToEdge(object, id),   line_alpha = 0.9,   line_color = \"black\",   line_size = 1.5,   line_type = \"solid\",   incl_edge = TRUE,   incr_vert = TRUE,   verbose = NULL,   ... )"},{"path":"/reference/ggpLayerHorizonSAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add SAS screening horizon — ggpLayerHorizonSAS","text":"object object class SPATA2 , case S4 generics, objects classes method defined. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. size display lines expression estimates. line_type Character. line type. One 'blank', 'solid', 'dashed', 'dotted', 'dotdash', 'longdash' 'twodash'. incl_edge Logical. TRUE, makes use SPATA2 automatic tissue outline algorithm. incr_vert Logical value. TRUE, number vertices polygon plotted increased linear interpolation. can lead smoother visualization also increased runtime. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/ggpLayerHorizonSAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add SAS screening horizon — ggpLayerHorizonSAS","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerHorizonSAS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add SAS screening horizon — ggpLayerHorizonSAS","text":"","code":"library(SPATA2) library(tidyverse)  object <- loadExampleObject(\"UKF275T\")  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    force1 = TRUE    )  plotSurface(object, color_by = \"HM_HYPOXIA\", outline = T, pt_clrsp = \"Reds 3\") +  ggpLayerHorizonSAS(object, id = \"hypoxia_ann\", distance = \"3mm\") +  ggpLayerScaleBarSI(object, sb_pos = c(\"3mm\", \"2mm\"))"},{"path":"/reference/ggpLayerImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Add histology image — ggpLayerImage","title":"Add histology image — ggpLayerImage","text":"Creates ggplot2 layer histology image raster.","code":""},{"path":"/reference/ggpLayerImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add histology image — ggpLayerImage","text":"","code":"ggpLayerImage(object, ...)  # S4 method for class 'SPATA2' ggpLayerImage(   object,   img_name = activeImage(object),   transform = TRUE,   img_alpha = 1,   scale_fct = 1,   ... )  # S4 method for class 'SpatialData' ggpLayerImage(   object,   img_name = activeImage(object),   transform = TRUE,   img_alpha = 1,   scale_fct = 1,   ... )  # S4 method for class 'HistoImage' ggpLayerImage(object, transform = TRUE, scale_fct = 1, img_alpha = 1, ...)  # S4 method for class 'SpatialAnnotation' ggpLayerImage(object, img_alpha = 1, rescale_axes = TRUE, scale_fct = 1, ...)  # S4 method for class 'Image' ggpLayerImage(object, scale_fct = 1, img_alpha = 1, ...)  # S4 method for class 'data.frame' ggpLayerImage(object, fill_by, img_alpha = 1)"},{"path":"/reference/ggpLayerImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add histology image — ggpLayerImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object. img_alpha Numeric value. Sets transparency image.","code":""},{"path":"/reference/ggpLayerImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add histology image — ggpLayerImage","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerImage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add histology image — ggpLayerImage","text":"image plotted via ggplot2::geom_raster() mapping pixel position x-axis y-axis. See section Image visualization ggplot2 details.","code":""},{"path":"/reference/ggpLayerImage.html","id":"image-visualization-with-ggplot-","dir":"Reference","previous_headings":"","what":"Image visualization with ggplot2","title":"Add histology image — ggpLayerImage","text":"comparing output ggplot() + ggpLayerImage() image plotting functions, may notice image appears horizontally flipped plotted using ggpLayerImage(). behavior due use Cartesian coordinate system SPATA2, pixel coordinates c(width = 1, height = 1) plotted left side bottom. contrast, functions like EBImage::display() graphics::plot() use image space coordinate system, pixel heights start top. Consequently, image space, pixel c(width = 1, height = 1) displayed top resulting mirror inverted visualization image. chose use Cartesian coordinate system SPATA2 believe provides intuitive framework spatial alignment tissue, spatial annotations, spatial trajectories, barcoded sots, single cells, etc. coordinates corresponding data.frames provided form x- y-variables. See getCoordsDf(), getImgAnnOutlineDf(), getTissueOutlineDf() etc. prefer view image regular orientation, can use flipAll() function object, specifying axis = \"horizontal\", reverse effect.","code":""},{"path":"/reference/ggpLayerImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add histology image — ggpLayerImage","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\")  ggplot() +  ggpLayerImage(object)"},{"path":"/reference/ggpLayerImageAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — ggpLayerImageAnnotation","title":"Deprecated — ggpLayerImageAnnotation","text":"Deprecated favor ggpLayerSpatAnnOutline().","code":""},{"path":"/reference/ggpLayerImageAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — ggpLayerImageAnnotation","text":"","code":"ggpLayerImageAnnotation(...)"},{"path":"/reference/ggpLayerImgAnnBorder.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — ggpLayerImgAnnBorder","title":"Deprecated — ggpLayerImgAnnBorder","text":"Deprecated favor ggpLayerSpatAnnOutline().","code":""},{"path":"/reference/ggpLayerImgAnnBorder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — ggpLayerImgAnnBorder","text":"","code":"ggpLayerImgAnnBorder(...)"},{"path":"/reference/ggpLayerPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the observations to the surface plot — ggpLayerPoints","title":"Add the observations to the surface plot — ggpLayerPoints","text":"Adds data points (beads, cells, spots, etc.) object plot. function actually working horse plotSurface().","code":""},{"path":"/reference/ggpLayerPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the observations to the surface plot — ggpLayerPoints","text":"","code":"ggpLayerPoints(object, ...)  # S4 method for class 'SPATA2' ggpLayerPoints(   object,   alpha_by = NULL,   color_by = NULL,   pt_alpha = 0.9,   pt_clr = \"lightgrey\",   pt_size = NULL,   scale_pt_size = TRUE,   clrp = NULL,   clrp_adjust = NULL,   clrsp = NULL,   smooth = FALSE,   smooth_span = 0.2,   normalize = NULL,   transform_with = NULL,   xrange = NULL,   yrange = NULL,   outline = FALSE,   outline_fct = c(1.75, 2.75),   unit = NULL,   breaks = NULL,   expand = TRUE,   scale_fct = 1,   use_scattermore = FALSE,   sctm_pixels = c(1024, 1024),   add_labs = FALSE,   bcs_rm = NULL,   na_rm = FALSE,   geom = \"point\",   verbose = NULL,   ... )  # S4 method for class 'SpatialData' ggpLayerPoints(   object,   img_name = activeImage(object),   alpha_by = NULL,   color_by = NULL,   pt_alpha = 0.9,   pt_clr = \"lightgrey\",   pt_size = 1,   clrp = \"sifre\",   clrp_adjust = NULL,   clrsp = \"inferno\",   scale_pt_size = TRUE,   xrange = NULL,   yrange = NULL,   unit = NULL,   breaks = NULL,   expand = TRUE,   bcs_rm = NULL,   outline = FALSE,   outline_fct = c(1.75, 2.75),   na_rm = FALSE,   scale_fct = 1,   use_scattermore = FALSE,   sctm_pixels = c(1024, 1024),   add_labs = FALSE,   geom = \"point\",   ... )  # S4 method for class 'data.frame' ggpLayerPoints(   object,   alpha_by = NULL,   color_by = NULL,   pt_alpha = 0.9,   pt_clr = \"lightgrey\",   pt_size = 1,   scale_fct = 1,   use_scattermore = FALSE,   sctm_pixels = c(1024, 1024),   bcs_rm = NULL,   geom = \"point\",   na_rm = FALSE )"},{"path":"/reference/ggpLayerPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the observations to the surface plot — ggpLayerPoints","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional arguments given scale_color_add_on(). color_by Character value. variables color data points. pt_alpha Numeric value. Specifies degree transparency points. pt_clr Character value. Specifies color points. pt_size Numeric value. Specifies size points. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. clrsp Character value. Specifies color spectrum used represent continuous values numeric variables. Run validColorSpectra() obtain valid input options. smooth Logical. TRUE, loess fit used smooth values. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). normalize Logical. set TRUE values scaled 0-1. Hint: Variables uniformly expressed can scaled discarded. transform_with List NULL. list, can used transform continuous variables usage. Names list slots refer variable. content slot refers transforming functions. E.g variable interest GFAP gene expression, following work: Single function: transform_with = log10, Multiple functions: transform_with = list(GFAP = list(log10, log2) case plotting: Useful want apply one transformation variables mapped plotting aesthetics. Input transform_with applied respective <aes>_trans argument. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. unit desired unit. Defaults unit original size image spatial method provided. Obtain valid input options validUnitsOfLengthSI(). breaks Specifies breaks set. Labels plotted unit specified unit. Valid input: NULL: specification. Five breaks set equally distributed. work STS/IAS related plots range taken whole image. vector: Vector distance measures. Breaks set axes denoted . (Defaults , x y.) list: List slots x y. Vector distance measures set axis specifically. expand Specifies axis expanded. Using expand ggplot2::scale_x/y_continuous(). Valid input: NULL TRUE: specification. Default used. FALSE: expansion. vector: Numeric vector length two. Input set axes denoted . (Defaults , x y.) list: List slots x y. Numeric vector length two, used axis specifically. use_scattermore Logical value. TRUE, data points plotted scattermore::geom_scattermore() allows quick plotting several thousand data points. number data points plotted bigger 10.000 used anyway. add_labs Logical. TRUE, adds x- y-labs plot. bcs_rm Character vector NULL. character, specifies observations removed prior analysis visualization barcode. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). spot_alpha, spot_size, spot_clr Parameters set aesthetics alpha, size, color spots. Arguments alpha_by color_by prioritized.","code":""},{"path":"/reference/ggpLayerPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the observations to the surface plot — ggpLayerPoints","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add the observations to the surface plot — ggpLayerPoints","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\")  ggplot() +  ggpLayerPoints(object, color_by = \"HM_HYPOXIA\")"},{"path":"/reference/ggpLayerRect.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a rectangular to the plot — ggpLayerRect","title":"Add a rectangular to the plot — ggpLayerRect","text":"Adds rectangular plot.","code":""},{"path":"/reference/ggpLayerRect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a rectangular to the plot — ggpLayerRect","text":"","code":"ggpLayerRect(   object = \"object\",   xrange,   yrange,   alpha = 0,   color = \"black\",   size = 1,   expand = 0,   persp = \"coords\",   ... )"},{"path":"/reference/ggpLayerRect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a rectangular to the plot — ggpLayerRect","text":"object object class SPATA2 , case S4 generics, objects classes method defined. xrange, yrange Vector length two. Specifies x- y-range rectangle. E.g. xrange = c(200, 500) results rectangle ranges 200px 500px x-axis. argument works within SPATA2 distance framework. values specified SI units length input immediately converted pixel units. See details examples ?is_dist ?as_unit information. alpha, color, fill, size Given ggplot2::geom_rect(). expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information. ... Additional arguments given ggplot2::geom_rect().","code":""},{"path":"/reference/ggpLayerRect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a rectangular to the plot — ggpLayerRect","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerRect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a rectangular to the plot — ggpLayerRect","text":"","code":"library(SPATA2) library(patchwork)  object <- loadExampleObject(\"UKF275T\")  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    inner_borders = FALSE,    force1 = TRUE    )  # range of hypoxia annotation hr <- getSpatAnnRange(object, id = \"hypoxia_ann\")  hr_ggpL <- ggpLayerSpatAnnOutline(object, ids = \"hypoxia_ann\")  plotSurface(object, \"HM_HYPOXIA\") + hr_ggpL  p_rect <-  plotImage(object) +  hr_ggpL +  ggpLayerRect(object, xrange = hr$x, yrange = hr$y)  p_zoomed <-  plotImage(object) +  ggpLayerZoom(object, xrange = hr$x, yrange = hr$y)  p_rect + p_zoomed"},{"path":"/reference/ggpLayerSampleMask.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — ggpLayerSampleMask","title":"Deprecated — ggpLayerSampleMask","text":"Deprecated favor ggpLayerTissueOutline().","code":""},{"path":"/reference/ggpLayerSampleMask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — ggpLayerSampleMask","text":"","code":"ggpLayerSampleMask(...)"},{"path":"/reference/ggpLayerScaleBarSI.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a scale bar in SI units — ggpLayerScaleBarSI","title":"Add a scale bar in SI units — ggpLayerScaleBarSI","text":"Adds scale bar surface plot visualizes distance SI units.","code":""},{"path":"/reference/ggpLayerScaleBarSI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a scale bar in SI units — ggpLayerScaleBarSI","text":"","code":"ggpLayerScaleBarSI(   object,   sb_dist = \"1mm\",   sb_pos = \"bottom_right\",   sb_alpha = 1,   sb_color = \"black\",   sgmt_size = 1,   sgmt_type = \"solid\",   text_nudge_x = 0,   text_nudge_y = 0,   text_pos = NULL,   text_size = 10,   xrange = getCoordsRange(object)$x,   yrange = getCoordsRange(object)$y,   offset = c(0.8, 0.8),   theme_opt = \"none\" )"},{"path":"/reference/ggpLayerScaleBarSI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a scale bar in SI units — ggpLayerScaleBarSI","text":"object object class SPATA2 , case S4 generics, objects classes method defined. sb_dist distance SI units scale bar illustrates (e.g. '1mm', '200um'). Must bigger range image plot. sb_pos Character value vector length two. character, one top_right, top_left, bottom_right bottom_left. scale bar positioned accordingly. vector length two, distance measures specify positioning segment. Text lifted slightly hover . First value sets positioning x- second value sets positioning y-axis. sb_color color scale bar displayed. sgmt_size, sgmt_type Affect appearance segment. sgmt_type one validLineTypes(). text_nudge_x, text_nudge_y Numeric value NULL. Moves scale bar along axis pixel units. NULL, nudging computed based input yrange. text_pos Numeric vector length two NULL. numeric, sets position scale bar text precisely. text_nudge_x text_nudge_y still applied. xrange, yrange range image considered positioning scale calculated via sb_pos one top_right, top_left, bottom_right bottom_left. Defaults image range. offset Numeric vector length two. Used move position scale bar away center. Values range 0 1. First value used move along x-axis. Second value used y-axis.","code":""},{"path":"/reference/ggpLayerScaleBarSI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a scale bar in SI units — ggpLayerScaleBarSI","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerScaleBarSI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a scale bar in SI units — ggpLayerScaleBarSI","text":"scale bar consists two graphical objects. segment scale bar plotted geom_segment_fixed(). text scale bar plotted geom_text_fixed(). sb_pos one top_right, top_left, bottom_right bottom_left, position scale bar computed combination input argument offset. Argument offset used repel scale bar away center corner specified sb_pos. Thus, offset = c(0,0), scale bar positioned center plot regardless specification sb_pos. Offset values specify percentage distance center plot limits. instance, sb_pos = c(0.5, 0.75) sb_pos = 'top_right' scale bar moved right (50% distance center limits x-axis) top (75% distance center limits y-axis). numeric, sb_pos explicitly sets positioning segment (text). text automatically lifted hovers segment. work want manipulate text positioning can use arguments text_nudge_x text_nudge_y set position precisely text_pos.","code":""},{"path":"/reference/ggpLayerScaleBarSI.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Add a scale bar in SI units — ggpLayerScaleBarSI","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/ggpLayerScaleBarSI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a scale bar in SI units — ggpLayerScaleBarSI","text":"","code":"library(SPATA2) library(tidyverse)  object <- loadExampleObject(\"UKF275T\")  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    force1 = TRUE    )  plotSurface(object, color_by = \"HM_HYPOXIA\", outline = T, pt_clrsp = \"Reds 3\") +  ggpLayerHorizonSAS(object, id = \"hypoxia_ann\", distance = \"3mm\") +  ggpLayerScaleBarSI(object, sb_pos = c(\"3mm\", \"2mm\"))"},{"path":"/reference/ggpLayerScreeningDirectionSAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Add SAS screening direction — ggpLayerScreeningDirectionSAS","title":"Add SAS screening direction — ggpLayerScreeningDirectionSAS","text":"Visualizes screenining direction SAS set top surface plots. See examples.","code":""},{"path":"/reference/ggpLayerScreeningDirectionSAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add SAS screening direction — ggpLayerScreeningDirectionSAS","text":"","code":"ggpLayerScreeningDirectionSAS(   object,   ids,   distance = \"dte\",   line_alpha = 1,   line_color = \"black\",   line_size = 1,   line_type = \"solid\",   verbose = NULL,   ... )"},{"path":"/reference/ggpLayerScreeningDirectionSAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add SAS screening direction — ggpLayerScreeningDirectionSAS","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector. Specifies IDs spatial annotations interest. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. line_type Character. line type. One 'blank', 'solid', 'dashed', 'dotted', 'dotdash', 'longdash' 'twodash'. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/ggpLayerScreeningDirectionSAS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add SAS screening direction — ggpLayerScreeningDirectionSAS","text":"contrast ggpLayerExprEstimates(), visualizes precise positions expression estimates, ggpLayerScreeningDiretionSAS() visualizes concept, idea, screening direction. particularly useful, screening set includes multiple annotations one tissue section, ggpLayerExprEstimates() fails visualize combined expression estimates.","code":""},{"path":"/reference/ggpLayerScreeningDirectionSAS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add SAS screening direction — ggpLayerScreeningDirectionSAS","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  ids <- getSpatAnnIds(object, tags = c(\"necrotic\", \"compr\"))  plotImage(object) +   ggpLayerSpatAnnOutline(object, ids = ids, fill = \"lightgrey\") +   ggpLayerScreeningDirectionSAS(object, ids = ids, line_size = 0.5)"},{"path":"/reference/ggpLayerSpatAnnOutline.html","id":null,"dir":"Reference","previous_headings":"","what":"Add outline of spatial annotations — ggpLayerSpatAnnOutline","title":"Add outline of spatial annotations — ggpLayerSpatAnnOutline","text":"Adds ggplot2 layer polygons visualizing outline spatial annotations.","code":""},{"path":"/reference/ggpLayerSpatAnnOutline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add outline of spatial annotations — ggpLayerSpatAnnOutline","text":"","code":"ggpLayerSpatAnnOutline(   object,   ids = NULL,   tags = NULL,   test = \"any\",   alpha = 0.5,   fill = NA,   line_alpha = 0.9,   line_color = \"black\",   line_size = 1,   line_type = \"solid\",   use_colors = FALSE,   clrp = NULL,   clrp_adjust = NULL,   inner = TRUE,   incl_edge = FALSE,   merge_edge = FALSE,   incr_vert = FALSE,   expand_outline = 0,   xrange = getCoordsRange(object)$x,   yrange = getCoordsRange(object)$y,   ... )"},{"path":"/reference/ggpLayerSpatAnnOutline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add outline of spatial annotations — ggpLayerSpatAnnOutline","text":"object object class SPATA2 , case S4 generics, objects classes method defined. tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. test Character value. One c(''. '', 'identical', 'not_identical', 'none'). Specifies input tags used select spatial annotations. See section Selection spatial annotations information. fill Character value NA. character, specifies color outline spatial annotation filled. line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. line_type Character. line type. One 'blank', 'solid', 'dashed', 'dotted', 'dotdash', 'longdash' 'twodash'. use_colors Logical value. TRUE, color aesthetic used display outline different color providing legend. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. inner Logical value. FALSE, outer borders annotation displayed. incl_edge Logical value. TRUE, function includes tissue edge (see identifyTissueOutline()) visualization removes parts outline transgress tissues edge. merge_edge Logical value. incl_edge = TRUE outline tissue edge used replace part annotation outline removed due crossing tissue edge. incr_vert Logical value. TRUE, number vertices polygon plotted increased linear interpolation. can lead smoother visualization also increased runtime. expand_outline Distance measure outline area expanded. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/ggpLayerSpatAnnOutline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add outline of spatial annotations — ggpLayerSpatAnnOutline","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerSpatAnnOutline.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add outline of spatial annotations — ggpLayerSpatAnnOutline","text":"Adds two additional layers set scales color- fill aesthetic plot. expand_outline works inner FALSE (spatial annotation contain inner borders).","code":""},{"path":[]},{"path":"/reference/ggpLayerSpatAnnOutline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add outline of spatial annotations — ggpLayerSpatAnnOutline","text":"","code":"library(SPATA2) library(patchwork)  object <- loadExampleObject(\"UKF275T\")  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    inner_borders = FALSE,    force1 = TRUE    )  # range of hypoxia annotation hr <- getSpatAnnRange(object, id = \"hypoxia_ann\")  hr_ggpL <- ggpLayerSpatAnnOutline(object, ids = \"hypoxia_ann\")  plotSurface(object, \"HM_HYPOXIA\") + hr_ggpL  p_rect <-  plotImage(object) +  hr_ggpL +  ggpLayerRect(object, xrange = hr$x, yrange = hr$y)  p_zoomed <-  plotImage(object) +  ggpLayerZoom(object, xrange = hr$x, yrange = hr$y)  p_rect + p_zoomed"},{"path":"/reference/ggpLayerSpatAnnPointer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add pointer towards spatial annotations — ggpLayerSpatAnnPointer","title":"Add pointer towards spatial annotations — ggpLayerSpatAnnPointer","text":"Adds segments , desired, labels surface plot point towards highlight position spatial annotations.","code":""},{"path":"/reference/ggpLayerSpatAnnPointer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add pointer towards spatial annotations — ggpLayerSpatAnnPointer","text":"","code":"ggpLayerSpatAnnPointer(   object,   ids = NULL,   tags = NULL,   test = \"any\",   color_by = NULL,   ptr_angles = 45,   ptr_labels = NULL,   ptr_lengths = \"250um\",   ptr_alpha = 0.9,   ptr_arrow = NULL,   ptr_color = \"black\",   ptr_size = 1,   text_alpha = 0.9,   text_color = \"black\",   text_dist = 0,   text_nudge_x = 0,   text_nudge_y = 0,   text_size = 4,   point_at = \"center\",   seed = NULL,   clrp = NULL,   clrp_adjust = NULL )"},{"path":"/reference/ggpLayerSpatAnnPointer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add pointer towards spatial annotations — ggpLayerSpatAnnPointer","text":"object object class SPATA2 , case S4 generics, objects classes method defined. tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. test Character value. One c(''. '', 'identical', 'not_identical', 'none'). Specifies input tags used select spatial annotations. See section Selection spatial annotations information. color_by Character value NULL. character, one 'id' 'label' colors pointers accordingly. ptr_angles, ptr_lengths Numeric value length 1 length equal number spatial annotations. Specifies angle segments points towards spatial annotation well length. ptr_lengths works within SPATA2 distance framework. See section Distance measures information. ptr_labels Specifies pointers labeled. NULL, default, spatial annotations labeled ID. character, specifies exact label spatial annotation length 1 length equal number spatial annotations. FALSE, text displayed. ptr_alpha Numeric value. Specifies transparency pointers. ptr_arrow NULL arrow displayed grid::arrow(). ptr_color Character value. Specifies color pointers color_by character. ptr_size Numeric value. Specifies size (thickness) pointers. text_dist Distance measure. Specifies distance text pointer. point_at Character value. 'center', pointer directed center spatial annotation. 'border', pointer points random point spatial annotation border - recommended spatial annotation big. seed Numeric value NULL. numeric, sets seed picking random point spatial annotation border point_at = 'border'. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group.","code":""},{"path":"/reference/ggpLayerSpatAnnPointer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add pointer towards spatial annotations — ggpLayerSpatAnnPointer","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerSpatAnnPointer.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Add pointer towards spatial annotations — ggpLayerSpatAnnPointer","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/ggpLayerSpatAnnRect.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a rectangular around an spatial annotation — ggpLayerSpatAnnRect","title":"Add a rectangular around an spatial annotation — ggpLayerSpatAnnRect","text":"Adds rectangular surface plot visualizes spatial extent cropped image section plotted plotImageAnnotations().","code":""},{"path":"/reference/ggpLayerSpatAnnRect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a rectangular around an spatial annotation — ggpLayerSpatAnnRect","text":"","code":"ggpLayerSpatAnnRect(object, ids, expand = \"25%\", ...)"},{"path":"/reference/ggpLayerSpatAnnRect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a rectangular around an spatial annotation — ggpLayerSpatAnnRect","text":"object object class SPATA2 , case S4 generics, objects classes method defined. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/ggpLayerSpatAnnRect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a rectangular around an spatial annotation — ggpLayerSpatAnnRect","text":"ggplot.","code":""},{"path":"/reference/ggpLayerSpatialTrajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Add spatial trajectories — ggpLayerSpatialTrajectories","title":"Add spatial trajectories — ggpLayerSpatialTrajectories","text":"Adds spatial trajectories form arrows surface plot.","code":""},{"path":"/reference/ggpLayerSpatialTrajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add spatial trajectories — ggpLayerSpatialTrajectories","text":"","code":"ggpLayerSpatialTrajectories(   object = \"object\",   ids,   arrow = ggplot2::arrow(length = ggplot2::unit(x = 0.125, \"inches\")),   ... )"},{"path":"/reference/ggpLayerSpatialTrajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add spatial trajectories — ggpLayerSpatialTrajectories","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector. IDs trajectories plotted. arrow list arguments given ggplot2::arrow(). Based trajectories plotted. ... Additional arguments given ggplot2::geom_segment().","code":""},{"path":"/reference/ggpLayerSpatialTrajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add spatial trajectories — ggpLayerSpatialTrajectories","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerThemeCoords.html","id":null,"dir":"Reference","previous_headings":"","what":"Add coordinates theme — ggpLayerThemeCoords","title":"Add coordinates theme — ggpLayerThemeCoords","text":"Adds theme plot displays coordinates tissue.","code":""},{"path":"/reference/ggpLayerThemeCoords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add coordinates theme — ggpLayerThemeCoords","text":"","code":"ggpLayerThemeCoords(unit = NULL)"},{"path":"/reference/ggpLayerThemeCoords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add coordinates theme — ggpLayerThemeCoords","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerThemeCoords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add coordinates theme — ggpLayerThemeCoords","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\")  plotSurface(object) + ggpLayerThemeCoords()"},{"path":"/reference/ggpLayerTissueOutline.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a hull outlining the tissue — ggpLayerTissueOutline","title":"Add a hull outlining the tissue — ggpLayerTissueOutline","text":"Adds hull outlines tissue.","code":""},{"path":"/reference/ggpLayerTissueOutline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a hull outlining the tissue — ggpLayerTissueOutline","text":"","code":"ggpLayerTissueOutline(object, ...)  # S4 method for class 'SPATA2' ggpLayerTissueOutline(   object,   method = \"obs\",   img_name = activeImage(object),   by_section = TRUE,   fragments = FALSE,   line_alpha = 0.9,   line_color = \"black\",   line_size = 1,   line_type = \"solid\",   transform = TRUE,   smooth_with = \"none\",   scale_fct = 1,   outline_fct = c(1.75, 2.75),   expand_outline = recSgsRes(object, \"px\")/1.25,   ... )  # S4 method for class 'SpatialData' ggpLayerTissueOutline(   object,   method = NULL,   img_name = activeImage(object),   by_section = TRUE,   fragments = FALSE,   line_alpha = 0.9,   line_color = \"black\",   line_size = 1,   line_type = \"solid\",   transform = TRUE,   smooth_with = \"none\",   scale_fct = 1,   outline_fct = c(1.75, 2.75),   expand_outline = 0,   ... )  # S4 method for class 'HistoImage' ggpLayerTissueOutline(   object,   by_section = TRUE,   fragments = FALSE,   line_alpha = 0.9,   line_color = \"black\",   line_size = 1,   line_type = \"solid\",   transform = TRUE,   smooth_with = \"chaikin\",   scale_fct = 1,   expand_outline = 0,   ... )  # S4 method for class 'data.frame' ggpLayerTissueOutline(   object,   method = \"coords\",   by_section = TRUE,   line_alpha = 0.9,   line_color = \"black\",   line_size = 1,   line_type = \"solid\",   outline_fct = c(1.75, 2.75),   use_scattermore = FALSE,   expand_outline = 0,   ... )"},{"path":"/reference/ggpLayerTissueOutline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a hull outlining the tissue — ggpLayerTissueOutline","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional arguments given smoothr::smooth() depending input smooth_with. method Character value. Either 'obs' 'image'. Decides whether tissue outline used based observations image used. method = NULL, function checks first HistoImage registered. , outline image specified img_name returned. images, outline computed identifyTissueOutline(..., method = 'obs') used. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). by_section Logical value. TRUE, outline used acknowledges potential multiple tissue sections. FALSE, outline used simply outlines everything one single polygon. line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. line_type Character. line type. One 'blank', 'solid', 'dashed', 'dotted', 'dotdash', 'longdash' 'twodash'. transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object. smooth_with Character vaule. Sets method smooth tissue outline polygon. One c(\"chaikin\", \"densify\", \"ksmooth\", \"spline\", \"none\"). 'none', smoothing conducted. expand_outline Distance measure expand outline. Must provided pixel units! use_scattermore Logical value. TRUE, data points plotted scattermore::geom_scattermore() allows quick plotting several thousand data points. number data points plotted bigger 10.000 used anyway. incl_edge Logical. TRUE, include tissue section outline. See examples getTissueOutlineDf().","code":""},{"path":"/reference/ggpLayerTissueOutline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a hull outlining the tissue — ggpLayerTissueOutline","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":[]},{"path":"/reference/ggpLayerTissueOutline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a hull outlining the tissue — ggpLayerTissueOutline","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- loadExampleObject(\"UKF275T\")  plotSurface(object, color_by = \"HM_HYPOXIA\", pt_clrsp = \"Reds 3\") +  ggpLayerTissueOutline(object)  # alternative plotSurface(object, color_by = \"HM_HYPOXIA\", pt_clrsp = \"Reds 3\", outline = TRUE)"},{"path":"/reference/ggpLayerTrajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — ggpLayerTrajectories","title":"Deprecated — ggpLayerTrajectories","text":"Deprecated favor ggpLayerSpatialTrajectories().","code":""},{"path":"/reference/ggpLayerTrajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — ggpLayerTrajectories","text":"","code":"ggpLayerTrajectories(...)"},{"path":"/reference/ggpLayerTrajectoryFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the screening frame of a spatial trajectory — ggpLayerTrajectoryFrame","title":"Add the screening frame of a spatial trajectory — ggpLayerTrajectoryFrame","text":"function generates ggplot layer representing trajectory frame based specified trajectory segment spata2 object. creates rectangular frame around trajectory segment, customizable appearance.","code":""},{"path":"/reference/ggpLayerTrajectoryFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the screening frame of a spatial trajectory — ggpLayerTrajectoryFrame","text":"","code":"ggpLayerTrajectoryFrame(   object,   id,   width = getTrajectoryLength(object, id),   rect_alpha = 1,   rect_color = \"black\",   rect_linesize = 1,   rect_linetype = \"solid\" )"},{"path":"/reference/ggpLayerTrajectoryFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the screening frame of a spatial trajectory — ggpLayerTrajectoryFrame","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id identifier trajectory segment within spata2 object. width Distance measure. width trajectory frame, defaulting trajectory length. rect_alpha alpha transparency level rectangle's border rect_color color rectangle's border. rect_linesize size line used rectangle's border. rect_linetype type line used rectangle's border.","code":""},{"path":"/reference/ggpLayerTrajectoryFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the screening frame of a spatial trajectory — ggpLayerTrajectoryFrame","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerZoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Set plot limits manually — ggpLayerZoom","title":"Set plot limits manually — ggpLayerZoom","text":"Sets limits x- y-axis ggplot based manual input.","code":""},{"path":"/reference/ggpLayerZoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set plot limits manually — ggpLayerZoom","text":"","code":"ggpLayerZoom(   object = NULL,   xrange = NULL,   yrange = NULL,   expand_x = c(0, 0),   expand_y = c(0, 0),   round = 2,   n_breaks = 5,   unit = NULL )"},{"path":"/reference/ggpLayerZoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set plot limits manually — ggpLayerZoom","text":"object object class SPATA2 , case S4 generics, objects classes method defined. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. expand_x, expand_y Given expand ggplot2::scale_x/y_continuous(). unit Character value. Overwrites unit x- y-axis. (NULL, defalt, unit respective axis taken xrange yrange input.)","code":""},{"path":"/reference/ggpLayerZoom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set plot limits manually — ggpLayerZoom","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggpLayerZoom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set plot limits manually — ggpLayerZoom","text":"","code":"library(SPATA2) library(patchwork)  object <- loadExampleObject(\"UKF275T\")  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    inner_borders = FALSE,    force1 = TRUE    )  # range of hypoxia annotation hr <- getSpatAnnRange(object, id = \"hypoxia_ann\")  hr_ggpL <- ggpLayerSpatAnnOutline(object, ids = \"hypoxia_ann\")  plotSurface(object, \"HM_HYPOXIA\") + hr_ggpL  p_rect <-  plotImage(object) +  hr_ggpL +  ggpLayerRect(object, xrange = hr$x, yrange = hr$y)  p_zoomed <-  plotImage(object) +  ggpLayerZoom(object, xrange = hr$x, yrange = hr$y)  p_rect + p_zoomed"},{"path":"/reference/ggpLayer_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"ggpLayer — ggpLayer_dummy","title":"ggpLayer — ggpLayer_dummy","text":"ggpLayer","code":""},{"path":"/reference/ggpLayer_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggpLayer — ggpLayer_dummy","text":"","code":"ggpLayer_dummy()"},{"path":"/reference/ggpLayer_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggpLayer — ggpLayer_dummy","text":"ggpLayer*()-functions return lists ggproto objects can added ggplots via + operator. cases supposed added plots created plotSurface*() family.","code":""},{"path":"/reference/ggplot_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot — ggplot_dummy","title":"ggplot — ggplot_dummy","text":"ggplot","code":""},{"path":"/reference/ggplot_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot — ggplot_dummy","text":"","code":"ggplot_dummy()"},{"path":"/reference/ggplot_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot — ggplot_dummy","text":"ggplot.","code":""},{"path":"/reference/ggplot_family.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot_family — ggplot_family","title":"ggplot_family — ggplot_family","text":"ggplot_family","code":""},{"path":"/reference/ggplot_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot_family — ggplot_family","text":"","code":"ggplot_family()"},{"path":"/reference/ggplot_family.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot_family — ggplot_family","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/hlpr_vector_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform vector projection — hlpr_vector_projection","title":"Perform vector projection — hlpr_vector_projection","text":"Helper function trajectory-analysis use within dplyr::mutate(). Performs vector-projection spatial position local coordinates system arrange barcodes fall trajectory square according trajectory direction.","code":""},{"path":"/reference/hlpr_vector_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform vector projection — hlpr_vector_projection","text":"","code":"hlpr_vector_projection(lcs, x_coordinate, y_coordinate)"},{"path":"/reference/hlpr_vector_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform vector projection — hlpr_vector_projection","text":"lcs data.frame specifying local coordinates system variables x, y, xend, yend observations local length axis local width axis. x_coordinate x-coordinate y_coordinate y-coordinate","code":""},{"path":"/reference/hlpr_vector_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform vector projection — hlpr_vector_projection","text":"projected length.","code":""},{"path":"/reference/idSA.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick access to IDs — idSA","title":"Quick access to IDs — idSA","text":"Handy functions access ID spatial annotation spatial trajectory exist one object. Mostly used define default dependent functions. Return error one IDs found.","code":""},{"path":"/reference/idSA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick access to IDs — idSA","text":"","code":"idSA(object, verbose = NULL)  idST(object, verbose = NULL)"},{"path":"/reference/idSA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick access to IDs — idSA","text":"object object class SPATA2 , case S4 generics, objects classes method defined. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/idSA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick access to IDs — idSA","text":"Character value.","code":""},{"path":"/reference/identifyBackgroundColor.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies the background color — identifyBackgroundColor","title":"Identifies the background color — identifyBackgroundColor","text":"Identifies background color based results identifyPixelContent() averaging color values pixels identified background.","code":""},{"path":"/reference/identifyBackgroundColor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies the background color — identifyBackgroundColor","text":"","code":"identifyBackgroundColor(object, ...)  # S4 method for class 'SPATA2' identifyBackgroundColor(   object,   img_name = activeImage(object),   verbose = NULL,   ... )  # S4 method for class 'SpatialData' identifyBackgroundColor(   object,   img_name = activeImage(object),   verbose = TRUE,   ... )  # S4 method for class 'HistoImage' identifyBackgroundColor(object, verbose = TRUE, ...)"},{"path":"/reference/identifyBackgroundColor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies the background color — identifyBackgroundColor","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/identifyPixelContent.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify pixel content — identifyPixelContent","title":"Identify pixel content — identifyPixelContent","text":"Determines type content displayed pixel image, categorizing tissue tissue segments fragments, artifacts, background.","code":""},{"path":"/reference/identifyPixelContent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify pixel content — identifyPixelContent","text":"","code":"identifyPixelContent(object, ...)  # S4 method for class 'SPATA2' identifyPixelContent(   object,   img_name = activeImage(object),   percentile = 0,   compactness_factor = 10,   superpixel = 600,   eps = 0.005,   minPts = 0.005,   frgmt_threshold = c(0.001, 0.05),   verbose = TRUE )  # S4 method for class 'SpatialData' identifyPixelContent(   object,   img_name = activeImage(object),   percentile = 0,   compactness_factor = 10,   superpixel = 1000,   eps = 0.005,   minPts = 0.005,   frgmt_threshold = c(0.001, 0.05),   verbose = TRUE )  # S4 method for class 'HistoImage' identifyPixelContent(   object,   percentile = 0,   compactness_factor = 10,   superpixel = 1000,   eps = 0.005,   minPts = 0.005,   frgmt_threshold = c(0.001, 0.05),   verbose = TRUE )  # S4 method for class 'Image' identifyPixelContent(   object,   percentile = 0,   compactness_factor = 10,   superpixel = 1000,   frgmt_threshold = c(0.001, 0.05),   eps = 0.005,   minPts = 0.005,   verbose = TRUE,   ... )"},{"path":"/reference/identifyPixelContent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify pixel content — identifyPixelContent","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). percentile Numeric value 0 100 (inclusive) specifying percentile threshold background color determination. bigger 0, determines top percentile colors identify background based frequency appear image. can improve identifying tissue pixels images edge tissue background continuous rather sharp thus difficult identify using computational approaches. follows hypothesis background consists many pixels equal color tissue consists pixels heterogenous colors. Values 0-100 valid. Usually values 0.5-2.5 work well. Test resuls plotPixelContent(). compactness_factor Numeric value controlling compactness superpixels. Given argument $spixel_segmentation() function. superpixel Numeric value specifying number superpixels compute. Given argument $spixel_segmentation() function. Increased values can improve output increase runtime. eps Numeric value specifying value eps parameter used dbscan::dbscan() applied tissue pixels. value less 1, calculated percentage width height image, depending larger. value greater equal 1, taken absolute value. minPts Numeric value specifying value minPts parameter used dbscan::dbscan() applied tissue pixels identified potential tissue. value less 1, calculated percentage width height image, depending larger. value greater equal 1, taken absolute value. frgmt_threshold Numeric vector length 2 specifying range number pixels identified non-background-object image must considered tissue fragment. Objects lower number pixels minimum threshold considered artifacts, objects higher number pixels maximum threshold considered tissue sections. threshold value less 1, calculated percentage total number pixels image. threshold value greater equal 1, taken absolute value. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/identifyPixelContent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify pixel content — identifyPixelContent","text":"method class Image returns data.frame following variables. pixel: character. Pixel index. width: numeric. Pixel position horizontal axis image. height: numeric. Pixel position vertical axis image. clusterK2: character. Either 'background' 'tissue'. colTiss# : numeric. Numeric variables correspond color dimensions image mask based clustering clusterK2 conducted. clusterDBSCAN: character. Cluster results dbscan::dbscan() removal background pixels. clusterDBSCAN_size:numeric. Size dbscan cluster. content: character. identified content pixel. Methods S4-classes serving containers return input object results stored corresponding slots.","code":""},{"path":"/reference/identifyPixelContent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify pixel content — identifyPixelContent","text":"percentile 0, background_white() function processes image identifying frequently occurring colors setting RGB values 1, effectively turning white (assuming image grayscale, 1 representing white). percentile parameter allows adjust sensitivity background removal, allowing precise isolation main subject.","code":""},{"path":"/reference/identifyPixelContent.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Identify pixel content — identifyPixelContent","text":"img_name specifies multiple images, function iterates . NULL active image picked.","code":""},{"path":[]},{"path":"/reference/identifySpatialOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify spatial outliers — identifySpatialOutliers","title":"Identify spatial outliers — identifySpatialOutliers","text":"Labels data points spatial outliers depending certain criteria new meta variable called sp_outlier. See details . Requires results identifyTissueOutline().","code":""},{"path":"/reference/identifySpatialOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify spatial outliers — identifySpatialOutliers","text":"","code":"identifySpatialOutliers(   object,   method = \"obs\",   img_name = activeImage(object),   buffer = 0,   eps = recDbscanEps(object),   minPts = recDbscanMinPts(object),   min_section = nObs(object) * 0.05,   test = \"any\",   verbose = NULL )"},{"path":"/reference/identifySpatialOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify spatial outliers — identifySpatialOutliers","text":"object object class SPATA2 , case S4 generics, objects classes method defined. method Character vector. method(s) use. combination 'obs' /'image'. Defaults 'obs'. See details . img_name Character value. name image whose tissue outline used method contains 'image'. buffer Numeric value. Expands tissue outline include observations lie edge outline mistakenly removed. eps, minPts Given corresponding arguments dbscan::dbscan() method contains 'obs'. min_section Numeric value. minimum number observations spatial cluster must contain whole cluster identified contiguous tissue section. test Character value. required method = c('obs', 'image'). '', spots labeled outliers least one method identifies outliers. '', spots labeled outliers methods identify outliers. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/identifySpatialOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify spatial outliers — identifySpatialOutliers","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/identifySpatialOutliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify spatial outliers — identifySpatialOutliers","text":"case method = 'obs', results identifyTissueOutline(object, method = 'obs') directly transferred new meta feature sp_outlier, declares whether observation spatial outlier . case method = 'image', image based tissue outline identifyTissueOutline() function used. function created polygons outline tissue tissue sections identified image. data point, function checks polygon falls within assigns corresponding group. observation fall within tissue polygons, considered spatial outlier. method = c('obs', 'image'), results methods used Whether data point considered spatial outlier depends test argument: test = '': data point considered spatial outlier either two tests classifies outlier. test = '': data point considered spatial outlier tests classify outlier. results can visualized using plotSurface(object, color_by = \"sp_outlier\"). case bad results function can run changing parameters results simply overwritten.","code":""},{"path":[]},{"path":"/reference/identifyTissueOutline.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify tissue outline — identifyTissueOutline","title":"Identify tissue outline — identifyTissueOutline","text":"Identifies stores spatial boundaries tissue section(s). assigns observations respective section. Note information boundaries tissue crucial many SPATA2 intern function. information missing SPATA2 object. See details .","code":""},{"path":"/reference/identifyTissueOutline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify tissue outline — identifyTissueOutline","text":"","code":"identifyTissueOutline(object, ...)  # S4 method for class 'SPATA2' identifyTissueOutline(   object,   method = \"obs\",   minPts = recDbscanMinPts(object),   eps = recDbscanEps(object),   img_name = activeImage(object),   concavity = 2,   verbose = NULL,   ... )  # S4 method for class 'SpatialData' identifyTissueOutline(   object,   method,   img_name = activeImage(object),   eps = recDbscanEps(object),   minPts = recDbscanMinPts(object),   concavity = 2,   verbose = TRUE,   ... )  # S4 method for class 'HistoImage' identifyTissueOutline(object, verbose = TRUE)"},{"path":"/reference/identifyTissueOutline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify tissue outline — identifyTissueOutline","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. method Character value. Defines origin based outline computed. Either 'image' 'obs'. minPts Numeric value. Given dbscan::dbscan(). Determines number minimum points required eps neighborhood core points (including point ) eps Distance measure. Given eps dbscan::dbscan(). Determines size (radius) epsilon neighborhood. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). concavity Numeric value. Given argument concavity concaveman::concaveman(). Determines relative measure concavity. 1 results relatively detailed shape, Infinity results convex hull. can use values lower 1, can produce pretty crazy shapes. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/identifyTissueOutline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify tissue outline — identifyTissueOutline","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/identifyTissueOutline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify tissue outline — identifyTissueOutline","text":"case method = obs, DBSCAN applied categorize data points object based spatial proximity, grouping close enough deemed part single contiguous tissue section. Data points isolated situated significant distance others identified spatial outliers.resulting classifications saved tissue_section variable within object's meta data.frame. Afterwards, polygons created outline groups data points represent tissue section. See example 'method = obs'. case method = image object must contain image named indicated input argument img_name. Furthermore, results identifyPixelContent() image required. img_name specifies multiple images, function iterates . Since results methods stored different locations, object can contain results methods. extracting tissue outline via getTissueOutlineDf() ggpLayerTissueOutline() use argument method decide results use. See example 'method = image'.","code":""},{"path":"/reference/identifyTissueOutline.html","id":"dbscan-input","dir":"Reference","previous_headings":"","what":"DBSCAN input","title":"Identify tissue outline — identifyTissueOutline","text":"objects derived Visium platform fixed center center distance, recommend set eps = getCCD(object, unit = \"px\")*1.25 minPts = 3 worked well us. objects derived platforms rely fixed grid data points (MERFISH, SlideSeq, etc.) recommend average minimal distance data points times 10 eps minPts = 25, might require manual adjustments. function defaults recommendations using recDbscanEps() recDbscanMinPts() default. can, course, overwritten manually user specifying parameters otherwise! Note can visualize results plotSurface(object, color_by = 'tissue_section') repeat process different parameter input overwrite last results untill satisfied output.","code":""},{"path":[]},{"path":"/reference/identifyTissueOutline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify tissue outline — identifyTissueOutline","text":"","code":"library(SPATA2) library(ggplot2)  data(\"example_data\")  obj1 <- loadExampleObject(\"UKF275T\")  obj2 <- loadExampleObject(\"LMU_MCI\")  # example: 'method = obs' obj1 <- identifyTissueOutline(obj1, method = \"obs\")  obj2 <- identifyTissueOutline(obj2, method = \"obs\")  ## visualize the categorization of spots with the new meta variable 'tissue_section'  plotSurface(obj1, color_by = \"tissue_section\") # one single contiguous section  plotSurface(obj2, color_by = \"tissue_section\") # two contiguous sections  ## visualize the outline  df1_obs <- getTissueOutlineDf(obj1)  ggplot(df1_obs, mapping = aes(x, y, group = section)) +  geom_polygon(fill = NA, color = \"black\")  df2_obs <- getTissueOutlineDf(obj2)  ggplot(df2_obs, mapping = aes(x, y, group = section)) +  geom_polygon(fill = NA, color = \"black\")  # example 'method = image'  activeImage(obj1)  obj1 <- identifyPixelContent(obj1, img_name = \"image1\") # image processing needed obj1 <- identifyTissueOutline(obj1, method = \"image\", img_name = \"image1\")  plotImage(obj1, outline = T)  df1_img <- getTissueOutlineDf(obj1, method = \"image\")  ggplot(mapping = aes(x, y, group = section)) +  geom_polygon(fill = NA, color = \"black\", data = df1_obs) +  geom_polygon(fill = NA, color = \"red\", data = df1_img)"},{"path":"/reference/identifyTissueSections.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — identifyTissueSections","title":"Deprecated — identifyTissueSections","text":"Deprecated favor identifyTissueOutline().","code":""},{"path":"/reference/identifyTissueSections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — identifyTissueSections","text":"","code":"identifyTissueSections(object, ...)"},{"path":"/reference/identifyVariableMolecules.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify molecules of high variability — identifyVariableMolecules","title":"Identify molecules of high variability — identifyVariableMolecules","text":"Identfies molecules outliers mean-variability plot proposed Seurat.","code":""},{"path":"/reference/identifyVariableMolecules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify molecules of high variability — identifyVariableMolecules","text":"","code":"identifyVariableMolecules(   object,   n_mol = 2500,   method = \"vst\",   assay_name = activeAssay(object),   ... )"},{"path":"/reference/identifyVariableMolecules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify molecules of high variability — identifyVariableMolecules","text":"object object class SPATA2 , case S4 generics, objects classes method defined. n_mol Numeric value. number molecules identified. Given nfeatures Seurat::FindVariableFeatures(). method Character value. identification method. One 'vst', 'mean.var.plot' 'dispersion'. Given selection.method Seurat::FindVariableFeatures(). assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/identifyVariableMolecules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify molecules of high variability — identifyVariableMolecules","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/identifyVariableMolecules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify molecules of high variability — identifyVariableMolecules","text":"","code":"library(SPATA2) data(\"example_data\")  object <- loadExampleObject(\"UKF269T\")  # default is method = 'vst' object <- identifyVariableMolecules(object, n_mol = 2000)  # multiple results can be stored simultaneously object <- identifyVariableMolecules(object, n_mol = 3000, method = \"mean.var.plot\")  # fails, cause results for two methods are stored and method = NULL vars_vst <- getVariableMolecules(object)  vars_vst <- getVariableMoleculs(object, method = \"vst\") # works  # should work vars_mvp <- getVariableMolecules(object, method = \"mean.var.plot\")  length(vars_vst) length(vars_mvp)"},{"path":"/reference/identify_obs_in_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify observations inside a polygon — identify_obs_in_polygon","title":"Identify observations inside a polygon — identify_obs_in_polygon","text":"function determines whether points (observations) given data frame located inside specified polygon.","code":""},{"path":"/reference/identify_obs_in_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify observations inside a polygon — identify_obs_in_polygon","text":"","code":"identify_obs_in_polygon(   coords_df,   polygon_df,   strictly,   opt = \"keep\",   cvars = c(\"x\", \"y\") )  identify_obs_in_spat_ann(   coords_df,   outline_df,   strictly,   opt = \"keep\",   cvars = c(\"x\", \"y\") )"},{"path":"/reference/identify_obs_in_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify observations inside a polygon — identify_obs_in_polygon","text":"coords_df data frame containing coordinates observations. Must contain columns specified cvars. polygon_df data frame containing coordinates polygon's vertices. Must contain columns corresponding specified cvars. strictly logical value indicating whether consider points strictly inside polygon (TRUE) include points border (FALSE). opt character string specifying operation perform identified points. Options \"keep\" (default), \"remove\", string create new column coords_df indicating whether point inside (TRUE) outside (FALSE) polygon. cvars character vector specifying variable names coords_df polygon_df represent x y coordinates. Defaults c(\"x\", \"y\"). outline_df data.frame returned getSpatAnnOutlineDf().","code":""},{"path":"/reference/identify_obs_in_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify observations inside a polygon — identify_obs_in_polygon","text":"modified version coords_df based operation specified opt.","code":""},{"path":"/reference/identify_obs_in_polygon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify observations inside a polygon — identify_obs_in_polygon","text":"function can configured strictly consider points within polygon include points border. Additionally, function allows either keeping removing identified points, marking based position relative polygon.","code":""},{"path":"/reference/identify_obs_in_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify observations inside a polygon — identify_obs_in_polygon","text":"","code":"# Example data frames coords_df <- data.frame(x = c(1, 2, 3), y = c(3, 2, 1)) polygon_df <- data.frame(x = c(1, 2, 3, 1), y = c(1, 2, 3, 1))  # Identify and keep points inside the polygon inside_points <- identify_obs_in_polygon(coords_df, polygon_df, strictly = TRUE)  # Identify and remove points inside the polygon outside_points <- identify_obs_in_polygon(coords_df, polygon_df, strictly = TRUE, opt = \"remove\")"},{"path":"/reference/image_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"image_dummy — image_dummy","title":"image_dummy — image_dummy","text":"image_dummy","code":""},{"path":"/reference/image_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"image_dummy — image_dummy","text":"","code":"image_dummy(image)"},{"path":"/reference/image_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"image_dummy — image_dummy","text":"image image class Image displayed background obtained getImage().","code":""},{"path":"/reference/include_tissue_outline.html","id":null,"dir":"Reference","previous_headings":"","what":"Include spatial extent of tissue sections in analysis — include_tissue_outline","title":"Include spatial extent of tissue sections in analysis — include_tissue_outline","text":"Ensures section specific processing observations relation identifying outline tissue section (-sections case multiple tissue sections per sample). Additionally, allows relate observations spatial position extent image annotations.","code":""},{"path":"/reference/include_tissue_outline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include spatial extent of tissue sections in analysis — include_tissue_outline","text":"","code":"include_tissue_outline(   input_df,   outline_df = NULL,   coords_df = NULL,   spat_ann_center = NULL,   sas_circles = FALSE,   ccd = NULL,   outside_rm = TRUE,   inside_if = c(1, 2),   opt = \"concaveman\",   buffer = 0,   ... )"},{"path":"/reference/include_tissue_outline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include spatial extent of tissue sections in analysis — include_tissue_outline","text":"input_df data.frame contains least numeric x y variables. outline_df data.frame contains ouline/hull tissue sections. Must contain variables x, y section. sas_circles Logical value. TRUE, input data.frame assumed contain polygon coordinates expanded spatial annotation encircling sorts filtering lie inside tissue section order plot via ggplot2::geom_path(). opt Either 'concaveman'' 'chull'. Defines function tissue outline computed. buffer Distance measure buffer tissue outline data.frame. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/include_tissue_outline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Include spatial extent of tissue sections in analysis — include_tissue_outline","text":"Filtered input data.frame.","code":""},{"path":"/reference/increase_n_data_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase the Number of Data Points in a Coordinate Data Frame — increase_n_data_points","title":"Increase the Number of Data Points in a Coordinate Data Frame — increase_n_data_points","text":"function artificially increases number data points given coordinate data frame. generates additional points adding random noise existing coordinates, ensuring new points stay within original range data.","code":""},{"path":"/reference/increase_n_data_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase the Number of Data Points in a Coordinate Data Frame — increase_n_data_points","text":"","code":"increase_n_data_points(coords_df, fct = 10, cvars = c(\"x\", \"y\"))"},{"path":"/reference/increase_n_data_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase the Number of Data Points in a Coordinate Data Frame — increase_n_data_points","text":"coords_df data frame containing original coordinates. Must include columns specified cvars. fct numeric factor indicating many times number data points increased. function round number nearest integer. cvars character vector specifying column names coordinates coords_df.","code":""},{"path":"/reference/increase_n_data_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase the Number of Data Points in a Coordinate Data Frame — increase_n_data_points","text":"data frame increased number data points.","code":""},{"path":"/reference/increase_polygon_vertices.html","id":null,"dir":"Reference","previous_headings":"","what":"Increase the Number of Vertices in a Polygon — increase_polygon_vertices","title":"Increase the Number of Vertices in a Polygon — increase_polygon_vertices","text":"function interpolates additional vertices polygon data frame increase vertex density. ensures polygon remains closed new vertices evenly distributed.","code":""},{"path":"/reference/increase_polygon_vertices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increase the Number of Vertices in a Polygon — increase_polygon_vertices","text":"","code":"increase_polygon_vertices(polygon_df, avg_dist, skip = FALSE)"},{"path":"/reference/increase_polygon_vertices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increase the Number of Vertices in a Polygon — increase_polygon_vertices","text":"polygon_df data frame representing polygon, columns x y coordinates. avg_dist average distance vertices interpolation. skip Logical; TRUE, function skips interpolation process returns original polygon.","code":""},{"path":"/reference/increase_polygon_vertices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increase the Number of Vertices in a Polygon — increase_polygon_vertices","text":"data frame representing polygon increased vertex density.","code":""},{"path":"/reference/initiateSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate an object of class SPATA2 — initiateSpataObject","title":"Initiate an object of class SPATA2 — initiateSpataObject","text":"Initiates SPATA2 object using basic inputs: coordinates data.frame count matrix.","code":""},{"path":"/reference/initiateSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate an object of class SPATA2 — initiateSpataObject","text":"","code":"initiateSpataObject(   sample_name,   count_mtr,   modality,   coords_df,   img = NULL,   img_dir = NULL,   img_name = \"image1\",   scale_factors = list(),   spatial_method = \"Undefined\",   verbose = TRUE,   ... )"},{"path":"/reference/initiateSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate an object of class SPATA2 — initiateSpataObject","text":"sample_name Character value. name identify SPATA2 object. count_mtr count matrix. Column names correspond barcodes observations. Rownames correspond names molecular features (genes, proteins, metabolites etc.). modality Character value. best describe molecular type count matrix. Additionally, defines assay name, created count matrix referred via argument assay_name. Read molecular modalities SPATA2 . coords_df Data.frame variable called barcodes well x_orig y_orig x y. img reference image. See details information include image. img_dir Character value NULL. character, file directory reference image. See details information include file directory. img_name Character value. name reference image. required least img img_dir specified. scale_factors list scale_factors set slot @scale_factors HistoImage object (SPATA2 object initiated image, see details) slot @scale_factors SpatialData object, image provided. spatial_method Character value object class SpatialMethod. character, one validSpatialMethods(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions. meta, misc List meta- miscellaneous data SpatialData object.","code":""},{"path":"/reference/initiateSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiate an object of class SPATA2 — initiateSpataObject","text":"object class SPATA2.","code":""},{"path":"/reference/initiateSpataObject.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Initiate an object of class SPATA2 — initiateSpataObject","text":"contrast initiateSpataObjectVisium() initiateSpataObjectMERFISH(), SPATA2 object function output contain tissue outline yet! Run identifyTissueOutline() choice parameters afterwards.","code":""},{"path":"/reference/initiateSpataObject.html","id":"initiating-the-object-with-an-image","dir":"Reference","previous_headings":"","what":"Initiating the object with an image","title":"Initiate an object of class SPATA2 — initiateSpataObject","text":"SPATA2 allows register multiple images one object via file directories. facilitates exchanging analysis must loaded altogether SPATA2 object, saves storage space. default, function takes directory image want initiate SPATA2 object , loads image saves directory, . image exist file device global environment can use img directly. way, image directory stored. scenario, want register additional image use analysis, can unload image initiated object lost since directory retrieve want use . Therefore, recommend initiate object file directory image image global environment. Lastly, img img_dir specified image saved directory .png file image registered normally.","code":""},{"path":"/reference/initiateSpataObject.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"Initiate an object of class SPATA2 — initiateSpataObject","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":"/reference/initiateSpataObjectMERFISH.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate an object of class SPATA2 from platform MERFISH — initiateSpataObjectMERFISH","title":"Initiate an object of class SPATA2 from platform MERFISH — initiateSpataObjectMERFISH","text":"function initiates SPATA2 object data generated using MERFISH platform.","code":""},{"path":"/reference/initiateSpataObjectMERFISH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate an object of class SPATA2 from platform MERFISH — initiateSpataObjectMERFISH","text":"","code":"initiateSpataObjectMERFISH(   sample_name,   directory_merfish,   read_transcripts = FALSE,   file_counts = NULL,   file_cell_meta = NULL,   file_transcripts = NULL,   verbose = TRUE )"},{"path":"/reference/initiateSpataObjectMERFISH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate an object of class SPATA2 from platform MERFISH — initiateSpataObjectMERFISH","text":"directory_merfish Character value. Directory MERFISH folder contain .csv file called ~/...cell_by_gene.csv .csv file called ~/...cell_metadata.csv, ~ directory folder. Deviating filenames can specified using arguments file_counts file_cell_meta, respectively. read_transcripts Logical value. TRUE, actual transcript positions read via  ~/...detected_transcript.csv input file_transcripts, specified. Note argument defaults FALSE since reading file transcripts can increase object size several GB. file_counts Character value NULL. character, specifies filename .csv file contains gene counts cell. Use filename deviates default. file_cell_meta Character value NULL. character, specifies filename .csv file contains cell meta data, particular, spatial location via variables center_x center_y. file_transcripts Character value NULL. character, specifies filename .csv file contains molecule transcript positions, particular, spatial location via variables x y. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/initiateSpataObjectMERFISH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiate an object of class SPATA2 from platform MERFISH — initiateSpataObjectMERFISH","text":"SPATA2 object MERFISH platform. Default pt_size set 0.4 might need adjustment.","code":""},{"path":"/reference/initiateSpataObjectMERFISH.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initiate an object of class SPATA2 from platform MERFISH — initiateSpataObjectMERFISH","text":"MERFISH works micron space. coordinates cellular centroids provided unit um. Therefore pixel scale factor must computed set work SI units.","code":""},{"path":[]},{"path":"/reference/initiateSpataObjectSlideSeqV1.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate an object of class SPATA2 from platform SlideSeq — initiateSpataObjectSlideSeqV1","title":"Initiate an object of class SPATA2 from platform SlideSeq — initiateSpataObjectSlideSeqV1","text":"Wrapper function around necessary content create SPATA2 object standardized output SlideSeq platform.","code":""},{"path":"/reference/initiateSpataObjectSlideSeqV1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate an object of class SPATA2 from platform SlideSeq — initiateSpataObjectSlideSeqV1","text":"","code":"initiateSpataObjectSlideSeqV1(   sample_name,   directory_slide_seq,   file_counts = NULL,   file_barcodes = NULL,   file_genes = NULL,   file_coords = NULL,   verbose = TRUE )"},{"path":"/reference/initiateSpataObjectSlideSeqV1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate an object of class SPATA2 from platform SlideSeq — initiateSpataObjectSlideSeqV1","text":"sample_name Character value. name identify SPATA2 object. directory_slide_seq Character value. Directory SlideSeq folder contains count matrix bead locations. file_counts Character value NULL. character, specifies filename count matrix. NULL, SlideSeq folder skimmed file ending .mtx. file_barcodes Character value NULL. character, specifies filename barcode names count matrix contain column names. NULL, SlideSeq folder skimmed file ending barcodes.tsv. file_genes Character value NULL. character, specifies filename gene names count matrix contain row names. NULL, SlideSeq folder skimmed file ending genes.tsv. file_coords Character value NULL. character, specifies filename coordinates. NULL, SlideSeq folder skimmed file ending MatchedBeadLocation.csv. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/initiateSpataObjectSlideSeqV1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiate an object of class SPATA2 from platform SlideSeq — initiateSpataObjectSlideSeqV1","text":"object class SPATA2.","code":""},{"path":"/reference/initiateSpataObjectVisium.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate an object of class SPATA2 from platform Visium — initiateSpataObjectVisium","title":"Initiate an object of class SPATA2 from platform Visium — initiateSpataObjectVisium","text":"function initiates SPATA2 object data generated using 10x Genomics Visium platform.","code":""},{"path":"/reference/initiateSpataObjectVisium.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate an object of class SPATA2 from platform Visium — initiateSpataObjectVisium","text":"","code":"initiateSpataObjectVisium(   sample_name,   directory_visium,   mtr = \"filtered\",   img_active = \"lowres\",   img_ref = \"lowres\",   verbose = TRUE )"},{"path":"/reference/initiateSpataObjectVisium.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate an object of class SPATA2 from platform Visium — initiateSpataObjectVisium","text":"sample_name Character. name sample. directory_visium Character. directory containing Visium output files. mtr Character. Specifies matrix use, either \"filtered\" \"raw\". Default \"filtered\". img_active Character. active image use, either \"lowres\" \"hires\". Default \"lowres\". img_ref Character. reference image use, either \"lowres\" \"hires\". Default \"lowres\". verbose Logical. TRUE, progress messages printed. Default TRUE.","code":""},{"path":"/reference/initiateSpataObjectVisium.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiate an object of class SPATA2 from platform Visium — initiateSpataObjectVisium","text":"SPATA2 object containing data Visium platform. precise, depending set used create raw data either spatial method: VisiumSmall: Visium data set capture area 6.5mm x 6.5mm. VisiumLarge: Visium data set capture area 11mm x 11m. case, output object class SPATA2.","code":""},{"path":"/reference/initiateSpataObjectVisium.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initiate an object of class SPATA2 from platform Visium — initiateSpataObjectVisium","text":"function requires directory containing output files 10x Genomics Visium experiment specified argument directory_visum. directory (denoted ~) must include following files sub-directories: ~/filtered_feature_bc_matrix.h5 raw_feature_bc_matrix.h5: HDF5 file containing filtered raw feature-barcode matrix, respectively. ~/spatial/tissue_lowres_image.png spatial/tissue_hires_image.png: low-resolution high-resolution tissue image. ~/spatial/scalefactors_json.json: JSON file containing scale factors images. ~/spatial/tissue_positions_list.csv /~spatial/tissue_positions.csv: CSV file containing tissue positions spatial coordinates. function check files process create SPATA2 object. reads count matrix, loads spatial data, initializes SPATA2 object necessary metadata settings.","code":""},{"path":"/reference/initiateSpataObjectVisium.html","id":"gene-and-protein-expression","dir":"Reference","previous_headings":"","what":"Gene and Protein Expression","title":"Initiate an object of class SPATA2 from platform Visium — initiateSpataObjectVisium","text":"function also supports reading coupled gene expression protein expression data. expects input directory contain HDF5 file includes separate datasets gene expression protein expression. function uses Seurat::Read10X_h5() unique.features = TRUE, read data , result list, assumes contains gene protein expression. scenario handled follows: Gene expression data extracted \"Gene Expression\" dataset HDF5 file stored assay named gene. Protein expression data extracted \"Antibody Capture\" dataset HDF5 file protein. function ensures molecule names overlap normalizing names: Gene expression molecule names remain upper case (human data) title case (mouse data). Protein expression molecule names forced lowercase. naming convention prevents overlap ensures molecule type uniquely identified resulting SPATA2 object, contains two assays. One molecular modality gene molecular modality protein.","code":""},{"path":"/reference/initiateSpataObjectVisiumHD.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate an object of class SPATA2 from platform VisiumHD — initiateSpataObjectVisiumHD","title":"Initiate an object of class SPATA2 from platform VisiumHD — initiateSpataObjectVisiumHD","text":"function initiates SPATA2 object data generated using 10x Genomics VisiumHD platform.","code":""},{"path":"/reference/initiateSpataObjectVisiumHD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate an object of class SPATA2 from platform VisiumHD — initiateSpataObjectVisiumHD","text":"","code":"initiateSpataObjectVisiumHD(   sample_name,   directory_visium,   square_res = \"16um\",   mtr = \"filtered\",   img_active = \"lowres\",   img_ref = \"lowres\",   verbose = TRUE )"},{"path":"/reference/initiateSpataObjectVisiumHD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate an object of class SPATA2 from platform VisiumHD — initiateSpataObjectVisiumHD","text":"sample_name Character. name sample. directory_visium Character. directory containing Visium output files. square_res Character. square resolution load data. One *c('16um', '8um', '2um'). See details . mtr Character. Specifies matrix use, either \"filtered\" \"raw\". Default \"filtered\". img_active Character. active image use, either \"lowres\" \"hires\". Default \"lowres\". img_ref Character. reference image use, either \"lowres\" \"hires\". Default \"lowres\". verbose Logical. TRUE, progress messages printed. Default TRUE.","code":""},{"path":"/reference/initiateSpataObjectVisiumHD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiate an object of class SPATA2 from platform VisiumHD — initiateSpataObjectVisiumHD","text":"SPATA2 object VisiumHD platform.","code":""},{"path":"/reference/initiateSpataObjectVisiumHD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initiate an object of class SPATA2 from platform VisiumHD — initiateSpataObjectVisiumHD","text":"function requires directory containing output files 10x Genomics VisiumHD experiment specified argument directory_visium. directory (denoted ~)  must include following sub-directories: ~/binned_outputs: folder following subdirectories. ~/binned_outputs/square_002um: folder containing data square_res = '2um'. ~/binned_outputs/square_008um: folder containing data square_res = '8um'. ~/binned_outputs/square_016um: folder containing data square_res = '16um'. Depending input square_res corresponding subfolder required. subfolder contain following files sub-directories: ~/binned_outputs/<square_res>/filtered_feature_bc_matrix.h5 ~/raw_feature_bc_matrix.h5: HDF5 file containing filtered raw feature-barcode matrix, respectively. ~/binned_outputs/<square_res>/spatial/tissue_lowres_image.png ~/spatial/tissue_hires_image.png: low-resolution high-resolution tissue image. ~/binned_outputs/<square_res>/spatial/scalefactors_json.json: JSON file containing scale factors images. ~/binned_outputs/<square_res>/spatial/tissue_position.parquet .parguet file containing tissue positions spatial coordinates. function check files process create SPATA2 object. reads count matrix, loads spatial data, initializes SPATA2 object necessary metadata settings.","code":""},{"path":"/reference/initiateSpataObjectVisiumHD.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Initiate an object of class SPATA2 from platform VisiumHD — initiateSpataObjectVisiumHD","text":"crucial install package arrow way arrow::read_parquet() works. several ways. Installing package install.packages('arrow', repos = 'https://apache.r-universe.dev') worked reliably us.","code":""},{"path":"/reference/initiateSpataObjectXenium.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate an object of class SPATA2 from platform Xenium — initiateSpataObjectXenium","title":"Initiate an object of class SPATA2 from platform Xenium — initiateSpataObjectXenium","text":"function initiates SPATA2 object data generated using 10x Genomics Xenium platform.","code":""},{"path":"/reference/initiateSpataObjectXenium.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate an object of class SPATA2 from platform Xenium — initiateSpataObjectXenium","text":"","code":"initiateSpataObjectXenium(sample_name, directory_xenium, verbose = TRUE)"},{"path":"/reference/initiateSpataObjectXenium.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate an object of class SPATA2 from platform Xenium — initiateSpataObjectXenium","text":"sample_name Character value. name identify SPATA2 object. directory_xenium Character value. Directory Xenium output folder. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/initiateSpataObjectXenium.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiate an object of class SPATA2 from platform Xenium — initiateSpataObjectXenium","text":"SPATA2 object Xenium platform. Default pt_size  set 0.1 might need adjustment.","code":""},{"path":"/reference/initiateSpataObjectXenium.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initiate an object of class SPATA2 from platform Xenium — initiateSpataObjectXenium","text":"function requires directory containing output files 10x Genomics Xenium experiment specified argument directory_xenium. directory (denoted ~) must include following sub-directories: ~/cell_feature_matrix: folder contains following files: ~/cell_feature_matrix/barcodes.tsv.gz: cell barcodes. ~/cell_feature_matrix/features.tsv.gz: feature (gene) names. ~/cell_feature_matrix/matrix.mtx.gz: raw count data matrix. ~/cells.csv.gz: cellular positions. Xenium works micron space. coordinates cellular centroids provided unit um. Therefore pixel scale factor must computed set work SI units.","code":""},{"path":[]},{"path":"/reference/interpolate_points_along_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate points along path — interpolate_points_along_path","title":"Interpolate points along path — interpolate_points_along_path","text":"Ensures equally distributed number points along curved trajectory.","code":""},{"path":"/reference/interpolate_points_along_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate points along path — interpolate_points_along_path","text":"","code":"interpolate_points_along_path(data, max_distance = 1)"},{"path":"/reference/interpolate_points_along_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate points along path — interpolate_points_along_path","text":"data Data.frame x- y-coordinates.","code":""},{"path":"/reference/intersect_polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Test polygon intersection — intersect_polygons","title":"Test polygon intersection — intersect_polygons","text":"Tests vertices polygon lay inside polygon b.","code":""},{"path":"/reference/intersect_polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test polygon intersection — intersect_polygons","text":"","code":"intersect_polygons(a, b, strictly = FALSE)"},{"path":"/reference/intersect_polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test polygon intersection — intersect_polygons","text":", b Matrix data.frame columns x y. strictly Logical value. TRUE, barcode spots strictly interior polygon returned. FALSE, barcodes relative interior polygon border vertices returned, .","code":""},{"path":"/reference/intersect_polygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test polygon intersection — intersect_polygons","text":"Logical vector length number rows .","code":""},{"path":"/reference/isDirVisium.html","id":null,"dir":"Reference","previous_headings":"","what":"Directory tests — isDirVisium","title":"Directory tests — isDirVisium","text":"Tests input directories meet requirements specific functions specifically written reading data standardized output folders.","code":""},{"path":"/reference/isDirVisium.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Directory tests — isDirVisium","text":"","code":"isDirVisium(dir, error = FALSE)"},{"path":"/reference/isDirVisium.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Directory tests — isDirVisium","text":"dir Character value. directory check.","code":""},{"path":"/reference/isDirVisium.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Directory tests — isDirVisium","text":"Logical value.","code":""},{"path":"/reference/is_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Test area input — is_area","title":"Test area input — is_area","text":"Tests input refers area using international area units according SPATA2 area framework. is_area(): Tests input can interpreted area is_area_si(): Tests input can interpreted area SI units. is_area_pixel(): Tests input can interpreted area pixel.","code":""},{"path":"/reference/is_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test area input — is_area","text":"","code":"is_area(input, error = FALSE)  is_area_pixel(input, error = FALSE)  is_area_si(input, error = FALSE)"},{"path":"/reference/is_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test area input — is_area","text":"input Character vector. Elements must match requirements SPATA2 area framework. See details information.","code":""},{"path":"/reference/is_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test area input — is_area","text":"Logical vector length input /error verbose TRUE.","code":""},{"path":"/reference/is_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test area input — is_area","text":"","code":"library(SPATA2)  ##### provide input as character vectors  # will return TRUE  is_area(input = c('2mm2', '4mm2'))  # will return FALSE  is_area(input = c('200 m2')) # space between value and unit  # will return TRUE  area_values <- c(200, 400)  area_values <- as_area(area_values, unit = \"mm2\")  is_area(input = area_values)  ###### use units package  library(units)  area_values2 <- set_units(x = c(200, 300), value = \"mm2\")  is_area(area_values2)"},{"path":"/reference/is_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Test distance input — is_dist","title":"Test distance input — is_dist","text":"Tests input refers distance valid input. is_dist(): Tests input can interpreted distance. is_dist_si(): Tests input can interpreted distance SI units. is_dist_pixel(): Tests input can interpreted distance pixel.","code":""},{"path":"/reference/is_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test distance input — is_dist","text":"","code":"is_dist(input, error = FALSE)  is_dist_si(input, error = FALSE)  is_dist_pixel(input, error = FALSE)"},{"path":"/reference/is_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test distance input — is_dist","text":"input Character numeric vector. Elements must match requirements SPATA2 distance framework. See details information. error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/is_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test distance input — is_dist","text":"Logical vector length input. error TRUE one elements input values can interpreted approapriately functions throws error.","code":""},{"path":"/reference/is_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test distance input — is_dist","text":"Several functions SPATA2 arguments take distance input. specifically refer distance unit must specified. three ways create valid input arguments. 1. pixel: two valid input options specify distance pixel: numeric: Single numeric values, e.g. arg_input <- c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input <- c('2px', '3.554px', '69px', '100.67px') Note: unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant. 2. According Systeme international d`unites (SI): Specifying distances SI units e.g. arg_input <- c('2mm', '4mm') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfLengthSI(). 3. vectors class unit: Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input <- units::set_unit(x = c(2,4), value = 'mm') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":"/reference/is_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test distance input — is_dist","text":"","code":"##### use numeric or character vectors  library(SPATA2)  # will return TRUE is_dist(input = 200) # -> 200 pixel is_dist(input = \"20px\") # > 20 pixel  is_dist(input = \"40.5mm\") # -> 40.5 mm  # will return FALSE is_dist(input = \"30.5 mm\") # -> empty space between 30.5 and mm  is_dist(input = \".4mm\") # -> must start with a number  ##### use units package  library(units)  dist_input <- set_units(x = c(2, 3, 4.4), value = \"mm\")  is_dist(dist_input)"},{"path":"/reference/is_inside_plg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Point is Inside a Polygon — is_inside_plg","title":"Check if a Point is Inside a Polygon — is_inside_plg","text":"function determines whether given point lies inside polygon defined vertices.","code":""},{"path":"/reference/is_inside_plg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Point is Inside a Polygon — is_inside_plg","text":"","code":"is_inside_plg(point, polygon_df, strictly = TRUE)"},{"path":"/reference/is_inside_plg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Point is Inside a Polygon — is_inside_plg","text":"point numeric vector two elements representing x (first value) y (second value) coordinates point. polygon_df data frame columns 'x' 'y', containing vertices polygon. strictly Logical, indicating whether point must strictly lie inside polygon (TRUE) might part polygon boundary (FALSE).","code":""},{"path":"/reference/is_inside_plg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Point is Inside a Polygon — is_inside_plg","text":"Logical value indicating whether point inside polygon.","code":""},{"path":[]},{"path":"/reference/is_inside_plg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Point is Inside a Polygon — is_inside_plg","text":"","code":"point <- c(2, 3) polygon_df <- data.frame(x = c(1, 3, 3, 1), y = c(1, 1, 4, 4)) is_inside_plg(point, polygon_df) # Returns TRUE"},{"path":"/reference/is_outlier.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for outliers in a numeric vector — is_outlier","title":"Check for outliers in a numeric vector — is_outlier","text":"function identifies outliers numeric vector x.","code":""},{"path":"/reference/is_outlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for outliers in a numeric vector — is_outlier","text":"","code":"is_outlier(x, ...)"},{"path":"/reference/is_outlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for outliers in a numeric vector — is_outlier","text":"x numeric vector outliers need identified. ... Additional arguments passed boxplot.stats.","code":""},{"path":"/reference/is_outlier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for outliers in a numeric vector — is_outlier","text":"logical vector length x, TRUE indicates corresponding element x outlier.","code":""},{"path":"/reference/is_outlier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for outliers in a numeric vector — is_outlier","text":"element considered outlier falls outside range defined boxplot.stats grDevices package. function useful quickly flagging filtering outliers dataset.","code":""},{"path":"/reference/is_outlier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for outliers in a numeric vector — is_outlier","text":"","code":"# Example vector data <- c(-10, 1, 2, 3, 4, 5, 100)  # Check for outliers is_outlier(data)  # Using the function to filter out outliers data[!is_outlier(data)]"},{"path":"/reference/is_unit_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Test unit of area input — is_unit_area","title":"Test unit of area input — is_unit_area","text":"Tests input valid unit area.","code":""},{"path":"/reference/is_unit_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test unit of area input — is_unit_area","text":"","code":"is_unit_area(input, error = FALSE)"},{"path":"/reference/is_unit_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test unit of area input — is_unit_area","text":"input Character vector area units. Obtain valid input options validUnitsOfArea(). error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/is_unit_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test unit of area input — is_unit_area","text":"Logical value /error argument error TRUE.","code":""},{"path":"/reference/is_unit_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Test unit of length input — is_unit_dist","title":"Test unit of length input — is_unit_dist","text":"Tests input valid unit distance.","code":""},{"path":"/reference/is_unit_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test unit of length input — is_unit_dist","text":"","code":"is_unit_dist(input, error = FALSE)"},{"path":"/reference/is_unit_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test unit of length input — is_unit_dist","text":"input Character vector distance units. Obtain valid input options validUnitsOfLength(). error Logical. TRUE input invalid function throws error.","code":""},{"path":"/reference/is_unit_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test unit of length input — is_unit_dist","text":"Logical value /error argument error TRUE.","code":""},{"path":"/reference/joinWith.html","id":null,"dir":"Reference","previous_headings":"","what":"Join barcodes with additional variables — joinWith","title":"Join barcodes with additional variables — joinWith","text":"functions deprecated favor joinWithVariables().","code":""},{"path":"/reference/joinWith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join barcodes with additional variables — joinWith","text":"","code":"joinWith(   object,   spata_df = getCoordsDf(object),   features = NULL,   gene_sets = NULL,   method_gs = NULL,   genes = NULL,   smooth = FALSE,   smooth_span = NULL,   verbose = NULL,   normalize = NULL,   ... )  joinWithFeatures(   object,   spata_df = getCoordsDf(object),   features,   smooth = FALSE,   smooth_span = 0.02,   verbose = TRUE,   ... )  joinWithGenes(   object,   spata_df = getCoordsDf(object),   genes,   average_genes = FALSE,   uniform_genes = \"keep\",   smooth = FALSE,   smooth_span = 0.02,   normalize = TRUE,   verbose = NULL,   ... )  joinWithGeneSets(   object,   spata_df = getCoordsDf(object),   gene_sets,   method_gs = \"mean\",   smooth = FALSE,   smooth_span = 0.02,   normalize = TRUE,   verbose = TRUE,   ignore = T,   ... )"},{"path":"/reference/joinWithPca.html","id":null,"dir":"Reference","previous_headings":"","what":"Join barcodes with additional variables — joinWithPca","title":"Join barcodes with additional variables — joinWithPca","text":"functions add dimensional reduction results form additional variables provided spata data.frame.","code":""},{"path":"/reference/joinWithPca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join barcodes with additional variables — joinWithPca","text":"","code":"joinWithPca(object, spata_df, n_pcs = NULL, verbose = NULL, force = FALSE, ...)  joinWithTsne(object, spata_df, verbose = NULL, force = FALSE, ...)  joinWithUmap(object, spata_df, verbose = NULL, force = FALSE, ...)"},{"path":"/reference/joinWithPca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join barcodes with additional variables — joinWithPca","text":"object object class SPATA2 , case S4 generics, objects classes method defined. n_pcs Numeric value NULL. numeric, specifies number principal components use. NULL, principal components used (computed runPCA()). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) force Logical. relevant spata data.frame provided already contains variables added function. set TRUE, variables added anyway. ... Addtional arguments given dplyr::left_join().","code":""},{"path":"/reference/joinWithPca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join barcodes with additional variables — joinWithPca","text":"input data.frame additional dimensional reduction variables","code":""},{"path":"/reference/joinWithVariables.html","id":null,"dir":"Reference","previous_headings":"","what":"Join data with variables — joinWithVariables","title":"Join data with variables — joinWithVariables","text":"Joins data.frames SPATA2 objects observations additional variables, molecular data, signatures, meta features.","code":""},{"path":"/reference/joinWithVariables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join data with variables — joinWithVariables","text":"","code":"joinWithVariables(   object,   variables,   spata_df = getCoordsDf(object),   smooth = FALSE,   smooth_span = NULL,   normalize = NULL,   uniform_variables = \"keep\",   verbose = NULL,   ... )"},{"path":"/reference/joinWithVariables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join data with variables — joinWithVariables","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. names data variables interest. smooth Logical. TRUE, loess fit used smooth values. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). normalize Logical. set TRUE values scaled 0-1. Hint: Variables uniformly expressed can scaled discarded. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/joinWithVariables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join data with variables — joinWithVariables","text":"data frame containing spatial data joined additional variables.","code":""},{"path":"/reference/joinWithVariables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join data with variables — joinWithVariables","text":"function joins spatial data spata_df additional variables specified 'variables'. retrieves molecular data, signatures, meta features provided object adds spatial data frame. Additionally, can perform smoothing normalization numeric variables desired. 'uniform' parameter determines variables uniform values handled.","code":""},{"path":"/reference/joinWithVariables.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Join data with variables — joinWithVariables","text":"function replaces old joinWith(), joinWithGenes(), joinWithFeatures() functions!","code":""},{"path":[]},{"path":"/reference/joinWithVariables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join data with variables — joinWithVariables","text":"","code":"# Join spatial data with molecular and/or meta features  library(SPATA2)  object <- loadExampleObject(\"UKFT275\", process = TRUE, meta = TRUE)  coords_df <- getCoordsDf(object)  joined_data <- joinWithVariables(object, spata_df = coords_df, variables = c(\"GFAP\", \"bayes_space\", \"HM_HYXPOXIA\"))"},{"path":"/reference/lastImageAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — lastImageAnnotation","title":"Deprecated — lastImageAnnotation","text":"Deprecated favor lastSpatialAnnotation().","code":""},{"path":"/reference/lastImageAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — lastImageAnnotation","text":"","code":"lastImageAnnotation(...)"},{"path":"/reference/legendBottom.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 basic manipulation — labsNone","title":"ggplot2 basic manipulation — labsNone","text":"ggplot2 basic manipulation","code":""},{"path":"/reference/legendBottom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 basic manipulation — labsNone","text":"","code":"labsNone()  legendBottom(...)  legendColor(...)  legendLeft(...)  legendNone(...)  legendRight(...)  legendTop(...)"},{"path":"/reference/legendBottom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 basic manipulation — labsNone","text":"","code":"library(SPATA2) library(tidyverse)  object <- loadExampleObject(\"UKF275T\")  plotSurface(object, color_by = \"HM_HYPOXIA\") plotSurface(object, color_by = \"HM_HYPOXIA\") + legendBottom()"},{"path":"/reference/loadExampleObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Load example SPATA2 object — loadExampleObject","title":"Load example SPATA2 object — loadExampleObject","text":"Loads diet example SPATA2 object.","code":""},{"path":"/reference/loadExampleObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load example SPATA2 object — loadExampleObject","text":"","code":"loadExampleObject(sample_name, process = FALSE, meta = FALSE, verbose = TRUE)"},{"path":"/reference/loadExampleObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load example SPATA2 object — loadExampleObject","text":"sample_name Character value. One c(\"UKF275T\", \"UKF313T\", \"UKF269T\", \"LMU_MIC\"). process Logical value. TRUE, object processed via: identifyTissueOutline() identifySpatialOutliers() removeSpatialOutliers() normalizeCounts() computeMetaFeatures() using default setup (precise order). meta Logical value. TRUE, adds meta features like clustering, histological segmentation copy number variation results meta data.frame computed prior reducing object example version. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/loadExampleObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load example SPATA2 object — loadExampleObject","text":"reduced diet object class SPATA2.","code":""},{"path":"/reference/loadExampleObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load example SPATA2 object — loadExampleObject","text":"example objects contain subsetted count matrix. want work complete data sets, use downloadSpataObject().","code":""},{"path":"/reference/loadExampleObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load example SPATA2 object — loadExampleObject","text":"","code":"library(SPATA2)  # simply load object <- loadExampleObject(sample_name = \"UKF269T\")  # load, process and add some meta data object_proc <- loadExampleObject(sample_name = \"UKF269T\", process = TRUE, meta = TRUE)  getMatrixNames(object) getMatrixNames(object_proc)  plotSurface(object, color_by = \"histology\") # fails plotSurface(object_proc, color_by = \"histology\")"},{"path":"/reference/loadImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Load image slot content — loadImage","title":"Load image slot content — loadImage","text":"Reads image based directory stored slot @dir HistoImage object. makes image availble quicker increases size object.","code":""},{"path":"/reference/loadImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load image slot content — loadImage","text":"","code":"loadImage(object, ...)  # S4 method for class 'SPATA2' loadImage(object, img_name, ...)  # S4 method for class 'SpatialData' loadImage(object, img_name, verbose = TRUE)  # S4 method for class 'HistoImage' loadImage(object, verbose = TRUE)  loadImages(object, ...)  # S4 method for class 'SPATA2' loadImages(object, verbose = TRUE, force = FALSE)  # S4 method for class 'SpatialData' loadImages(object, verbose = TRUE, force = FALSE)"},{"path":"/reference/loadImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load image slot content — loadImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) force Logical value. TRUE, image loaded even image slot empty.","code":""},{"path":"/reference/loadImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load image slot content — loadImage","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/loadImageLowres.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — loadImageDefault","title":"Deprecated — loadImageDefault","text":"Deprecated favor activateImage() /loadImage().","code":""},{"path":"/reference/loadImageLowres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — loadImageDefault","text":"","code":"loadImageDefault(object, ...)  loadImageHighres(object, ...)  loadImageLowres(object, ...)"},{"path":"/reference/loadSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Load SPATA2 object — loadSpataObject","title":"Load SPATA2 object — loadSpataObject","text":"Reads .RDS file, checks object class SPATA2 checks whether must updated.","code":""},{"path":"/reference/loadSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load SPATA2 object — loadSpataObject","text":"","code":"loadSpataObject(directory_spata, verbose = TRUE, update = TRUE)"},{"path":"/reference/loadSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load SPATA2 object — loadSpataObject","text":"directory_spata Character value. directory load `SPATA2' object. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) update Logical value. TRUE, calls updateSpataObject() loading check whether loaded object date.","code":""},{"path":"/reference/loadSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load SPATA2 object — loadSpataObject","text":"loaded object. class SPATA2, warning printed.","code":""},{"path":"/reference/loadSpataObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load SPATA2 object — loadSpataObject","text":"loadSpataObject() wrapper around base::readRDS() load SPATA2 object well.","code":""},{"path":"/reference/makeContent.resizingSegmentsGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Make content for segments grob — makeContent.resizingSegmentsGrob","title":"Make content for segments grob — makeContent.resizingSegmentsGrob","text":"Used conjunction GeomSegmentFixed","code":""},{"path":"/reference/makeContent.resizingSegmentsGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make content for segments grob — makeContent.resizingSegmentsGrob","text":"","code":"# S3 method for class 'resizingSegmentsGrob' makeContent(x)"},{"path":"/reference/makeContent.resizingTextGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Make content for text grob — makeContent.resizingTextGrob","title":"Make content for text grob — makeContent.resizingTextGrob","text":"Used conjunction GeomTextFixed","code":""},{"path":"/reference/makeContent.resizingTextGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make content for text grob — makeContent.resizingTextGrob","text":"","code":"# S3 method for class 'resizingTextGrob' makeContent(x)"},{"path":"/reference/make_orthogonal_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute an orthogonal vector — make_orthogonal_segment","title":"Compute an orthogonal vector — make_orthogonal_segment","text":"Computes start enpoint vector crosses input vector orthogonally start point, end point midth section.","code":""},{"path":"/reference/make_orthogonal_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute an orthogonal vector — make_orthogonal_segment","text":"","code":"make_orthogonal_segment(sp, ep, out_length, inters_loc = \"m\")"},{"path":"/reference/make_orthogonal_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute an orthogonal vector — make_orthogonal_segment","text":"sp, ep Numeric vectors length two. Correspond start- end point geometrical vector compute orthogonal vector. out_length length/magnitude orthogonal vector. inters_loc location intersection. Valid input options 'sp', 'ep' 'm'.","code":""},{"path":"/reference/make_orthogonal_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute an orthogonal vector — make_orthogonal_segment","text":"List two slots named sp ep vectors length two correspond start- end point crossing vector.","code":""},{"path":"/reference/make_orthogonal_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Make orthogonal segments — make_orthogonal_segments","title":"Make orthogonal segments — make_orthogonal_segments","text":"Make orthogonal segments","code":""},{"path":"/reference/make_orthogonal_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make orthogonal segments — make_orthogonal_segments","text":"","code":"make_orthogonal_segments(sp, ep, binwidth, out_length)"},{"path":"/reference/make_orthogonal_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make orthogonal segments — make_orthogonal_segments","text":"sp, ep Numeric vectors x- y-coordinates correspond start- end point vector orthogonal segment computed. out_length length orthogonal vector.","code":""},{"path":"/reference/make_orthogonal_segments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make orthogonal segments — make_orthogonal_segments","text":"list two slots named sp ep. contain numeric vectors length two correspond start end point orthogonal vector.","code":""},{"path":"/reference/mapSpatialAnnotationTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial annotation and barcode intersection — mapSpatialAnnotationTags","title":"Spatial annotation and barcode intersection — mapSpatialAnnotationTags","text":"Creates data.frame maps tags spatial annotations barcodes covered spatial extent respective spatial annotation.","code":""},{"path":"/reference/mapSpatialAnnotationTags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial annotation and barcode intersection — mapSpatialAnnotationTags","text":"","code":"mapSpatialAnnotationTags(   object,   ids = NULL,   tags = NULL,   merge = TRUE,   merge_name = \"spat_annotations\",   merge_missing = \"none\",   merge_sep = \"_\",   merge_drop = FALSE )"},{"path":"/reference/mapSpatialAnnotationTags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial annotation and barcode intersection — mapSpatialAnnotationTags","text":"object object class SPATA2 , case S4 generics, objects classes method defined. tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. merge Logical value. TRUE, results merged single variable. merge_name Character value. name merged variable. merge_missing Character value. value assigned barcodes fall extent image annotation. merge_sep Character value. string image annotation tags separated merged. merge_drop Logical value. TRUE merge TRUE, image-annotation- tag-variables dropped.","code":""},{"path":"/reference/mapSpatialAnnotationTags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial annotation and barcode intersection — mapSpatialAnnotationTags","text":"data.frame.","code":""},{"path":"/reference/map_to_tissue_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Map observations to tissue sections — map_to_tissue_section","title":"Map observations to tissue sections — map_to_tissue_section","text":"Maps observations data frame respective tissue sections based results identifyTissueOutline().","code":""},{"path":"/reference/map_to_tissue_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map observations to tissue sections — map_to_tissue_section","text":"","code":"map_to_tissue_section(object, coords_df, cvars = c(\"x\", \"y\"))"},{"path":"/reference/map_to_tissue_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map observations to tissue sections — map_to_tissue_section","text":"object object class SPATA2 , case S4 generics, objects classes method defined. coords_df data frame containing coordinates mapped. Must contain columns specified cvars column named variables. cvars character vector length 2 specifying column names x y coordinates coords_df. Default c(\"x\", \"y\").","code":""},{"path":"/reference/map_to_tissue_section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map observations to tissue sections — map_to_tissue_section","text":"data frame input coordinates additional column tissue_section indicating mapped tissue section.","code":""},{"path":"/reference/matrix_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"matrix_dummy — matrix_dummy","title":"matrix_dummy — matrix_dummy","text":"matrix_dummy","code":""},{"path":"/reference/matrix_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"matrix_dummy — matrix_dummy","text":"","code":"matrix_dummy()"},{"path":"/reference/matrix_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"matrix_dummy — matrix_dummy","text":"numeric matrix rownames corresponding molecule names column names corresponding barcodes.","code":""},{"path":"/reference/mergeGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Lump groups together — mergeGroups","title":"Lump groups together — mergeGroups","text":"Merge groups one group.","code":""},{"path":"/reference/mergeGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lump groups together — mergeGroups","text":"","code":"mergeGroups(object, grouping, grouping_new, merge, new_group, verbose = NULL)"},{"path":"/reference/mergeGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lump groups together — mergeGroups","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable whose groups supposed merged. grouping_new Character value NULL. character, results stored new variable named accordingly. NULL, grouping variable updated - DEA results discarded. merge Character vector NULL. character, specifies groups merged together. new_group Character value. new group name merge. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/mergeGroups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lump groups together — mergeGroups","text":"one argument keep merge must specified. grouping_new NULL DEA results specified grouping variable resetted.","code":""},{"path":"/reference/mergeGroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lump groups together — mergeGroups","text":"","code":"library(SPATA2) library(tidyverse)  object <- loadExampleObject(\"UKF275T\", meta = TRUE)  object <-   mergeGroups(     object = object,     grouping = \"bayes_space\",     grouping_new = \"bayes_space_merged\",     merge = c(\"B1\", \"B6\"),     new_group = \"B1B6_merged\"    )  plotSurface(object, color_by = \"bayes_space\") plotSurface(object, color_by = \"bayes_space_merged\")"},{"path":"/reference/mergeSpatialAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge spatial annotations — mergeSpatialAnnotations","title":"Merge spatial annotations — mergeSpatialAnnotations","text":"Merges spatial extent two spatial annotations one.","code":""},{"path":"/reference/mergeSpatialAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge spatial annotations — mergeSpatialAnnotations","text":"","code":"mergeSpatialAnnotations(   object,   ids,   id,   tags = NULL,   tags_expand = TRUE,   concavity = 2,   remove_old = FALSE,   overwrite = FALSE )"},{"path":"/reference/mergeSpatialAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge spatial annotations — mergeSpatialAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector ids spatial annotations merge. id Character value. ID new spatial annotation results merging. tags character vector tags spatial annotation. tags_expand Logical value. TRUE, tags image annotations tagged expanded unsuffixed id, grouping, group 'createGroupAnnotations'. concavity Numeric value. Given argument concavity concaveman::concaveman(). Determines relative measure concavity. 1 results relatively detailed shape, Infinity results convex hull. can use values lower 1, can produce pretty crazy shapes. remove_old Logical value. TRUE, old spatial annotations denoted ids removed object. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/mergeSpatialAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge spatial annotations — mergeSpatialAnnotations","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/mergeSpatialAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge spatial annotations — mergeSpatialAnnotations","text":"","code":"library(SPATA2) library(tidyverse)  object <- loadExampleObject(\"UKF275T\")  r <- getSpatAnnRange(object, id = \"img_ann_1\")  plotImage(object) +  ggpLayerSpatAnnOutline(object, ids = c(\"vessel2\", \"img_ann_1\"), use_colors = T)  plotImage(object, xrange = r$x, yrange = r$y) +  ggpLayerSpatAnnOutline(object, ids = c(\"vessel2\", \"img_ann_1\"), use_colors = T)  object <-  mergeSpatialAnnotations(    object = object,    ids = c(\"img_ann_1\", \"vessel2\"),    id = \"new_img_ann\",    )  plotSpatialAnnotations(object)"},{"path":"/reference/mergeTissueSections.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge tissue sections — mergeTissueSections","title":"Merge tissue sections — mergeTissueSections","text":"Merges tissue sections mistakenly identified two non-contiguous sections.","code":""},{"path":"/reference/mergeTissueSections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge tissue sections — mergeTissueSections","text":"","code":"mergeTissueSections(object, sections, section_new, verbose = NULL)"},{"path":"/reference/mergeTissueSections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge tissue sections — mergeTissueSections","text":"object object class SPATA2 , case S4 generics, objects classes method defined. sections Character vector. names tissue sections merged. section_new Character value. name resulting tissue section. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/mergeTissueSections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge tissue sections — mergeTissueSections","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/mergeWithTissueOutline.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate tissue outline in spatial annotation — mergeWithTissueOutline","title":"Integrate tissue outline in spatial annotation — mergeWithTissueOutline","text":"Ensures outline spatial annotation transgresses outline tissue.","code":""},{"path":"/reference/mergeWithTissueOutline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate tissue outline in spatial annotation — mergeWithTissueOutline","text":"","code":"mergeWithTissueOutline(object, id, new_id)"},{"path":"/reference/mergeWithTissueOutline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate tissue outline in spatial annotation — mergeWithTissueOutline","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value. ID spatial annotation whose outline supposed cut tissue edge. new_id character, gives resulting spatial annotation new id. NULL, spatial annotation overwritten!","code":""},{"path":"/reference/mergeWithTissueOutline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate tissue outline in spatial annotation — mergeWithTissueOutline","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/mergeWithTissueOutline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrate tissue outline in spatial annotation — mergeWithTissueOutline","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- loadExampleObject(\"UKF313T\")  if(!containsTissueOutline(object)){    object <- identifyTissueOutline(object)  }  # image annotation which transgresses the tissue edge plotSpatialAnnotations(object, ids = c(\"necrotic_edge2_transgr\"))  object <-   mergeWithTissueOutline(object, id = \"necrotic_edge2_transgr\", new_id = \"necrotic_edge2\", overwrite = TRUE)  plotSpatialAnnotations(object, ids = c(\"necrotic_edge2_transgr\", \"necrotic_edge2\"))"},{"path":"/reference/merge_intersecting_polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge polygons — merge_intersecting_polygons","title":"Merge polygons — merge_intersecting_polygons","text":"function merges intersecting polygons inserting sub-polygon main polygon intersect.","code":""},{"path":"/reference/merge_intersecting_polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge polygons — merge_intersecting_polygons","text":"","code":"merge_intersecting_polygons(   main_poly,   sub_poly,   cvars = c(\"x_orig\", \"y_orig\"),   col_rm = TRUE )"},{"path":"/reference/merge_intersecting_polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge polygons — merge_intersecting_polygons","text":"main_poly main polygon(s) data frame. sub_poly sub-polygon(s) data frame. cvars character vector specifying column names x y coordinates main sub-polygons. col_rm Logical indicating whether remove additional columns added processing.","code":""},{"path":"/reference/merge_intersecting_polygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge polygons — merge_intersecting_polygons","text":"data frame representing merged polygons.","code":""},{"path":"/reference/merge_intersecting_polygons.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge polygons — merge_intersecting_polygons","text":"function iterates vertex sub-polygon checks lies within main polygon using sp::point..polygon.identifies segments main polygon sub-polygon intersects inserts sub-polygon accordingly. Finally, adjusts direction sub-polygon necessary removes extra columns specified.","code":""},{"path":"/reference/merge_intersecting_polygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge polygons — merge_intersecting_polygons","text":"","code":"main_poly <- data.frame(x = c(0, 1, 1, 0), y = c(0, 0, 1, 1)) sub_poly <- data.frame(x = c(0.5, 1.5, 1.5, 0.5), y = c(0.5, 0.5, 1.5, 1.5)) merge_intersecting_polygon(main_poly, sub_poly)"},{"path":"/reference/method_hclust.html","id":null,"dir":"Reference","previous_headings":"","what":"method_hclust — method_hclust","title":"method_hclust — method_hclust","text":"method_hclust","code":""},{"path":"/reference/method_hclust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"method_hclust — method_hclust","text":"","code":"method_hclust(method_hclust)"},{"path":"/reference/method_hclust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"method_hclust — method_hclust","text":"method_hclust Character value. Denotes method used generate clustering results want extract.","code":""},{"path":"/reference/model_ascending.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate model-based ascending or descending sequence — model_ascending","title":"Generate model-based ascending or descending sequence — model_ascending","text":"Generates sequence values based model ascending descending patterns.","code":""},{"path":"/reference/model_ascending.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate model-based ascending or descending sequence — model_ascending","text":"","code":"model_ascending(input, incl = 1, ro = range(input))  model_descending(input, dcl = 1, ro = range(input))"},{"path":"/reference/model_ascending.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate model-based ascending or descending sequence — model_ascending","text":"input numeric vector serving basis generating sequence. incl, dcl optional parameter controlling inclination/declination sequence. ro numeric vector length 2 specifying range values output sequence. Default range input vector.","code":""},{"path":"/reference/model_ascending.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate model-based ascending or descending sequence — model_ascending","text":"numeric vector representing generated ascending descending sequence.","code":""},{"path":"/reference/model_ascending.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate model-based ascending or descending sequence — model_ascending","text":"function generates sequence values based input vector inclination parameter. can produce either ascending descending sequence depending sign inclination parameter. can also specify custom range output sequence using 'ro' parameter.","code":""},{"path":"/reference/model_peak.html","id":null,"dir":"Reference","previous_headings":"","what":"Model a peaking pattern — model_peak","title":"Model a peaking pattern — model_peak","text":"Models peaking pattern based input vector.","code":""},{"path":"/reference/model_peak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model a peaking pattern — model_peak","text":"","code":"model_peak(input, dos = 100, pp = 0.5, ro = range(input))  model_trough(input, dos = 100, pp = 0.5, ro = range(input))"},{"path":"/reference/model_peak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model a peaking pattern — model_peak","text":"input Numeric vector length greater 5. dos Numeric value. Degree smoothness. higher value smoother peak. lower value sharper peak. range 1-100 (<1 multiplied 100 rescale). pp Numeric value. Peak position. Determines position peak either index (>= 1) percentage length (<1). ro Numeric vector length two. range output vector. Defaults range input.","code":""},{"path":"/reference/model_peak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model a peaking pattern — model_peak","text":"Numeric vector length range input vector contains peaking pattern based adjustments dos pp.","code":""},{"path":"/reference/moduleAddGeneSetsServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Server of the add gene sets module — moduleAddGeneSetsServer","title":"Server of the add gene sets module — moduleAddGeneSetsServer","text":"Server add gene sets module","code":""},{"path":"/reference/moduleAddGeneSetsServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server of the add gene sets module — moduleAddGeneSetsServer","text":"","code":"moduleAddGeneSetsServer(id, object)"},{"path":"/reference/moduleAddGeneSetsServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server of the add gene sets module — moduleAddGeneSetsServer","text":"id namespace id. object valid spata-object.","code":""},{"path":"/reference/moduleAddGeneSetsServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server of the add gene sets module — moduleAddGeneSetsServer","text":"updated spata-object.","code":""},{"path":"/reference/moduleAddGeneSetsUI.html","id":null,"dir":"Reference","previous_headings":"","what":"UI of the add gene sets module — moduleAddGeneSetsUI","title":"UI of the add gene sets module — moduleAddGeneSetsUI","text":"UI add gene sets module","code":""},{"path":"/reference/moduleAddGeneSetsUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI of the add gene sets module — moduleAddGeneSetsUI","text":"","code":"moduleAddGeneSetsUI(id)"},{"path":"/reference/moduleAddGeneSetsUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI of the add gene sets module — moduleAddGeneSetsUI","text":"id namespace id.","code":""},{"path":"/reference/moduleSurfacePlotServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Server of the surface plot module — moduleSurfacePlotServer","title":"Server of the surface plot module — moduleSurfacePlotServer","text":"Server surface plot module","code":""},{"path":"/reference/moduleSurfacePlotServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server of the surface plot module — moduleSurfacePlotServer","text":"","code":"moduleSurfacePlotServer(   id,   object,   final_plot,   reactive_object,   highlighted = shiny::reactive(FALSE) )"},{"path":"/reference/moduleSurfacePlotServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server of the surface plot module — moduleSurfacePlotServer","text":"id namespace id. object valid spata-object. final_plot final plot displayed. (See details.). reactive_object valid (reactive) spata-object.","code":""},{"path":"/reference/moduleSurfacePlotServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server of the surface plot module — moduleSurfacePlotServer","text":"reactive list several slots: $assembled_plot() surface plot ggplot-object. $dblclick() list containing information regarding double clicked position plot. $current_setting() list information settings assembled_plot (e.g. sample, color_to, smooth, smoothing_span ...)","code":""},{"path":"/reference/moduleSurfacePlotServer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Server of the surface plot module — moduleSurfacePlotServer","text":"argument final_plot takes ggplot object input going displayed final plot. allows adjust output $assembled_plot() outside module. adjustment needed determine final_plot : shiny::reactive(*module_return_variable*()$assembled_plot())","code":""},{"path":"/reference/moduleSurfacePlotUI.html","id":null,"dir":"Reference","previous_headings":"","what":"UI of the surface plot module — moduleSurfacePlotUI","title":"UI of the surface plot module — moduleSurfacePlotUI","text":"UI surface plot module","code":""},{"path":"/reference/moduleSurfacePlotUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI of the surface plot module — moduleSurfacePlotUI","text":"","code":"moduleSurfacePlotUI(id)"},{"path":"/reference/moduleSurfacePlotUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI of the surface plot module — moduleSurfacePlotUI","text":"id namespace id.","code":""},{"path":"/reference/nMolecules.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of molecules — nGenes","title":"Number of molecules — nGenes","text":"Returns number molecules raw count matrix chosen assay.","code":""},{"path":"/reference/nMolecules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of molecules — nGenes","text":"","code":"nGenes(object)  nMolecules(object, assay_name = activeAssay(object))  nMetabolites(object)  nProteins(object)"},{"path":"/reference/nMolecules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of molecules — nGenes","text":"object object class SPATA2 , case S4 generics, objects classes method defined. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/nMolecules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of molecules — nGenes","text":"Numeric value.","code":""},{"path":"/reference/nMolecules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Number of molecules — nGenes","text":"functions nGenes(), nProteins(), nMetabolites() wrappers objects contain corresponding molecular modality assay_name argument.","code":""},{"path":"/reference/nObs.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of observations — nObs","title":"Number of observations — nObs","text":"Returns number observations sample.","code":""},{"path":"/reference/nObs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of observations — nObs","text":"","code":"nObs(object)"},{"path":"/reference/nObs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of observations — nObs","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/nObs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of observations — nObs","text":"Numeric value.","code":""},{"path":"/reference/nSpatialAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of spatial annotations — nSpatialAnnotations","title":"Number of spatial annotations — nSpatialAnnotations","text":"Returns number SpatialAnnotation objects sample.","code":""},{"path":"/reference/nSpatialAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of spatial annotations — nSpatialAnnotations","text":"","code":"nSpatialAnnotations(object, ...)  # S4 method for class 'SPATA2' nSpatialAnnotations(object)  # S4 method for class 'SpatialData' nSpatialAnnotations(object)"},{"path":"/reference/nSpatialAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of spatial annotations — nSpatialAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/nSpatialAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of spatial annotations — nSpatialAnnotations","text":"Numeric value.","code":""},{"path":"/reference/nSpatialTrajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of spatial trajectories — nSpatialTrajectories","title":"Number of spatial trajectories — nSpatialTrajectories","text":"Returns number SpatialTrajectory objects sample.","code":""},{"path":"/reference/nSpatialTrajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of spatial trajectories — nSpatialTrajectories","text":"","code":"nSpatialTrajectories(object)  nTrajectories(object)"},{"path":"/reference/nSpatialTrajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of spatial trajectories — nSpatialTrajectories","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/nSpatialTrajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of spatial trajectories — nSpatialTrajectories","text":"Numeric value.","code":""},{"path":"/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize variable — normalize","title":"Normalize variable — normalize","text":"Normalize variable","code":""},{"path":"/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize variable — normalize","text":"","code":"normalize(x)"},{"path":"/reference/normalizeCounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize raw counts — normalizeCounts","title":"Normalize raw counts — normalizeCounts","text":"Normalizes count matrix molecular assay.","code":""},{"path":"/reference/normalizeCounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize raw counts — normalizeCounts","text":"","code":"normalizeCounts(   object,   method = \"LogNormalize\",   mtr_name_new = method,   sct_clip_range = c(-sqrt(x = ncol(x = umi)/30), sqrt(x = ncol(x = umi)/30)),   activate = TRUE,   assay_name = activeAssay(object),   overwrite = FALSE,   verbose = NULL,   ... )"},{"path":"/reference/normalizeCounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize raw counts — normalizeCounts","text":"object object class SPATA2 , case S4 generics, objects classes method defined. method Character value. normalization method. One c('LogNormalize', 'CLR', 'RC', 'SCT'). 'SCT' normalization used MERFISH Xenium datasets, suggested Seurat documentation. mtr_name_new Character value. name new processed matrix stored SPATA2 object. activate Logical. TRUE, created matrix activated via activateMatrix(). assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). overwrite Logical value. Must TRUE allow overwriting. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional arguments given Seurat::NormalizeData().","code":""},{"path":"/reference/normalizeCounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize raw counts — normalizeCounts","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/normalizeCounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize raw counts — normalizeCounts","text":"function creates temporary Seurat object calls Seurat::NormalizeData() corresponding method. Afterwards, normalized matrix extracted stored SPATA2 object name specified mtr_name_new. name, turn, default character value method.","code":""},{"path":"/reference/normalizeCounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize raw counts — normalizeCounts","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  object <- normalizeCounts(object, method = \"LogNormalize\")  # default name for processed matrix is the input for `method` mtr <- getMatrix(object, mtr_name = \"LogNormalize\")"},{"path":"/reference/object_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"object — object_dummy","title":"object — object_dummy","text":"object","code":""},{"path":"/reference/object_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"object — object_dummy","text":"","code":"object_dummy()"},{"path":"/reference/object_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"object — object_dummy","text":"object object method defined.","code":""},{"path":"/reference/pb_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"pb — pb_dummy","title":"pb — pb_dummy","text":"pb","code":""},{"path":"/reference/pb_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pb — pb_dummy","text":"","code":"pb_dummy(pb)"},{"path":"/reference/pb_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pb — pb_dummy","text":"pb progress_bar-object.","code":""},{"path":"/reference/plotAutoencoderAssessment.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot total variance of different neural networks — plotAutoencoderAssessment","title":"Plot total variance of different neural networks — plotAutoencoderAssessment","text":"Visualizes results assessAutoencoderOptions() displaying total variance combination activation function (relu, sigmoid) number bottleneck neurons. results depend adjustments like number layers, dropout number epochs.","code":""},{"path":"/reference/plotAutoencoderAssessment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot total variance of different neural networks — plotAutoencoderAssessment","text":"","code":"plotAutoencoderAssessment(   object,   activation_subset = NULL,   clrp = NULL,   verbose = NULL )"},{"path":"/reference/plotAutoencoderAssessment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot total variance of different neural networks — plotAutoencoderAssessment","text":"object valid spata-object.","code":""},{"path":"/reference/plotAutoencoderAssessment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot total variance of different neural networks — plotAutoencoderAssessment","text":"ggplot_family return","code":""},{"path":"/reference/plotAutoencoderResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot scaled vs. denoised expression — plotAutoencoderResults","title":"Plot scaled vs. denoised expression — plotAutoencoderResults","text":"Compares distribution expression levels genes scaled matrix denoised matrix.","code":""},{"path":"/reference/plotAutoencoderResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot scaled vs. denoised expression — plotAutoencoderResults","text":"","code":"plotAutoencoderResults(   object,   genes,   mtr_name = \"denoised\",   normalize = NULL,   scales = NULL,   pt_alpha = NULL,   pt_clrp = NULL,   pt_size = NULL,   verbose = NULL,   of_sample = NA,   ... )"},{"path":"/reference/plotAutoencoderResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot scaled vs. denoised expression — plotAutoencoderResults","text":"object valid spata-object. genes Character vector length two. Denotes genes used validation plot. pt_alpha Numeric value. Specifies degree transparency points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. pt_size Numeric value. Specifies size points. of_sample argument currently inactive. might reactivated spata-objects can store one sample.","code":""},{"path":"/reference/plotAutoencoderResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot scaled vs. denoised expression — plotAutoencoderResults","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/plotAutoencoderResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot scaled vs. denoised expression — plotAutoencoderResults","text":"function requires denoised matrix slot @data generated runAutoEncoderDenoising() well scaled matrix.","code":""},{"path":"/reference/plotBarchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot distribution of discrete variables — plotBarchart","title":"Plot distribution of discrete variables — plotBarchart","text":"Visualizes count proportion barcode spots falling certain groups via barcharts. either whole sample comparing manner across specified.","code":""},{"path":"/reference/plotBarchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot distribution of discrete variables — plotBarchart","text":"","code":"plotBarchart(   object,   grouping_variables,   across = NULL,   across_subset = NULL,   relevel = NULL,   clrp = NULL,   clrp_adjust = NULL,   position = \"stack\",   display_facets = NULL,   ncol = NULL,   nrow = NULL,   ... )"},{"path":"/reference/plotBarchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot distribution of discrete variables — plotBarchart","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. relevel Logical value. set TRUE input order across_subset determines order groups interest displayed. Groups included dropped affects colors displayed. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. display_facets Logical value. set TRUE plot split via ggplot2::facet_wrap() variable gets subplot. nrow, ncol Numeric values NULL. Used arrange multiple plots. ... Additional arguments given respective ggplot2::geom_<plot_type>() function. E.g. plotViolinplot() relies ggplot2::geom_violin(). variables Character vector. discrete features whose group count proportion want display. Must contain feature specified across - across set NULL.","code":""},{"path":"/reference/plotBarchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot distribution of discrete variables — plotBarchart","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/plotBarchart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot distribution of discrete variables — plotBarchart","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  plotBarchart(object, grouping_variables = c(\"seurat_clusters\", \"bayes_space\"))"},{"path":"/reference/plotBoxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot numeric distribution and statistical tests — plotBoxplot","title":"Plot numeric distribution and statistical tests — plotBoxplot","text":"functions display distribution numeric variables whole sample comparative manner argument across specified. plotViolinplot() plotBoxplot() allow statistical tests t-test ANOVA.","code":""},{"path":"/reference/plotBoxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot numeric distribution and statistical tests — plotBoxplot","text":"","code":"plotBoxplot(   object,   variables,   across = NULL,   across_subset = NULL,   relevel = NULL,   clrp = NULL,   clrp_adjust = NULL,   test_groupwise = NULL,   test_pairwise = NULL,   ref_group = NULL,   step_increase = 0.01,   vjust = 0,   display_facets = NULL,   scales = \"free\",   nrow = NULL,   ncol = NULL,   display_points = FALSE,   n_bcs = NULL,   pt_alpha = NULL,   pt_clr = NULL,   pt_size = NULL,   pt_shape = NULL,   method_gs = NULL,   normalize = NULL,   verbose = NULL,   of_sample = NA,   ... )  plotDensityplot(   object,   variables,   across = NULL,   across_subset = NULL,   relevel = NULL,   clrp = NULL,   clrp_adjust = NULL,   display_facets = NULL,   scales = \"free_x\",   nrow = NULL,   ncol = NULL,   method_gs = NULL,   normalize = NULL,   verbose = NULL,   ... )  plotHistogram(   object,   variables,   across = NULL,   across_subset = NULL,   relevel = NULL,   clrp = NULL,   clrp_adjust = NULL,   scales = \"free_x\",   nrow = NULL,   ncol = NULL,   method_gs = NULL,   normalize = NULL,   verbose = NULL,   ... )  plotRidgeplot(   object,   variables,   across = NULL,   across_subset = NULL,   relevel = NULL,   alpha = 0.8,   clrp = NULL,   clrp_adjust = NULL,   display_facets = NULL,   scales = \"free\",   nrow = NULL,   ncol = NULL,   method_gs = NULL,   normalize = NULL,   verbose = NULL,   ... )  plotVioBoxplot(   object,   variables,   across = NULL,   across_subset = NULL,   relevel = NULL,   clrp = NULL,   clrp_adjust = NULL,   test_groupwise = NULL,   test_pairwise = NULL,   ref_group = NULL,   step_increase = 0.01,   display_facets = NULL,   vjust = 0,   scales = \"free\",   nrow = NULL,   ncol = NULL,   display_points = FALSE,   n_bcsp = NULL,   pt_alpha = NULL,   pt_clr = NULL,   pt_size = NULL,   pt_shape = NULL,   method_gs = NULL,   normalize = NULL,   verbose = NULL,   ... )  plotViolinplot(   object,   variables,   across = NULL,   across_subset = NULL,   relevel = NULL,   clrp = NULL,   clrp_adjust = NULL,   test_groupwise = NULL,   test_pairwise = NULL,   ref_group = NULL,   step_increase = 0.01,   display_facets = NULL,   vjust = 0,   scales = \"free\",   nrow = NULL,   ncol = NULL,   display_points = FALSE,   n_bcsp = NULL,   pt_alpha = NULL,   pt_clr = NULL,   pt_size = NULL,   pt_shape = NULL,   method_gs = NULL,   normalize = NULL,   verbose = NULL,   ... )"},{"path":"/reference/plotBoxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot numeric distribution and statistical tests — plotBoxplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. names data variables interest. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. relevel Logical value. set TRUE input order across_subset determines order groups interest displayed. Groups included dropped affects colors displayed. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. test_groupwise Character value NULL. Specifies groupwise statistical test conducted. character, one 'anova', 'kruskal.test'. set NULL testing skipped. test_pairwise Character value NULL. Specifies pairwise statistical test conducted. character, one 't.test', 'wilcox.test'. set NULL testing skipped. ref_group Character value NULL. Specifies reference group groups compared test denoted test_groupwise conducted. set NULL first group found taken. step_increase Numeric value. Denotes increase fraction total height every additional comparison minimize overlap. vjust Numeric value. Denotes relative, vertical position results test denoted test.groupwise. Negative input highers, positive input lowers position. display_facets Logical value. set TRUE plot split via ggplot2::facet_wrap() variable gets subplot. nrow, ncol Numeric values NULL. Used arrange multiple plots. display_points Logical value. set TRUE points used additionally display results. pt_alpha Numeric value. Specifies degree transparency points. pt_clr Character value. Specifies color points. pt_size Numeric value. Specifies size points. method_gs Character value. method according gene sets handled specified character length one. can either 'mean one 'gsva', 'ssgsea', 'zscore', 'plage'. latter four given gsva::GSVA(). normalize Logical. set TRUE values scaled 0-1. Hint: Variables uniformly expressed can scaled discarded. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional arguments given respective ggplot2::geom_<plot_type>() function. E.g. plotViolinplot() relies ggplot2::geom_violin(). n_bcsp Numeric value. Specifies sample size barcode-spots can set prevent overplotting.","code":""},{"path":"/reference/plotBoxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot numeric distribution and statistical tests — plotBoxplot","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/plotBoxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot numeric distribution and statistical tests — plotBoxplot","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  plotBoxplot(object, variables = c(\"METRN\", \"MBP\", \"CA11\")) plotBoxplot(object, variables = c(\"METRN\", \"MBP\", \"CA11\"), across = \"bayes_space\")  plotViolinplot(object, variables = c(\"METRN\", \"MBP\", \"CA11\")) plotViolinplot(object, variables = c(\"METRN\", \"MBP\", \"CA11\"), across = \"bayes_space\")  # works the same for all functions....  plotBoxplot(    object = object,    variables = \"METRN\",    across = \"bayes_space\",    across_subset = c(\"2\", \"3\"),    test_pairwise = \"t.test\"    )"},{"path":"/reference/plotCnvHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot CNV Heatmap — plotCnvHeatmap","title":"Plot CNV Heatmap — plotCnvHeatmap","text":"Plots results  runCNV() form heatmap. Use arguments across across_subset visualize CNV differences subgroups cluster variables grouping variables (e.g. based histology created createSpatialSegmentation().","code":""},{"path":"/reference/plotCnvHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot CNV Heatmap — plotCnvHeatmap","text":"","code":"plotCnvHeatmap(   object,   across = NULL,   across_subset = NULL,   relevel = NULL,   arm_subset = c(\"p\", \"q\"),   chrom_subset = 1:22,   chrom_separate = 1:22,   chrom_arm_subset = NULL,   n_bins_bcsp = 500,   n_bins_genes = 500,   summarize_with = \"mean\",   display_arm_annotation = TRUE,   colors_arm_annotation = c(p = \"white\", q = \"black\"),   display_chrom_annotation = FALSE,   display_chrom_names = TRUE,   text_alpha = 1,   text_color = \"black\",   text_position = \"top\",   text_size = 3.5,   display_hlines = is.character(across),   hline_alpha = 0.75,   hline_color = \"black\",   hline_size = 0.5,   hline_type = \"dashed\",   display_vlines = TRUE,   vline_alpha = 0.75,   vline_color = \"black\",   vline_size = 0.5,   vline_type = \"dashed\",   display_border = TRUE,   border_color = \"black\",   border_size = 0.5,   clrp = NULL,   clrp_adjust = NULL,   clrsp = \"Blue-Red 3\",   limits = NULL,   meta_vars = NULL,   meta_vars_clrs = list(),   normalize = NULL,   arrange_by = across,   arrange_desc = FALSE,   annotation_size_top = 0.025,   annotation_size_side = 0.025,   pretty_name = TRUE,   ggpLayers = list(),   bcs_rm = NULL,   verbose = NULL,   ... )"},{"path":"/reference/plotCnvHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot CNV Heatmap — plotCnvHeatmap","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. relevel Logical value. set TRUE input order across_subset determines order groups interest displayed. Groups included dropped affects colors displayed. arm_subset Character vector. combination 'p' /'q'. Denotes chromosome arms included. Defaults . chrom_subset Character numeric vector. Denotes chromosomes included. Defaults 1-22. chrom_separate Character numeric vector. Denotes chromosomes separated neighbors vertical lines. Defaults 1-22. FALSE NULL, vertical lines drawn. Requires display_vlines set TRUE. chrom_arm_subset Character vector. Denotes exact chromosome-arm combinations included. n_bins_bcsp, n_bins_genes Numeric values. Denotes number bins CNV results barcode-spot ~ gene pairs summarized. Reduces plotting load. Set Inf want barcode-spots ~ gene pairs plotted one tile. n_bins_bcsp effectively specifies number rows heatmap, n_bins_genes specifies number columns. summarize_with Character value. Name function summarize. Either 'mean' 'median'. display_arm_annotation Logical value. TRUE, guiding information chromosome arms plotted top heatmap. colors_arm_annotation Named character vector. Denotes colors chromosome arms displayed. Names must 'p' /'q'. display_chrom_annotation Logical value. TRUE, guiding information chromosomes plotted top heatmap. display_chrom_names Logical value. TRUE, chromosome names/numbers plotted top bottom heatmap. text_alpha, text_color, text_size Parameters given ggplot2::geom_text() used manipulate appearance chromosome names. text_position Character value. Either 'top' 'bottom'. display_hlines Logical value. TRUE across NULL, horizontal lines drawn aid eye separating grouping rows heatmap. Appearance lines can adjusted hline-arguments. hline_alpha, hline_color, hline_size, hline_type Parameters given ggplot2::geom_hline() control appearance vertical lines plot. display_vlines Logical value. TRUE, vertical lines drawn aid eye separating chromosome columns heatmap. Appearance lines can adjusted vlines-arguments. vline_alpha, vline_color, vline_size, vline_type Parameters given ggplot2::geom_vline() control appearance vertical lines plot. display_border Logical value. TRUE, border drawn around heatmap annotation. Can provided named vector adress single parts heatmap. Valid names 'arm', 'chrom', 'grouping' 'main'. border_color, border_size Impact appearance border display_border TRUE. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. clrsp Character vector. colorspectrum tiles heatmap colored. one validColorSpectra()[['Diverging']]. limits Numeric vector length two NULL. numeric, sets limits colorscale (oob set scales::squish). meta_vars Character vector NULL. character, variables display o normalize Logical. set TRUE values scaled 0-1. Hint: Variables uniformly expressed can scaled discarded. annotation_size_top, annotation_size_side Numeric values. Used adjust size row/column annotation heatmap. pretty_name Logical. TRUE makes legend names pretty. ggpLayers list additional gg elements customize output plot. See details . bcs_rm Character vector NULL. character, specifies observations removed prior analysis visualization barcode. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/plotCnvHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot CNV Heatmap — plotCnvHeatmap","text":"plot class aplot.","code":""},{"path":"/reference/plotCnvHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot CNV Heatmap — plotCnvHeatmap","text":"output plot function consists several elements - element ggplot. elements combined/aligned using aplot package. Therefore, output plot class aplot can adjusted adding additional gg objects using + operator ggplot2 framework. Individual customization still possible ggpLayers argument. Every single element output plot named: main: heatmap horizontal vertical lines. arm: arm annotation top heatmap. chrom: chromosome annotation top heatmap. (displayed default) names: chromosome name annotation top heatmap. grouping: grouping annotation left side heatmap across NULL. ggpLayers takes list input. Unnamed elements list added elements plot. E.g.: ggpLayers = list(theme(legend.position = \"none\")) removes legends. address single elements output plot corresponding elements list must named. E.g.: ggpLayers = list(grouping = theme(legend.position = \"none\")) removes legend grouping leaving legends come plot elements .","code":""},{"path":"/reference/plotCnvHeatmap.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"Plot CNV Heatmap — plotCnvHeatmap","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":"/reference/plotCnvLineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot CNV Lineplot — plotCnvLineplot","title":"Plot CNV Lineplot — plotCnvLineplot","text":"Plots results runCNV() form lineplot. Use arguments across across_subset visualize CNV differences subgroups cluster variables grouping variables (e.g. based histology created createSpatialSegmentation()).","code":""},{"path":"/reference/plotCnvLineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot CNV Lineplot — plotCnvLineplot","text":"","code":"plotCnvLineplot(   object,   across = NULL,   across_subset = NULL,   arm_subset = c(\"p\", \"q\"),   chrom_subset = 1:22,   chrom_separate = 1:22,   chrom_arm_subset = NULL,   smooth_span = 0.08,   line_alpha = 0.9,   line_color = \"blue\",   line_size = 1,   display_ribbon = TRUE,   ribbon_alpha = 0.25,   ribbon_fill = \"lightgrey\",   vline_alpha = 0.75,   vline_color = \"black\",   vline_size = 0.5,   vline_type = \"dashed\",   summarize_with = \"mean\",   nrow = NULL,   ncol = NULL,   breaks_y = c(0.9, 0.95, 1, 1.05, 1.1),   labels_y = breaks_y,   limits_y = base::range(breaks_y),   expand_y = ggplot2::waiver(),   verbose = TRUE,   ... )"},{"path":"/reference/plotCnvLineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot CNV Lineplot — plotCnvLineplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. arm_subset Character vector. combination 'p' /'q'. Denotes chromosome arms included. Defaults . chrom_subset Character numeric vector. Denotes chromosomes included. Defaults 1-22. chrom_separate Character numeric vector. Denotes chromosomes separated neighbors vertical lines. Defaults 1-22. FALSE NULL, vertical lines drawn. Requires display_vlines set TRUE. chrom_arm_subset Character vector. Denotes exact chromosome-arm combinations included. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. display_ribbon Logical value. TRUE, ribbon displayed around main line plot visualizing uncertainty using standard deviation. ribbon_alpha, ribbon_fill Parameters given ggplot2::geom_ribbion() control appearance ribbon around main line plot. vline_alpha, vline_color, vline_size, vline_type Parameters given ggplot2::geom_vline() control appearance vertical lines plot. summarize_with Character value. Name function summarize. Either 'mean' 'median'. nrow, ncol Numeric values NULL. Used arrange multiple plots. breaks_y, labels_y, limits_y, expand_y Given corresponding arguments ggplot2::scale_y_continuous(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/plotCnvLineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot CNV Lineplot — plotCnvLineplot","text":"ggplot.","code":""},{"path":"/reference/plotCnvLineplot.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"Plot CNV Lineplot — plotCnvLineplot","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":"/reference/plotCnvResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — plotCnvResults","title":"Deprecated — plotCnvResults","text":"Deprecated favor plotCnvLineplot() /plotCnvHeatmap().","code":""},{"path":"/reference/plotCnvResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — plotCnvResults","text":"","code":"plotCnvResults(...)"},{"path":"/reference/plotDeaDotPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot DEA results via dot plots — plotDeaDotPlot","title":"Plot DEA results via dot plots — plotDeaDotPlot","text":"Visualizes results DE analysis dot plots.","code":""},{"path":"/reference/plotDeaDotPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot DEA results via dot plots — plotDeaDotPlot","text":"","code":"plotDeaDotPlot(   object,   across = getDefaultGrouping(object),   across_subset = NULL,   relevel = NULL,   method_de = NULL,   by_group = TRUE,   max_adj_pval = NULL,   min_lfc = NULL,   n_highest_lfc = NULL,   n_lowest_pval = NULL,   genes = NULL,   color_by = \"avg_log2FC\",   alpha_by = NULL,   alpha_trans = \"identity\",   color_trans = \"identity\",   size_by = \"p_val_adj\",   size_trans = \"reverse\",   pt_alpha = 0.9,   pt_size = 2,   pt_color = \"blue4\",   pt_clrp = NULL,   pt_clrsp = \"plasma\",   scales = \"free\",   nrow = NULL,   ncol = NULL,   transform_with = NULL,   arrange_genes = TRUE,   reverse = TRUE,   reverse_within = FALSE,   assay_name = activeAssay(object),   ... )"},{"path":"/reference/plotDeaDotPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot DEA results via dot plots — plotDeaDotPlot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. relevel Logical value. set TRUE input order across_subset determines order groups interest displayed. Groups included dropped affects colors displayed. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. by_group Logical value. TRUE every group grouping variable single dot plot created. FALSE one plot groups gene sets created. genes Character vector NULL. character, vector gene names determines genes included. NULL, genes taken according threshold input average log fold change adjusted p-value. color_by Character value. variables color data points. pt_alpha Numeric value. Specifies degree transparency points. pt_size Numeric value. Specifies size points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. pt_clrsp color spectrum used specified variable displayed color continuous. Run validColorSpectra() see valid input. nrow, ncol Numeric values NULL. Used arrange multiple plots. transform_with List NULL. list, can used transform continuous variables usage. Names list slots refer variable. content slot refers transforming functions. E.g variable interest GFAP gene expression, following work: Single function: transform_with = log10, Multiple functions: transform_with = list(GFAP = list(log10, log2) case plotting: Useful want apply one transformation variables mapped plotting aesthetics. Input transform_with applied respective <aes>_trans argument. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). ... Used absorb deprecated arguments functions. x Character value. Specifies plotted x-axis. p_val_adj scale reversed. Ignored by_group = FALSE.","code":""},{"path":"/reference/plotDeaDotPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot DEA results via dot plots — plotDeaDotPlot","text":"ggplot.","code":""},{"path":"/reference/plotDeaDotPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot DEA results via dot plots — plotDeaDotPlot","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  object <- runDEA(object, across = \"histology\")  plotDeaDotplot(object, across = \"histology\") plotDeaDotplot(object, across = \"histology\", across_subset = c(\"tumor\", \"transition\"))"},{"path":"/reference/plotDeaHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot DEA results via heatmaps — plotDeaHeatmap","title":"Plot DEA results via heatmaps — plotDeaHeatmap","text":"Visualizes DEA results across subgroups heatmap. either takes results previously conducted DEA uses specified genes plot heatmap.","code":""},{"path":"/reference/plotDeaHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot DEA results via heatmaps — plotDeaHeatmap","text":"","code":"plotDeaHeatmap(   object,   across,   across_subset = NULL,   relevel = NULL,   method_de = NULL,   max_adj_pval = NULL,   min_lfc = NULL,   n_highest_lfc = NULL,   n_lowest_pval = NULL,   breaks = NULL,   genes = NULL,   n_bcs = NULL,   clrp = NULL,   colors = NULL,   verbose = NULL,   ... )"},{"path":"/reference/plotDeaHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot DEA results via heatmaps — plotDeaHeatmap","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. relevel Logical value. set TRUE input order across_subset determines order groups interest displayed. Groups included dropped affects colors displayed. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. max_adj_pval Numeric value. Sets threshold adjusted p-values. genes adjusted p-values threshold ignored. min_lfc Numeric value. Sets threshold average log fold change. genes average log fold change threshold ignored. n_highest_lfc Numeric value. Affects total number genes kept. See details. n_lowest_pval Numeric value. Affects total number genes kept. See details. breaks Denotes colorspectrum breaks. set NULL breaks set automatically. numeric vector specified taken input. function specified expression matrix passed first argument length colors second argument. genes Character vector NULL. want display specific genes irrespective DEA results can specifiy genes. genes specified way arguments referring de-anylsis results ignored genes specified taken displayed. n_bcs number barcodes (observations) belonging cluster want include matrix. lower total number barcode-spots every cluster can deployed order keep heatmap clear aesthetically pleasing. set NULL (default) automatically computed according number genes displayed heatmap. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional arguments given pheatmap::pheatmap().","code":""},{"path":"/reference/plotDeaHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot DEA results via heatmaps — plotDeaHeatmap","text":"ggplot.","code":""},{"path":"/reference/plotDeaHeatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot DEA results via heatmaps — plotDeaHeatmap","text":"de-data.frame processed following steps performed every experimental group. Discards genes avg_logFC-values either infinite negative Discards genes adjusted p-values threshold set max_adj_pval Discard genes average log fold change treshold set min_lfc Slices data.frame order every experimental group: n genes highest avg_logFC-values kept n = n_highest_lfc n genes lowest p_val_adj-values kept n = n_lowest_pval Arranges genes according highest avg_logFC-values","code":""},{"path":"/reference/plotDeaHeatmap.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"Plot DEA results via heatmaps — plotDeaHeatmap","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":[]},{"path":"/reference/plotDeaVolcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot DEA results via volcano plots — plotDeaVolcano","title":"Plot DEA results via volcano plots — plotDeaVolcano","text":"Plots common volcano plot p-value y- logfold change x-axis.","code":""},{"path":"/reference/plotDeaVolcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot DEA results via volcano plots — plotDeaVolcano","text":"","code":"plotDeaVolcano(   object,   across = getDefaultGrouping(object),   across_subset = NULL,   relevel = TRUE,   method_de = NULL,   color_up = \"tomato\",   color_down = \"steelblue\",   color_insignif = \"lightgrey\",   pt_alpha = 0.9,   pt_size = 1,   threshold_logFC = 1,   threshold_pval = 0.01,   label_genes = 5,   label_insignificant = TRUE,   label_side = c(\"up\", \"down\"),   label_size = 1,   nrow = NULL,   ncol = NULL,   scales = \"fixed\",   use_pseudolog = FALSE,   assay_name = activeAssay(object),   ... )  plotDeaVolcano1v1(   object,   across,   method_de = NULL,   clrp = NULL,   clrp_adjust = NULL,   color_insignif = \"lightgrey\",   pt_alpha = 0.9,   pt_size = 1,   threshold_logFC = 1,   threshold_pval = 0.01,   col_pval = \"p_val_adj\",   label_genes = 5,   label_size = 1,   use_pseudolog = FALSE,   limits = NULL,   display_title = TRUE,   title_size = 2,   digits = 2,   assay_name = activeAssay(object),   ... )"},{"path":"/reference/plotDeaVolcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot DEA results via volcano plots — plotDeaVolcano","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. relevel Logical value. set TRUE input order across_subset determines order groups interest displayed. Groups included dropped affects colors displayed. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. color_up Character value. Color points represent upregulated genes. color_down Character value. Color poitns represent downregulated genes. color_insignif Character value. Color points fall threshold set via argument threshold_pval. pt_alpha Numeric value. Specifies degree transparency points. pt_size Numeric value. Specifies size points. threshold_logFC Numeric value. Denotes threshold logFC. Genes logFC displayed significant. threshold_pval Numeric value. Denotes threshold p-value. Genes p-value displayed significant. label_genes Specify genes labeled plot. numeric, specifies number genes labeled. E.g. label_genes = 5, default, top 5 genes labeled. character, specifies genes supposed labeled name. NULL FALSE, genes labeled. label_insignificant Logical value. FALSE, insignifcant genes labeled. label_side Character vector. Decides side label genes. Valid input '' /''. nrow, ncol Numeric values NULL. Used arrange multiple plots. use_pseudolog Logical value. TRUE, avglogFC transformed log10. Requires package ggallin installed. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). ... Used absorb deprecated arguments functions. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. display_title Logical value. set TRUE informative title displayed.","code":""},{"path":"/reference/plotDeaVolcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot DEA results via volcano plots — plotDeaVolcano","text":"ggplot.","code":""},{"path":"/reference/plotDeaVolcano.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"Plot DEA results via volcano plots — plotDeaVolcano","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":"/reference/plotDendrogram.html","id":null,"dir":"Reference","previous_headings":"","what":"dummy — plotDendrogram","title":"dummy — plotDendrogram","text":"dummy","code":""},{"path":"/reference/plotDendrogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dummy — plotDendrogram","text":"","code":"plotDendrogram()"},{"path":"/reference/plotExprVsDistSA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot expression as a function of distance to a spatial references — plotExprVsDistSA","title":"Plot expression as a function of distance to a spatial references — plotExprVsDistSA","text":"Generates scatterplot visualize relationship gene expression distance data points spatial reference. Set line_alpha > 0 visualize inferred expression pattern used spatial gradient screening.","code":""},{"path":"/reference/plotExprVsDistSA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot expression as a function of distance to a spatial references — plotExprVsDistSA","text":"","code":"plotExprVsDistSA(   object,   variables,   ids = idSA(object),   distance = \"dte\",   resolution = recSgsRes(object),   core = FALSE,   pt_alpha = 0.1,   pt_color = \"black\",   pt_clrp = NULL,   pt_size = 1.5,   line_alpha = 0,   line_color = \"forestgreen\",   line_size = 1.75,   border_linealpha = 1,   border_linecolor = \"black\",   border_linesize = 1,   border_linetype = \"solid\",   ee_linealpha = 0,   ee_linecolor = \"black\",   ee_lineend = \"point\",   ee_linesize = 1,   ee_linetype = \"solid\",   se_fill = ggplot2::alpha(\"lightgrey\", 0.5),   unit = getDefaultUnit(object),   ggpLayers = NULL,   ncol = NULL,   nrow = NULL,   ... )  plotExprVsDistST(   object,   variables,   id = idST(object),   resolution = recSgsRes(object),   width = NULL,   pt_alpha = 0.5,   pt_color = \"black\",   pt_clrp = NULL,   pt_size = 1.5,   line_alpha = 0.9,   line_color = \"forestgreen\",   line_size = 1,   unit = getDefaultUnit(object),   ggpLayers = NULL,   ncol = NULL,   nrow = NULL,   ... )"},{"path":"/reference/plotExprVsDistSA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot expression as a function of distance to a spatial references — plotExprVsDistSA","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. numeric variables hat supposed plotted. ids Character vector. Specifies IDs spatial annotations interest. distance numeric vector distances annotation's edge. resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). pt_alpha Numeric value. Specifies degree transparency points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. pt_size Numeric value. Specifies size points. line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. se_fill fill color smoothing line's standard error area (default: \"lightgrey\"). unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. ggpLayers List ggproto-objects added plot. Skim ggpLayer*()-functions options. nrow, ncol Numeric values NULL. Used arrange multiple plots. ... Used absorb deprecated arguments functions. id Character value. ID spatial trajectory.","code":""},{"path":"/reference/plotExprVsDistSA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot expression as a function of distance to a spatial references — plotExprVsDistSA","text":"ggplot.","code":""},{"path":"/reference/plotExprVsDistSA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot expression as a function of distance to a spatial references — plotExprVsDistSA","text":"","code":"library(SPATA2) library(tidyverse)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  object <- normalizeCounts(object, activate = TRUE)  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    inner_borders = FALSE,    force1 = TRUE    )   plotExprVsDistSA(object, variables = c(\"HM_HYPOXIA\", \"METRN\"), ids = \"hypoxia_ann\", core = T)"},{"path":"/reference/plotGeneDendrogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize clustering results — plotGeneDendrogram","title":"Visualize clustering results — plotGeneDendrogram","text":"Plots dendrogram distance matrix calculated via runSpatialCorrelation().","code":""},{"path":"/reference/plotGeneDendrogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize clustering results — plotGeneDendrogram","text":"","code":"plotGeneDendrogram(object, method_hclust = \"complete\", of_sample = NA, ...)"},{"path":"/reference/plotGeneDendrogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize clustering results — plotGeneDendrogram","text":"object valid spata-object. method_hclust Character value. Denotes hierarchical clustering method  according clustering performed. Valid input options 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' 'centroid'. of_sample argument currently inactive. might reactivated spata-objects can store one sample. ... Additional arguments given ggdendro::ggdendrogram()","code":""},{"path":"/reference/plotGeneDendrogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize clustering results — plotGeneDendrogram","text":"ggplot_family return","code":""},{"path":"/reference/plotGseaDotPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot GSEA results via dot plots — plotGseaDotPlot","title":"Plot GSEA results via dot plots — plotGseaDotPlot","text":"Visualizes results gene set enrichment analysis dot plots.","code":""},{"path":"/reference/plotGseaDotPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot GSEA results via dot plots — plotGseaDotPlot","text":"","code":"plotGseaDotPlot(   object,   across = getDefaultGrouping(object, verbose = TRUE, \"across\"),   across_subset = NULL,   relevel = NULL,   method_de = NULL,   by_group = TRUE,   n_gsets = 20,   signif_var = \"fdr\",   signif_threshold = 0.05,   alpha_by = NULL,   alpha_trans = \"reverse\",   color_by = \"fdr\",   color_trans = \"reverse\",   size_by = \"fdr\",   size_trans = \"reverse\",   pt_alpha = 0.9,   pt_size = 2,   pt_color = \"blue4\",   pt_clrp = NULL,   pt_clrsp = NULL,   force_gsets = NULL,   force_opt = \"add\",   remove = \"^.+?(?=_)\",   remove_gsets = NULL,   replace = c(\"_\", \" \"),   arrange_gsets = TRUE,   reverse = TRUE,   reverse_within = FALSE,   scientific = TRUE,   scales = \"free\",   nrow = NULL,   ncol = NULL,   transform_with = NULL,   verbose = NULL,   ... )"},{"path":"/reference/plotGseaDotPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot GSEA results via dot plots — plotGseaDotPlot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. across_subset Character vector NULL. Specifies particular groups interest grouping variable specified argument across contains. set NULL chosen. can prefix groups interested '-'. (Saves writing groups interested groups interested .) Use getGroupNames() obtain valid input options. relevel Logical value. set TRUE input order across_subset determines order groups interest displayed. Groups included dropped affects colors displayed. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. by_group Logical value. TRUE every group grouping variable single dot plot created. FALSE one plot groups gene sets created. n_gsets Numeric value. Maximal number gene sets whose results included. first n_gsets included starting one lowest significance value. signif_var Character value. Determines considered checking significance. Either 'pval' (p-Value) 'fdr' (False Discovery Rate). signif_threshold Numeric value. Significance values signif_threshold included. color_by Character value. variables color data points. pt_alpha Numeric value. Specifies degree transparency points. pt_size Numeric value. Specifies size points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. pt_clrsp color spectrum used specified variable displayed color continuous. Run validColorSpectra() see valid input. remove Character value NULL. character, regular expression given pattern stringr::str_remove_all(). Used adjust gene set names. remove_gsets Character value NULL. character, regular expression. gene set names match regular expression included plot. replace Character vector length 2 NULL. character vector, two regular expressions. First value given argument pattern second given argument replacement stringr::str_replace_all(). Used adjust gene set names. arrange_gsets Logical. TRUE gene sets arranged group belonging. Making appearance plots tidier. reverse Logical. TRUE gene sets arranged top bottom. FALSE arranged bottom top. nrow, ncol Numeric values NULL. Used arrange multiple plots. transform_with List NULL. list, can used transform continuous variables usage. Names list slots refer variable. content slot refers transforming functions. E.g variable interest GFAP gene expression, following work: Single function: transform_with = log10, Multiple functions: transform_with = list(GFAP = list(log10, log2) case plotting: Useful want apply one transformation variables mapped plotting aesthetics. Input transform_with applied respective <aes>_trans argument. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions. reverse_whitin Logical. TRUE gene sets displayed reversed order within groups.","code":""},{"path":"/reference/plotGseaDotPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot GSEA results via dot plots — plotGseaDotPlot","text":"ggplot.","code":""},{"path":"/reference/plotGseaDotPlot.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"Plot GSEA results via dot plots — plotGseaDotPlot","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":"/reference/plotGseaDotPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot GSEA results via dot plots — plotGseaDotPlot","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  # requires the results of runDEA(object, across = \"histology\")! object <- runDEA(object, across = \"histology\")  object <- runGSEA(object, across = \"histology\")  plotGseaDotplot(object, across = \"histology\", )"},{"path":"/reference/plotImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot image with ggplot2 — plotImage","title":"Plot image with ggplot2 — plotImage","text":"Plots histology image ggplot2.","code":""},{"path":"/reference/plotImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot image with ggplot2 — plotImage","text":"","code":"plotImage(object, ...)  # S4 method for class 'SPATA2' plotImage(   object,   img_name = activeImage(object),   outline = FALSE,   by_section = TRUE,   fragments = TRUE,   line_alpha = 0.9,   line_color = \"black\",   line_size = 0.5,   line_type = \"solid\",   transform = TRUE,   img_alpha = 1,   scale_fct = 1,   xrange = NULL,   yrange = NULL,   ... )  # S4 method for class 'SpatialData' plotImage(   object,   img_name = activeImage(object),   outline = FALSE,   by_section = TRUE,   fragments = TRUE,   line_alpha = 0.9,   line_color = \"black\",   line_size = 0.5,   line_type = \"solid\",   transform = TRUE,   img_alpha = 1,   scale_fct = 1,   xrange = NULL,   yrange = NULL,   unit = \"px\",   ... )  # S4 method for class 'HistoImage' plotImage(   object,   outline = FALSE,   by_section = TRUE,   fragments = TRUE,   line_alpha = 0.9,   line_color = \"black\",   line_size = 1,   line_type = \"solid\",   transform = TRUE,   img_alpha = 1,   scale_fct = 1,   xrange = NULL,   yrange = NULL,   display_subtitle = FALSE,   ... )  # S4 method for class 'Image' plotImage(object, scale_fct = 1, img_alpha = 1, ...)"},{"path":"/reference/plotImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot image with ggplot2 — plotImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional arguments given ggpLayerZoom(). img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). by_section Logical value. TRUE, outline used acknowledges potential multiple tissue sections. FALSE, outline used simply outlines everything one single polygon. line_alpha Numeric. Affects alpha main lines plot. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. line_type Character. line type. One 'blank', 'solid', 'dashed', 'dotted', 'dotdash', 'longdash' 'twodash'. transform Logical value. Ignored images exist object. TRUE, spatial transformation instructions saved image alignment image img_name applied. relevant images registered SPATA2 object. img_alpha Numeric value. Sets transparency image. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. unit Character value. Units x- y-axes. Defaults 'px'. SI unit specified, uses ggpLayerAxesSI() default parameters. Add layer manually + ggpLayerAxesSI(...) control.","code":""},{"path":"/reference/plotImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot image with ggplot2 — plotImage","text":"ggplot.","code":""},{"path":"/reference/plotImage.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Plot image with ggplot2 — plotImage","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/plotImage.html","id":"image-visualization-with-ggplot-","dir":"Reference","previous_headings":"","what":"Image visualization with ggplot2","title":"Plot image with ggplot2 — plotImage","text":"comparing output ggplot() + ggpLayerImage() image plotting functions, may notice image appears horizontally flipped plotted using ggpLayerImage(). behavior due use Cartesian coordinate system SPATA2, pixel coordinates c(width = 1, height = 1) plotted left side bottom. contrast, functions like EBImage::display() graphics::plot() use image space coordinate system, pixel heights start top. Consequently, image space, pixel c(width = 1, height = 1) displayed top resulting mirror inverted visualization image. chose use Cartesian coordinate system SPATA2 believe provides intuitive framework spatial alignment tissue, spatial annotations, spatial trajectories, barcoded sots, single cells, etc. coordinates corresponding data.frames provided form x- y-variables. See getCoordsDf(), getImgAnnOutlineDf(), getTissueOutlineDf() etc. prefer view image regular orientation, can use flipAll() function object, specifying axis = \"horizontal\", reverse effect.","code":""},{"path":"/reference/plotImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot image with ggplot2 — plotImage","text":"","code":"library(SPATA2) library(patchwork)  object <- loadExampleObject(\"UKF275T\")  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    inner_borders = FALSE,    force1 = TRUE    )  # range of hypoxia annotation hr <- getSpatAnnRange(object, id = \"hypoxia_ann\")  hr_ggpL <- ggpLayerSpatAnnOutline(object, ids = \"hypoxia_ann\")  plotSurface(object, \"HM_HYPOXIA\") + hr_ggpL  p_rect <-  plotImage(object) +  hr_ggpL +  ggpLayerRect(object, xrange = hr$x, yrange = hr$y)  p_zoomed <-  plotImage(object) +  ggpLayerZoom(object, xrange = hr$x, yrange = hr$y)  p_rect + p_zoomed"},{"path":"/reference/plotImageAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — plotImageAnnotations","title":"Deprecated — plotImageAnnotations","text":"Deprecated favor plotSpatialAnnotations()","code":""},{"path":"/reference/plotImageAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — plotImageAnnotations","text":"","code":"plotImageAnnotations(...)"},{"path":"/reference/plotImageBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot image with R base plotting — plotImageBase","title":"Plot image with R base plotting — plotImageBase","text":"Plots histology image raster.","code":""},{"path":"/reference/plotImageBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot image with R base plotting — plotImageBase","text":"","code":"plotImageBase(object, ...)  # S4 method for class 'SPATA2' plotImageBase(object, xrange = NULL, yrange = NULL, axes = FALSE, ...)  # S4 method for class 'SpatialData' plotImageBase(   object,   img_name = activeImage(object),   xrange = NULL,   yrange = NULL,   scale_fct = 1,   axes = TRUE,   ... )  # S4 method for class 'HistoImage' plotImageBase(   object,   img_name = activeImage(object),   xrange = NULL,   yrange = NULL,   scale_fct = 1,   axes = TRUE,   ... )  # S4 method for class 'Image' plotImageBase(   object,   scale_fct = 1,   xrange = NULL,   yrange = NULL,   axes = TRUE,   ... )"},{"path":"/reference/plotImageBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot image with R base plotting — plotImageBase","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/plotImageBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot image with R base plotting — plotImageBase","text":"plot immediately plotted.","code":""},{"path":"/reference/plotImageMask.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot pixel content — plotImageMask","title":"Plot pixel content — plotImageMask","text":"Visualizes results identifyPixelContent(). plotImageMask(): Distinguishes pixel back- foreground. Foreground tissue. plotPixelContent(): Visualizes classification pixel detail.","code":""},{"path":"/reference/plotImageMask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot pixel content — plotImageMask","text":"","code":"plotImageMask(object, ...)  # S4 method for class 'SPATA2' plotImageMask(   object,   img_name = activeImage(object),   clr_fg = \"black\",   clr_bg = \"white\" )  # S4 method for class 'SpatialData' plotImageMask(   object,   img_name = activeImage(object),   clr_fg = \"black\",   clr_bg = \"white\" )  # S4 method for class 'HistoImage' plotImageMask(object, clr_fg = \"black\", clr_bg = \"white\")  plotPixelContent(object, ...)  # S4 method for class 'SPATA2' plotPixelContent(   object,   img_name = activeImage(object),   clrp = \"sifre\",   clr_bg = \"white\",   clr_fragments = \"red\",   clr_tissue = \"forestgreen\",   clr_artefact = \"blue\",   type = FALSE,   clrp_adjust = NULL )  # S4 method for class 'SpatialData' plotPixelContent(   object,   img_name = activeImage(object),   clrp = \"sifre\",   clr_bg = \"white\",   clr_fragments = \"red\",   clr_tissue = \"forestgreen\",   clr_artefact = \"blue\",   type = TRUE,   clrp_adjust = NULL )  # S4 method for class 'HistoImage' plotPixelContent(   object,   clrp = \"sifre\",   clr_bg = \"white\",   clr_fragments = \"red\",   clr_tissue = \"forestgreen\",   clr_artefact = \"blue\",   type = TRUE,   clrp_adjust = NULL )"},{"path":"/reference/plotImageMask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot pixel content — plotImageMask","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). clr_fg, clr_bg Character values. Color display foreground background mask. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clr_artefact, clr_fragments, clr_tissue Character values. Colors display content type type = FALSE. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group.","code":""},{"path":"/reference/plotImageMask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot pixel content — plotImageMask","text":"ggplot.","code":""},{"path":"/reference/plotImageMask.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot pixel content — plotImageMask","text":"Always plots original justification image without transformations.","code":""},{"path":"/reference/plotImages.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot histology images (ggplot2) — plotImages","title":"Plot histology images (ggplot2) — plotImages","text":"Plots images registered SPATA2 object.","code":""},{"path":"/reference/plotImages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot histology images (ggplot2) — plotImages","text":"","code":"plotImages(object, ...)  # S4 method for class 'SPATA2' plotImages(   object,   img_names = getImageNames(object),   by_section = TRUE,   outline = FALSE,   outline_ref = FALSE,   fragments = TRUE,   line_alpha = line_alpha_ref * 0.75,   line_alpha_ref = 1,   line_color = \"black\",   line_color_ref = \"red\",   line_size = 0.5,   line_size_ref = line_size * 1.5,   transform = TRUE,   img_alpha = 1,   against_ref = FALSE,   alignment_eval = FALSE,   ncol = NULL,   nrow = NULL,   verbose = TRUE )  # S4 method for class 'SpatialData' plotImages(   object,   img_names = NULL,   ncol = NULL,   nrow = NULL,   image = TRUE,   outline = FALSE,   outline_ref = FALSE,   by_section = TRUE,   fragments = TRUE,   line_alpha = line_alpha_ref * 0.75,   line_alpha_ref = 1,   line_color = \"black\",   line_color_ref = \"red\",   line_size = 0.5,   line_size_ref = line_size * 1.5,   transform = TRUE,   img_alpha = 1,   against_ref = FALSE,   alignment_eval = FALSE,   verbose = TRUE )"},{"path":"/reference/plotImages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot histology images (ggplot2) — plotImages","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional arguments given plotImage(). img_names Character vector NULL. character, specifies images name. NULL, images plotted. by_section Logical value. TRUE, default, outline every tissue section identified used. outline Logical value. TRUE, images plotted outline identified identifyTissueOutline(..., method = \"image\"). outline_ref Logical value. TRUE, images plotted outline identified identifyTissueOutline(..., method = \"image\") reference image. line_alpha Numeric. Affects alpha main lines plot. line_color, line_color_ref Character value. color outline outline = TRUE /outline_ref = TRUE. line_size, line_size_ref Character value. linewidth outline outline = TRUE /outline_ref = TRUE. transform Logical value. instructions image transformation set alignImage() applied? img_alpha Numeric value. Sets transparency image. nrow, ncol Numeric values NULL. Used arrange multiple plots. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/plotImages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot histology images (ggplot2) — plotImages","text":"ggplot assembled via patchwork::wrap_plots().","code":""},{"path":"/reference/plotImages.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Plot histology images (ggplot2) — plotImages","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/plotImages.html","id":"image-visualization-with-ggplot-","dir":"Reference","previous_headings":"","what":"Image visualization with ggplot2","title":"Plot histology images (ggplot2) — plotImages","text":"comparing output ggplot() + ggpLayerImage() image plotting functions, may notice image appears horizontally flipped plotted using ggpLayerImage(). behavior due use Cartesian coordinate system SPATA2, pixel coordinates c(width = 1, height = 1) plotted left side bottom. contrast, functions like EBImage::display() graphics::plot() use image space coordinate system, pixel heights start top. Consequently, image space, pixel c(width = 1, height = 1) displayed top resulting mirror inverted visualization image. chose use Cartesian coordinate system SPATA2 believe provides intuitive framework spatial alignment tissue, spatial annotations, spatial trajectories, barcoded sots, single cells, etc. coordinates corresponding data.frames provided form x- y-variables. See getCoordsDf(), getImgAnnOutlineDf(), getTissueOutlineDf() etc. prefer view image regular orientation, can use flipAll() function object, specifying axis = \"horizontal\", reverse effect.","code":""},{"path":[]},{"path":"/reference/plotImages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot histology images (ggplot2) — plotImages","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  plotImages(object)"},{"path":"/reference/plotLoglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Bayes Space logliks — plotLoglik","title":"Plot Bayes Space logliks — plotLoglik","text":"Visualizes results BayesSpace::qTune() determine optimal number clusters.","code":""},{"path":"/reference/plotLoglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Bayes Space logliks — plotLoglik","text":"","code":"plotLoglik(object, elbow = TRUE)"},{"path":"/reference/plotLoglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Bayes Space logliks — plotLoglik","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/plotLoglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Bayes Space logliks — plotLoglik","text":"ggplot.","code":""},{"path":"/reference/plotLoglik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Bayes Space logliks — plotLoglik","text":"function work results runBayesSpaceClustering() required.","code":""},{"path":"/reference/plotLoglik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Bayes Space logliks — plotLoglik","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  # this might take some time... object <- runBayesSpaceClustering(object, name = \"bspace\", qs = 3:15)  plotLoglik(object)"},{"path":"/reference/plotMolecules2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot molecules in 2D space — plotMolecules2D","title":"Plot molecules in 2D space — plotMolecules2D","text":"Visualizes positions molecules 2D space sample.","code":""},{"path":"/reference/plotMolecules2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot molecules in 2D space — plotMolecules2D","text":"","code":"plotMolecules2D(   object,   molecules,   pt_alpha = 0.5,   pt_size = 1,   pt_clrp = NULL,   clrp_adjust = NULL,   use_scattermore = TRUE,   xrange = getCoordsRange(object)$x,   yrange = getCoordsRange(object)$y,   display_facets = TRUE,   nrow = NULL,   ncol = NULL,   assay_name = activeAssay(object),   ... )"},{"path":"/reference/plotMolecules2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot molecules in 2D space — plotMolecules2D","text":"object object class SPATA2 , case S4 generics, objects classes method defined. molecules Character vector. molecules interest. pt_alpha Numeric value. Specifies degree transparency points. pt_size Numeric value. Specifies size points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. use_scattermore Logical value. TRUE, data points plotted scattermore::geom_scattermore() allows quick plotting several thousand data points. number data points plotted bigger 10.000 used anyway. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. display_facets Logical value. set TRUE plot split via ggplot2::facet_wrap() variable gets subplot. nrow, ncol Numeric values NULL. Used arrange multiple plots. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/plotMolecules2D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot molecules in 2D space — plotMolecules2D","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/plotMosaicplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mosaic plot — plotMosaicplot","title":"Plot mosaic plot — plotMosaicplot","text":"Plots mosaic plot two grouping variables.","code":""},{"path":"/reference/plotMosaicplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mosaic plot — plotMosaicplot","text":"","code":"plotMosaicplot(object, grouping, fill_by, clrp = NULL, clrp_adjust = NULL, ...)"},{"path":"/reference/plotMosaicplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mosaic plot — plotMosaicplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable plotted x-axis. fill_by Character value. grouping variable used fill mosaic. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. ... Additional arguments given ggmosaic::geom_mosaic()","code":""},{"path":"/reference/plotMosaicplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot mosaic plot — plotMosaicplot","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/plotMosaicplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot mosaic plot — plotMosaicplot","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  plotMosaicPlot(object, grouping = \"seurat_clusters\", fill_by = \"bayes_space\")"},{"path":"/reference/plotOverview.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot overview of S4 objects — plotOverview","title":"Plot overview of S4 objects — plotOverview","text":"Assigns every numeric variable model fitted best plots p-value fit fit evaluation.","code":""},{"path":"/reference/plotOverview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot overview of S4 objects — plotOverview","text":"","code":"plotOverview(object, ...)  # S4 method for class 'SpatialAnnotationScreening' plotOverview(   object,   eval = \"ias_score\",   pval = \"p_value_mean_adjusted\",   pt_alpha = 0.75,   pt_color = \"black\",   pt_size = 1,   label_vars = NULL,   label_alpha = 0.9,   label_color = \"black\",   label_size = 2,   model_subset = NULL,   nrow = NULL,   ncol = NULL,   ... )  # S4 method for class 'SpatialTrajectoryScreening' plotOverview(   object,   eval = \"sts_score\",   pval = \"p_value\",   pt_alpha = 0.75,   pt_color = \"black\",   pt_size = 1,   label_vars = NULL,   label_alpha = 0.9,   label_color = \"black\",   label_size = 2,   model_subset = NULL,   model_remove = NULL,   nrow = NULL,   ncol = NULL,   ... )"},{"path":"/reference/plotOverview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot overview of S4 objects — plotOverview","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. eval Character value. variable use x-axis. pval Character value. variable use y-axis. pt_alpha Numeric value. Specifies degree transparency points. pt_size Numeric value. Specifies size points. label_vars Character value, numeric value NULL. Useful highlight exact position/evalation variables. character, specifies variables labeled. numeric, specifies top n variables labeled. NULL, ignored. nrow, ncol Numeric values NULL. Used arrange multiple plots.","code":""},{"path":"/reference/plotPcaElbow.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA Elbow Plot — plotPcaElbow","title":"Plot PCA Elbow Plot — plotPcaElbow","text":"function generates elbow plot principal component analysis (PCA) given object.","code":""},{"path":"/reference/plotPcaElbow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA Elbow Plot — plotPcaElbow","text":"","code":"plotPcaElbow(object, elbow = FALSE)"},{"path":"/reference/plotPcaElbow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA Elbow Plot — plotPcaElbow","text":"object object class SPATA2 , case S4 generics, objects classes method defined. elbow Logical. TRUE, vertical line added plot indicating elbow point.","code":""},{"path":"/reference/plotPcaElbow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA Elbow Plot — plotPcaElbow","text":"ggplot.","code":""},{"path":"/reference/plotPcaElbow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot PCA Elbow Plot — plotPcaElbow","text":"function calculates standard deviation principal component plots . elbow parameter set TRUE, vertical line added elbow point, calculated using helper function find_elbow_point().","code":""},{"path":"/reference/plotPcaVariation.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCA Variation — plotPcaVariation","title":"Plot PCA Variation — plotPcaVariation","text":"Displays scree plot current principal component analysis data stored object.","code":""},{"path":"/reference/plotPcaVariation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCA Variation — plotPcaVariation","text":"","code":"plotPcaVariation(object, n_pcs = NULL, ...)"},{"path":"/reference/plotPcaVariation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCA Variation — plotPcaVariation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. n_pcs Numeric value NULL. numeric, specifies number principal components use. NULL, principal components used (computed runPCA()). ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/plotPcaVariation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCA Variation — plotPcaVariation","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/plotRiverplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot riverplots — plotRiverplot","title":"Plot riverplots — plotRiverplot","text":"Visualizes overlapping proportions multiple grouping variables. See details information.","code":""},{"path":"/reference/plotRiverplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot riverplots — plotRiverplot","text":"","code":"plotRiverplot(   object,   grouping_variables,   fill_by = NULL,   strata_alpha = 0,   strata_color = \"white\",   strata_fill = \"white\",   strata_width = 1/3,   allv_color = \"white\",   allv_type = \"xspline\",   allv_width = 1/3,   clrp = NULL,   clrp_adjust = NULL,   ... )"},{"path":"/reference/plotRiverplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot riverplots — plotRiverplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping_variables Character vector. Names grouping variables want include riverplot. fill_by Character value NULL. character, denotes grouping variable visualized color (fill) streamlines (alluvias) stratas. strata_alpha Numeric value. Denotes transparency stratas. strata_color Character value. Denotes color used borders strata. strata_fill Character value. Denotes color used fill strata. strata_width, allv_width Numeric value. Denotes width stratum, proportion distance axes. allv_type Character value. Denotes type curve used produce flows. Use validAlluvialTypes() obtain valid input options. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. ... Additional arguments given scale_color_add_on().","code":""},{"path":"/reference/plotRiverplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot riverplots — plotRiverplot","text":"ggplot.","code":""},{"path":"/reference/plotRiverplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot riverplots — plotRiverplot","text":"explanation vocabulary essentials riverplots check website package ggalluvial https://corybrunson.github.io/ggalluvial/articles/ggalluvial.html.","code":""},{"path":"/reference/plotRiverplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot riverplots — plotRiverplot","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  plotRiverplot(object, grouping_variables = c(\"seurat_clusters\", \"bayes_space\"), fill_by = \"bayes_space\")"},{"path":"/reference/plotSasBarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot SAS barplot — plotSasBarplot","title":"Plot SAS barplot — plotSasBarplot","text":"Plots changes grouping proportion distance spatial annotation.","code":""},{"path":"/reference/plotSasBarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot SAS barplot — plotSasBarplot","text":"","code":"plotSasBarplot(   object,   grouping,   id = idSA(object),   distance = distToEdge(object, id),   resolution = getCCD(object) * 2,   unit = getDefaultUnit(object),   angle_span = c(0, 360),   round = 2,   clrp = NULL,   clrp_adjust = NULL,   position = \"fill\",   bar_width = 0.9,   expand_x = c(0.025, 0),   expand_y = c(0.0125, 0),   verbose = NULL,   ... )"},{"path":"/reference/plotSasBarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot SAS barplot — plotSasBarplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). unit Character value. unit distance spatial annotation displayed x-axis. FALSE, plots bin numbers instead. angle_span Numeric vector length 2. Confines area screened angle span relative center closest spatial annotation. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. expand_x, expand_y Given argument expand ggplot2:scale_x/y_continuous(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Needed arguments depend input/unit combination. one 'px', argument object must specified.","code":""},{"path":"/reference/plotSasBarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot SAS barplot — plotSasBarplot","text":"ggplot.","code":""},{"path":"/reference/plotSasBarplot.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Plot SAS barplot — plotSasBarplot","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/plotSasBarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot SAS barplot — plotSasBarplot","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  object <-  createNumericAnnotations(    object = object,    variable = \"HM_HYPOXIA\",    threshold = \"kmeans_high\",    id = \"hypoxia_ann\",    inner_borders = FALSE,    force1 = TRUE    )  plotSurface(object, color_by = \"bayes_space\") +   ggpLayerSpatAnnOutline(object, ids = \"hypoxia_ann\")  plotSasBarplot(object, grouping = \"bayes_space\", id = \"hypoxia_ann\")"},{"path":"/reference/plotSasHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot SAS heatmap — plotSasHeatmap","title":"Plot SAS heatmap — plotSasHeatmap","text":"Plots gene expression changes distance spatial annotation using heatmap.","code":""},{"path":"/reference/plotSasHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot SAS heatmap — plotSasHeatmap","text":"","code":"plotSasHeatmap(   object,   variables,   ids = idSA(object),   distance = \"dte\",   resolution = recSgsRes(object),   core = FALSE,   arrange_rows = \"none\",   unit = getDefaultUnit(object),   smooth_span = 0.3,   multiplier = 10,   clrsp = NULL,   border_linealpha = 0.75,   border_linecolor = \"black\",   border_linesize = 1,   border_linetype = \"dashed\",   .f = NULL,   .cols = dplyr::everything(),   verbose = NULL,   ... )"},{"path":"/reference/plotSasHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot SAS heatmap — plotSasHeatmap","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. numeric variables included screening process. Makre sure correct matrix active respective assays. ids Character vector. Specifies IDs spatial annotations interest. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). arrange_rows Alter way rows heatmap displayed order highlight patterns. Currently either 'maxima', 'minima' 'input'. 'input', variables displayed order provided argument variables. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). multiplier Numeric value. better visualization transient pattern smoothed loess fit. total number predicted values (via stats::predict()) number bins multiplied input argument. clrsp Character value. Specifies color spectrum used represent continuous values numeric variables. Run validColorSpectra() obtain valid input options. border_linealpha, border_linecolor, border_linesize, border_linetype Given ggplot2::geom_vline(). Adjusts appearance vertical line represents border spatial annotation. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/plotSasHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot SAS heatmap — plotSasHeatmap","text":"ggplot.","code":""},{"path":"/reference/plotSasHeatmap.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Plot SAS heatmap — plotSasHeatmap","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/plotSasHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot SAS heatmap — plotSasHeatmap","text":"","code":"library(SPATA2) library(ggplot2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  ids <- getSpatAnnIds(object, tags = c(\"necrotic\", \"compr\"), test = \"identical\")  object <- normalizeCounts(object, activate = T)  # visualize with lines plotSasLineplot(object, ids = ids, variables = c(\"VEGFA\", \"HM_HYPOXIA\", \"RCTM_TCR_SIGNALING\", \"CD74\")) +   labs(x = \"Distance to Necrosis\")  # visualize with ridgeplots plotSasRidgeplot(object, ids = ids, variables = c(\"VEGFA\", \"HM_HYPOXIA\", \"RCTM_TCR_SIGNALING\", \"CD74\")) +   labs(x = \"Distance to Necrosis\")  # visualize with a heatmap plotSasHeatmap(object, ids = ids, variables = c(\"VEGFA\", \"HM_HYPOXIA\", \"RCTM_TCR_SIGNALING\", \"CD74\")) +   labs(x = \"Distance to Necrosis\")"},{"path":"/reference/plotSasLineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot SAS lineplot — plotSasLineplot","title":"Plot SAS lineplot — plotSasLineplot","text":"Plots expression changes distance spatial annotation using lineplots.","code":""},{"path":"/reference/plotSasLineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot SAS lineplot — plotSasLineplot","text":"","code":"plotSasLineplot(   object,   variables,   ids = idSA(object),   distance = \"dte\",   resolution = recSgsRes(object),   core = FALSE,   angle_span = c(0, 360),   smooth_span = 0.2,   smooth_se = TRUE,   unit = getSpatialMethod(object)@unit,   clrp = NULL,   clrp_adjust = NULL,   line_color = NULL,   line_size = 1.5,   display_facets = TRUE,   nrow = NULL,   ncol = NULL,   border_linealpha = 0.75,   border_linecolor = alpha(\"white\", 0),   border_linesize = 1,   border_linetype = \"solid\",   display_eval = FALSE,   eval_size = line_size * 2.5,   ggpLayers = list(),   verbose = NULL,   ... )"},{"path":"/reference/plotSasLineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot SAS lineplot — plotSasLineplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. numeric variables included screening process. Makre sure correct matrix active respective assays. ids Character vector. Specifies IDs spatial annotations interest. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). angle_span Numeric vector length 2. Confines area screened angle span relative center closest spatial annotation. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). unit Character value. unit distance spatial annotation displayed x-axis. FALSE, plots bin numbers instead. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. line_color Character. Affects color main lines plot. line_size Numeric value. Specifies thicknes lines trajectory dynamics displayed. display_facets Logical. set TRUE sub plots every specified gene, gene-set feature displayed via ggplot2::facet_wrap() nrow, ncol Numeric values NULL. Used arrange multiple plots. border_linealpha, border_linecolor, border_linesize, border_linetype Given ggplot2::geom_vline(). Adjusts appearance vertical line represents border spatial annotation. ggpLayers List ggproto-objects added plot. Skim ggpLayer*()-functions options. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Needed arguments depend input/unit combination. one 'px', argument object must specified. facet_by Either 'variables' 'bins_angle'. 'bins_angle' length variables must one. display_border Logical value. TRUE, displays vertical line highlight border spatial annotation runs.","code":""},{"path":"/reference/plotSasLineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot SAS lineplot — plotSasLineplot","text":"ggplot.","code":""},{"path":"/reference/plotSasLineplot.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Plot SAS lineplot — plotSasLineplot","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/plotSasLineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot SAS lineplot — plotSasLineplot","text":"","code":"library(SPATA2) library(ggplot2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  ids <- getSpatAnnIds(object, tags = c(\"necrotic\", \"compr\"), test = \"identical\")  object <- normalizeCounts(object, activate = T)  # visualize with lines plotSasLineplot(object, ids = ids, variables = c(\"VEGFA\", \"HM_HYPOXIA\", \"RCTM_TCR_SIGNALING\", \"CD74\")) +   labs(x = \"Distance to Necrosis\")  # visualize with ridgeplots plotSasRidgeplot(object, ids = ids, variables = c(\"VEGFA\", \"HM_HYPOXIA\", \"RCTM_TCR_SIGNALING\", \"CD74\")) +   labs(x = \"Distance to Necrosis\")  # visualize with a heatmap plotSasHeatmap(object, ids = ids, variables = c(\"VEGFA\", \"HM_HYPOXIA\", \"RCTM_TCR_SIGNALING\", \"CD74\")) +   labs(x = \"Distance to Necrosis\")"},{"path":"/reference/plotSasRidgeplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot SAS rideplot — plotSasRidgeplot","title":"Plot SAS rideplot — plotSasRidgeplot","text":"Plots gene expression changes distance spatial annotation using design ridgeplots.","code":""},{"path":"/reference/plotSasRidgeplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot SAS rideplot — plotSasRidgeplot","text":"","code":"plotSasRidgeplot(   object,   variables,   ids = idSA(object),   distance = distToEdge(object, id),   resolution = recSgsRes(object),   angle_span = c(0, 360),   core = FALSE,   smooth_span = 0.3,   unit = getSpatialMethod(object)@unit,   alpha = 1,   fill = NULL,   clrp = NULL,   clrp_adjust = NULL,   line_color = \"black\",   line_size = 1.5,   border_linealpha = 0.75,   border_linecolor = \"black\",   border_linesize = 1,   border_linetype = \"dashed\",   overlap = 0.5,   strip_pos = \"right\",   free_y = FALSE,   ggpLayers = NULL,   verbose = NULL,   ... )"},{"path":"/reference/plotSasRidgeplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot SAS rideplot — plotSasRidgeplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. numeric variables included screening process. Makre sure correct matrix active respective assays. ids Character vector. Specifies IDs spatial annotations interest. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). angle_span Numeric vector length 2. Confines area screened angle span relative center closest spatial annotation. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). unit Character value. Specifies desired unit. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. border_linealpha, border_linecolor, border_linesize, border_linetype Given ggplot2::geom_vline(). Adjusts appearance vertical line represents border spatial annotation. ggpLayers List ggproto-objects added plot. Skim ggpLayer*()-functions options. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Needed arguments depend input/unit combination. one 'px', argument object must specified. scale Logical value. TRUE, density cell types scaled make comparable. Else, absolute values defined count/unit^2 plotted.","code":""},{"path":"/reference/plotSasRidgeplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot SAS rideplot — plotSasRidgeplot","text":"ggplot.","code":""},{"path":"/reference/plotSasRidgeplot.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Plot SAS rideplot — plotSasRidgeplot","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/plotSasRidgeplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot SAS rideplot — plotSasRidgeplot","text":"","code":"library(SPATA2) library(ggplot2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  ids <- getSpatAnnIds(object, tags = c(\"necrotic\", \"compr\"), test = \"identical\")  object <- normalizeCounts(object, activate = T)  # visualize with lines plotSasLineplot(object, ids = ids, variables = c(\"VEGFA\", \"HM_HYPOXIA\", \"RCTM_TCR_SIGNALING\", \"CD74\")) +   labs(x = \"Distance to Necrosis\")  # visualize with ridgeplots plotSasRidgeplot(object, ids = ids, variables = c(\"VEGFA\", \"HM_HYPOXIA\", \"RCTM_TCR_SIGNALING\", \"CD74\")) +   labs(x = \"Distance to Necrosis\")  # visualize with a heatmap plotSasHeatmap(object, ids = ids, variables = c(\"VEGFA\", \"HM_HYPOXIA\", \"RCTM_TCR_SIGNALING\", \"CD74\")) +   labs(x = \"Distance to Necrosis\")"},{"path":"/reference/plotScatterplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot numeric variables as a scatterplot — plotScatterplot","title":"Plot numeric variables as a scatterplot — plotScatterplot","text":"Use argument variables denote numeric variables interest. First one mapped x-axis second one y-axis.","code":""},{"path":"/reference/plotScatterplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot numeric variables as a scatterplot — plotScatterplot","text":"","code":"plotScatterplot(   object,   variables,   smooth = NULL,   smooth_clr = NULL,   smooth_method = NULL,   smooth_se = NULL,   smooth_span = NULL,   pt_alpha = NULL,   pt_clr = NULL,   pt_size = NULL,   verbose = NULL,   ... )"},{"path":"/reference/plotScatterplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot numeric variables as a scatterplot — plotScatterplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. names data variables interest. smooth Logical. TRUE, loess fit used smooth values. smooth_clr Character value. color display smoothed model. smooth_method smoothing method used specified single character value (e.g. \"lm\", \"glm\", \"gam\", \"loess\"). smooth_se Logical. set TRUE confidence interval smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). pt_alpha Numeric value. Specifies degree transparency points. pt_clr Character value. Specifies color points. pt_size Numeric value. Specifies size points. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional arguments given ggplot2::geom_smooth().","code":""},{"path":"/reference/plotScatterplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot numeric variables as a scatterplot — plotScatterplot","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/plotScatterplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot numeric variables as a scatterplot — plotScatterplot","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF275T_diet  plotScatterplot(object, variables = c(\"HM_HYPOXIA\", \"METRN\"))"},{"path":"/reference/plotSpatialAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial annotations — plotSpatialAnnotations","title":"Plot spatial annotations — plotSpatialAnnotations","text":"Plots image sections containing areas annotated via createGroupAnnotations(), createImageAnnotations() createNumericAnnotations() .","code":""},{"path":"/reference/plotSpatialAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial annotations — plotSpatialAnnotations","text":"","code":"plotSpatialAnnotations(object, ...)  # S4 method for class 'SPATA2' plotSpatialAnnotations(   object,   ids = NULL,   tags = NULL,   test = \"any\",   expand = \"25%\",   square = TRUE,   outline = TRUE,   inner = TRUE,   unit = getSpatialMethod(object)@unit,   round = 2,   line_color = \"black\",   line_size = 1.5,   line_type = \"solid\",   fill = \"orange\",   alpha = 0.25,   sb_dist = FALSE,   display_title = FALSE,   display_subtitle = TRUE,   display_caption = FALSE,   ggpLayers = list(),   nrow = NULL,   ncol = NULL,   plot = TRUE,   ... )  # S4 method for class 'SpatialData' plotSpatialAnnotations(   object,   ids = NULL,   tags = NULL,   test = \"any\",   expand = \"25%\",   square = TRUE,   outline = TRUE,   inner = TRUE,   unit = getSpatialMethod(object)@unit,   round = 2,   line_color = \"black\",   line_size = 1.5,   line_type = \"solid\",   fill = \"orange\",   alpha = 0.25,   sb_dist = FALSE,   display_title = FALSE,   display_subtitle = TRUE,   display_caption = FALSE,   ggpLayers = list(),   nrow = NULL,   ncol = NULL,   plot = TRUE,   ... )"},{"path":"/reference/plotSpatialAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial annotations — plotSpatialAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional arguments given ggpLayerScaleBarSI() input sb_dist valid distance measure. Exception: xrange yrange set ranges image cropped display spatial annotation. tags Character vector NULL. character, tags image annotation selection. See section Selection spatial annotations information. test Character value. One c(''. '', 'identical', 'not_identical', 'none'). Specifies input tags used select spatial annotations. See section Selection spatial annotations information. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information. square Logical value. image annotations come variable shapes different horizontal vertical diameters. Therefore, height width image section usually equal. square = TRUE, cropped section image contains annotated structure forced square: bigger diameter taken default. E.g. horizontal diameter image annotation 1mm vertical diameter 1.5mm, output image height width 1.5mm. , terms coordinates, x-range y-range 1.5mm. Processing image output depending argument expand happens afterwards. outline Logical value. TRUE, polygon drawn around exact extent annotated structure. inner Logical value. applies image annotation contains secondary image annotation within area. FALSE, inner borders image annotation included output. unit Character value. unit x- y-axis text displayed. Use validUnitsOfLengthSI() obtain valid input options. round Numeric value FALSE. numeric unit px, rounds axes text. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. line_type Character. line type. One 'blank', 'solid', 'dashed', 'dotted', 'dotdash', 'longdash' 'twodash'. fill Character value NA. character, specifies color outline spatial annotation filled. sb_dist Distance measure FALSE. distance measure, defines distance SI units scale bar illustrates. Scale bar plotted ggpLayerScaleBarSI(). FALSE, scale bar plotted. display_title Logical value. TRUE, number spatial annotation plotted title. display_subtitle Logical value. TRUE, ID spatial annotation plotted subtitle. display_caption Logial value. TRUE, tags spatial annotation plotted caption. ggpLayers List ggproto-objects added plot. Skim ggpLayer*()-functions options. nrow, ncol Numeric values NULL. Used arrange multiple plots. plot Logical value. TRUE, plots plotted immediately via gridExtra.grid.arrange() list plots returned invisibly. Else list plots simply returned.","code":""},{"path":"/reference/plotSpatialAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial annotations — plotSpatialAnnotations","text":"list ggplots. slot contains plot visualizes spatial annotation.","code":""},{"path":"/reference/plotSpatialAnnotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot spatial annotations — plotSpatialAnnotations","text":"first, image section contains spatial annotation cropped contains extent polygon represents borders annotation (ranges can obtained getSpatAnnRange()). Using arguments square expand can used expand displayed image section individually.","code":""},{"path":"/reference/plotSpatialAnnotations.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Plot spatial annotations — plotSpatialAnnotations","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/plotSpatialAnnotations.html","id":"expansion-of-cropped-image-sections","dir":"Reference","previous_headings":"","what":"Expansion of cropped image sections","title":"Plot spatial annotations — plotSpatialAnnotations","text":"argument expand versatile way, specify cropped image section extracted. want cropped image , specify expand = 0. Else, multiple options. general, expand takes three kinds values, namely percentages, distances distance exclamations. Percentage: string suffixed %. E.g. expand = '50%' adds 50% distance center border image annotation image frame. Distance measures: pixel European units length. E.g. expand =  list(x = '1mm') expands x-axis sides 1mm. expand = list(x = c('0.5mm', 1.5mm') expands x-axis left side 0.5mm right side 1.5mm. Exclam distance measures: Distance measure exclamation mark suffix. E.g. expand = '1mm!' centers image forces axis length 1 millimeter. (Example 5) Depending values specified different parts image can expanded. Single values, like expand = 50, recycled: Every end image axis expanded 50 pixel. (Example 2) Vectors length two, like expand = c('1mm', '2mm'), recycled: beginning axis expanded 1 millimeter. end axis expanded 2mm. (Example 3) Named lists can precise. expand = list(x = c('1mm', '0.5mm'), y = c('0.25mm', '1mm')). Applies vectors expand corresponding axis. (Example 4) Using exclam input side axis must specified axis fixed whole. E.g expand = list(x = '1mm!', y = '2mm!') results output expand = list(x = c('1mm!', '1mm!'), y = c('2mm!', '2mm!').","code":""},{"path":"/reference/plotSpatialAnnotations.html","id":"selection-of-spatial-annotations","dir":"Reference","previous_headings":"","what":"Selection of spatial annotations","title":"Plot spatial annotations — plotSpatialAnnotations","text":"Selection spatial annotations via arguments ids, class, tags test works three steps: First, ids character prefilters annotations ID specified ones submitted next steps. NULL, annotations submitted next steps. Secondd, class character filters annotations remaining first step class. NULL, step skipped. Third, tags character used combination test select spatial annotations remain second step based meta data tagged . multiple options: Argument test set '' 1: included, image annotation must tagged least one input tags. Argument test set '' 2: included, image annotation must tagged input tags. Can contain tags specified. Argument test set 'identical' 3: included, image annotation must tagged input tags. Can tagged anything else. Argument test set not_identical 4: included, image annotation must tagged combination input tags. Argument test set 'none' 5: included, image annotation must contain input tags. tags NULL, step skipped. Therefore, ids, class tags NULL, default, annotations selected subsetting steps skipped. Eventually, remaining spatial annotations submitted whatever respective function .","code":""},{"path":[]},{"path":"/reference/plotSpatialAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spatial annotations — plotSpatialAnnotations","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  ids <- getSpatAnnIds(object, tags = c(\"necrotic\", \"compr\"), test = \"identical\")  plotSpatialAnnotations(object, ids = ids)  plotSpatialAnnotations(object, ids = ids, square = T)  plotSpatialAnnotations(object, id = ids, fill = \"orange\", square = T, expand = \"50%\")"},{"path":"/reference/plotSpatialTrajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial trajectories — plotSpatialTrajectories","title":"Plot spatial trajectories — plotSpatialTrajectories","text":"Displays spatial course spatial trajectory drawn createSpatialTrajectories() surface plot. Increase transparency via argument pt_alpha highlight trajectory's course.","code":""},{"path":"/reference/plotSpatialTrajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial trajectories — plotSpatialTrajectories","text":"","code":"plotSpatialTrajectories(   object,   ids = NULL,   color_by = NULL,   alpha_by = NULL,   method_gs = NULL,   smooth = NULL,   smooth_span = NULL,   width = NULL,   pt_size = NULL,   pt_alpha = 0.5,   pt_alpha2 = 0.9,   pt_clr = NULL,   pt_clrp = NULL,   clrp_adjust = NULL,   pt_clrsp = NULL,   sgmt_clr = NULL,   sgmt_size = NULL,   display_facets = FALSE,   display_image = NULL,   display_title = NULL,   uniform_genes = NULL,   arrow = ggplot2::arrow(length = ggplot2::unit(x = 0.125, \"inches\")),   nrow = NULL,   ncol = NULL,   xrange = getCoordsRange(object)[[\"x\"]],   yrange = getCoordsRange(object)[[\"y\"]],   verbose = NULL,   ... )"},{"path":"/reference/plotSpatialTrajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial trajectories — plotSpatialTrajectories","text":"object object class SPATA2 , case S4 generics, objects classes method defined. color_by Character value. variables color data points. method_gs Character value. method according gene sets handled specified character length one. can either 'mean one 'gsva', 'ssgsea', 'zscore', 'plage'. latter four given gsva::GSVA(). smooth Logical. TRUE, loess fit used smooth values. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). pt_size Numeric value. Specifies size points. pt_alpha Numeric value. Specifies degree transparency points. pt_alpha2 Numeric value. Specifies transparency spots fall trajectory's reach. pt_clr Character value. Specifies color points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. pt_clrsp color spectrum used specified variable displayed color continuous. Run validColorSpectra() see valid input. sgmt_size size segment arrrow specified numeric value. display_facets Logical value. set TRUE plot split via ggplot2::facet_wrap() variable gets subplot. display_image Logical. set TRUE histology image specified sample displayed underneath plot. display_title Logical value. set TRUE informative title displayed. uniform_genes Character value. set 'discard' genes uniformly expressed across barcode-spots specified coordinates data.frame discarded. set 'keep' kept. nrow, ncol Numeric values NULL. Used arrange multiple plots. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/plotSpatialTrajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial trajectories — plotSpatialTrajectories","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/plotSpatialTrajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot spatial trajectories — plotSpatialTrajectories","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  plotSpatialTrajectories(object, color_by = \"histology\", pt_clrp = \"npg\", ids = \"horizontal_mid\")"},{"path":"/reference/plotStatisticsInteractive.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot distribution of variables interactively — plotStatisticsInteractive","title":"Plot distribution of variables interactively — plotStatisticsInteractive","text":"Opens interactive application wihch variables data.frame given input argument spata_df can plotted. Apart variables named barcodes, sample, x y variables considered.","code":""},{"path":"/reference/plotStatisticsInteractive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot distribution of variables interactively — plotStatisticsInteractive","text":"","code":"plotStatisticsInteractive(spata_df)"},{"path":"/reference/plotStatisticsInteractive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot distribution of variables interactively — plotStatisticsInteractive","text":"spata_df spata data.frame","code":""},{"path":"/reference/plotStsBarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot STS barplot — plotStsBarplot","title":"Plot STS barplot — plotStsBarplot","text":"Displays discrete variables along trajectory.","code":""},{"path":"/reference/plotStsBarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot STS barplot — plotStsBarplot","text":"","code":"plotStsBarplot(   object,   grouping,   id = idST(object),   resolution = getCCD(object) * 2,   unit = getDefaultUnit(object),   round = 2,   clrp = NULL,   clrp_adjust = NULL,   position = \"fill\",   bar_width = 0.9,   expand_x = c(0.025, 0),   expand_y = c(0.0125, 0),   verbose = NULL,   ... )"},{"path":"/reference/plotStsBarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot STS barplot — plotStsBarplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. expand_x, expand_y Given argument expand ggplot2:scale_x/y_continuous(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/plotStsBarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot STS barplot — plotStsBarplot","text":"ggplot.","code":""},{"path":"/reference/plotStsBarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot STS barplot — plotStsBarplot","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  plotStsBarplot(object, grouping = \"histology\", id = \"horizontal_mid\")"},{"path":"/reference/plotStsHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot STS heatmap — plotStsHeatmap","title":"Plot STS heatmap — plotStsHeatmap","text":"Displays variable-expression values along trajectory direction smoothed heatmap (left right).","code":""},{"path":"/reference/plotStsHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot STS heatmap — plotStsHeatmap","text":"","code":"plotStsHeatmap(   object,   variables,   id = idST(object),   width = getTrajectoryLength(object, id),   arrange_rows = \"none\",   unit = getDefaultUnit(object),   smooth_span = 0.3,   multiplier = 10,   clrsp = NULL,   .f = NULL,   .cols = dplyr::everything(),   verbose = NULL,   ... )"},{"path":"/reference/plotStsHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot STS heatmap — plotStsHeatmap","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. names data variables interest. arrange_rows Alter way rows heatmap displayed order highlight patterns. Currently either 'maxima', 'minima' 'input'. 'input', variables displayed order provided argument variables. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). multiplier Numeric value. better visualization transient pattern smoothed loess fit. total number predicted values (via stats::predict()) number bins multiplied input argument. clrsp Character value. Specifies color spectrum used represent continuous values numeric variables. Run validColorSpectra() obtain valid input options. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/plotStsHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot STS heatmap — plotStsHeatmap","text":"ggplot.","code":""},{"path":"/reference/plotStsHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot STS heatmap — plotStsHeatmap","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  object <- normalizeCounts(objcect, activate = TRUE)  genes <- c(\"EGFR\", \"MBP\", \"MAG\", \"SNAP25\")  plotStsHeatmap(object, id = \"horizontal_mid\", variables = genes)  plotStsLineplot(object, id = \"horizontal_mid\", variables = genes)  plotStsRidgeplot(object, id = \"horizontal_mid\", variables = genes)"},{"path":"/reference/plotStsLineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot STS line- and ridgeplot — plotStsLineplot","title":"Plot STS line- and ridgeplot — plotStsLineplot","text":"Displays values along trajectory direction smoothed lineplot ridgeplot.","code":""},{"path":"/reference/plotStsLineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot STS line- and ridgeplot — plotStsLineplot","text":"","code":"plotStsLineplot(   object,   variables,   id = idST(object),   width = getTrajectoryLength(object, id),   unit = getSpatialMethod(object)@unit,   smooth_span = 0.2,   smooth_se = TRUE,   line_color = NULL,   line_size = 1.5,   clrp = NULL,   clrp_adjust = NULL,   display_facets = TRUE,   display_eval = FALSE,   eval_size = 4,   ggpLayers = NULL,   ncol = NULL,   nrow = NULL,   verbose = NULL,   ... )  plotStsRidgeplot(   object,   variables,   id = idST(object),   width = getTrajectoryLength(object, id),   unit = getSpatialMethod(object)@unit,   smooth_span = 0.2,   smooth_se = TRUE,   line_color = NULL,   line_size = 1.5,   clrp = NULL,   clrp_adjust = NULL,   display_eval = FALSE,   eval_size = 4,   ggpLayers = NULL,   ncol = NULL,   nrow = NULL,   verbose = NULL,   ... )"},{"path":"/reference/plotStsLineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot STS line- and ridgeplot — plotStsLineplot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. names data variables interest. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). line_color Character. Affects color main lines plot. line_size Numeric value. Specifies thicknes lines trajectory dynamics displayed. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. display_facets Logical. set TRUE sub plots every specified gene, gene-set feature displayed via ggplot2::facet_wrap() ggpLayers List ggproto-objects added plot. Skim ggpLayer*()-functions options. nrow, ncol Numeric values NULL. Used arrange multiple plots. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional arguments given ggplot2::facet_wrap() argument display_facets set TRUE.","code":""},{"path":"/reference/plotStsLineplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot STS line- and ridgeplot — plotStsLineplot","text":"ggplot.","code":""},{"path":"/reference/plotStsLineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot STS line- and ridgeplot — plotStsLineplot","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  object <- normalizeCounts(objcect, activate = TRUE)  genes <- c(\"EGFR\", \"MBP\", \"MAG\", \"SNAP25\")  plotStsHeatmap(object, id = \"horizontal_mid\", variables = genes)  plotStsLineplot(object, id = \"horizontal_mid\", variables = genes)  plotStsRidgeplot(object, id = \"horizontal_mid\", variables = genes)"},{"path":"/reference/plotSurface.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the surface of the sample — plotSurface","title":"Plot the surface of the sample — plotSurface","text":"Displays spatial dimension sample colors surface according expression genes, gene sets features. methods multiple classes: SPATA2: versatile method sorts spatial data can visualized. data.frame: Method data.frame contains least variables x y. SpatialAnnotationScreening: Method visualize surface based setup spatialAnnotationScreening() run. SpatialTrajectoryScreening: Method visualize surface based setup spatialAnnotationScreening() run.","code":""},{"path":"/reference/plotSurface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the surface of the sample — plotSurface","text":"","code":"plotSurface(object, ...)  # S4 method for class 'SPATA2' plotSurface(   object,   color_by = NULL,   alpha_by = NULL,   smooth = FALSE,   smooth_span = 0.2,   pt_alpha = NULL,   pt_clr = NULL,   pt_clrp = NULL,   pt_clrsp = NULL,   pt_size = NULL,   outline = FALSE,   outline_fct = c(2.125, 2.75),   clrp_adjust = NULL,   transform_with = NULL,   use_scattermore = NULL,   sctm_pixels = c(1024, 1024),   bcs_rm = base::character(0),   na_rm = FALSE,   xrange = getCoordsRange(object)$x,   yrange = getCoordsRange(object)$y,   display_image = NULL,   img_alpha = 1,   img_name = NULL,   geom = \"point\",   verbose = NULL,   ... )  # S4 method for class 'data.frame' plotSurface(   object,   color_by = NULL,   alpha_by = NULL,   pt_alpha = 0.9,   pt_clr = \"lightgrey\",   pt_clrp = \"milo\",   pt_clrsp = \"inferno\",   pt_size = 2,   image = NULL,   clrp_adjust = NULL,   use_scattermore = FALSE,   sctm_pixels = c(1024, 1024),   sctm_interpolate = FALSE,   outline = FALSE,   outline_coords = NULL,   outline_fct = c(2.125, 2.75),   order_by = NULL,   order_desc = FALSE,   na_rm = TRUE,   ... )  # S4 method for class 'SpatialAnnotationScreening' plotSurface(   object,   color_by = \"rel_loc\",   line_color = \"black\",   line_size = 1,   fill = ggplot2::alpha(\"lightgrey\", 0.25),   pt_clrp = \"npg\",   ... )  # S4 method for class 'SpatialGradientScreening' plotSurface(   object,   color_by = \"rel_loc\",   line_color = \"black\",   line_size = 1,   pt_clrp = \"npg\",   ... )  plotSurfaceInteractive(object)"},{"path":"/reference/plotSurface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the surface of the sample — plotSurface","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional arguments given scale_color_add_on(). color_by Character value. variables color data points. smooth Logical. TRUE, loess fit used smooth values. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). pt_alpha Numeric value. Specifies degree transparency points. pt_clr Character value. Specifies color points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. pt_clrsp color spectrum used specified variable displayed color continuous. Run validColorSpectra() see valid input. pt_size Numeric value. Specifies size points. outline Logical, indicating whether add outline points. TRUE, outline added around points enhance visibility. Default FALSE. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. transform_with List NULL. list, can used transform continuous variables usage. Names list slots refer variable. content slot refers transforming functions. E.g variable interest GFAP gene expression, following work: Single function: transform_with = log10, Multiple functions: transform_with = list(GFAP = list(log10, log2) case plotting: Useful want apply one transformation variables mapped plotting aesthetics. Input transform_with applied respective <aes>_trans argument. use_scattermore Logical value. TRUE, data points plotted scattermore::geom_scattermore() allows quick plotting several thousand data points. number data points plotted bigger 10.000 used anyway. bcs_rm Character vector NULL. character, specifies observations removed prior analysis visualization barcode. xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. img_alpha Numeric value. Sets transparency image. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) sctm_interpolate, sctm_pixels Given corresponding arguments scattermore::geom_scattermore(). Note: increasing sctm_pixels point size must adjusted argument pt_size. order_by Character value NULL. character, specified variable used order data points. order_desc Logical value. TRUE, reverses arrangement specified via order_by /order. line_color Character. Affects color main lines plot. line_size Numeric. Affects size main lines plot. fill Character value NA. character, specifies color outline spatial annotation filled. outline_width Numeric vector length 2, specifying factor pt_size multiplied create white layer (first value) black layer (second value).","code":""},{"path":"/reference/plotSurface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the surface of the sample — plotSurface","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/plotSurface.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot the surface of the sample — plotSurface","text":"methods SpatialAnnotationScreening- SpatialTrajectoryScreening exist quickly visualize set screening conducted. ... can used reach plotSurface() method data.frames plotting parameters. controll, please use combination plotSurface() SPATA2 object ggpLayer* functions.","code":""},{"path":"/reference/plotSurfaceBase.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot surface with R base plotting — plotSurfaceBase","title":"Plot surface with R base plotting — plotSurfaceBase","text":"Uses Rs base plotting device instead ggplot2. usually faster can make use mechanism ggplot2 offers.","code":""},{"path":"/reference/plotSurfaceBase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot surface with R base plotting — plotSurfaceBase","text":"","code":"plotSurfaceBase(   object,   color_by = NULL,   alpha_by = NULL,   pt_alpha = 0.9,   pt_color = \"grey\",   pt_clrp = \"milo\",   pt_clrsp = \"inferno\",   pt_size = 1,   clrp_adjust = NULL,   smooth = FALSE,   smooth_span = 0.2,   display_axes = FALSE,   display_axes_title = FALSE,   display_image = NULL,   highlight_barcodes = NULL,   highlight_alpha = 0.75,   highlight_color = \"orange\",   xrange = NULL,   yrange = NULL,   adjust_pt_size = TRUE,   expand = 0,   pty = \"s\",   verbose = NULL,   unit = \"px\",   ... )"},{"path":"/reference/plotSurfaceBase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot surface with R base plotting — plotSurfaceBase","text":"object object class SPATA2 , case S4 generics, objects classes method defined. color_by Character value. variables color data points. pt_alpha Numeric value. Specifies degree transparency points. pt_clrp color palette used specified variable displayed color categorical/discrete. Run validColorPalettes() see valid input. pt_clrsp color spectrum used specified variable displayed color continuous. Run validColorSpectra() see valid input. pt_size Numeric value. Specifies size points. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. smooth Logical. TRUE, loess fit used smooth values. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. expand Specifies image expansion. image cropped based image annotation centers around image annotation. expand = 0, default, dimensions image, width/x-axis height/y-axis, set include image annotation area nothing . Using expand, cropped image section can adjusted. See section Expansion cropped image sections information. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/plotSurfaceBase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot surface with R base plotting — plotSurfaceBase","text":"Plots right plotting window.","code":""},{"path":"/reference/plotSurfaceComparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot several surface plots colored by numeric variables — plotSurfaceComparison","title":"Plot several surface plots colored by numeric variables — plotSurfaceComparison","text":"Displays surface plot every variable specified argument color_by. plotSurfaceComparison() Takes SPATA2 object starting point creates necessary data.frame scratch according additional parameters. plotSurfaceComparison2() Takes data.frame starting point.","code":""},{"path":"/reference/plotSurfaceComparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot several surface plots colored by numeric variables — plotSurfaceComparison","text":"","code":"plotSurfaceComparison(object, ...)  # S4 method for class 'SPATA2' plotSurfaceComparison(   object,   color_by,   alpha_by = FALSE,   method_gs = NULL,   normalize = TRUE,   smooth = FALSE,   smooth_span = NULL,   pt_size = NULL,   pt_alpha = NULL,   pt_clrsp = NULL,   display_image = NULL,   bcsp_rm = NULL,   na_rm = TRUE,   outline = FALSE,   outline_coords = NULL,   outline_fct = c(1.75, 2.75),   use_scattermore = NULL,   sctm_pixels = c(1024, 1024),   sctm_interpolate = FALSE,   order = TRUE,   order_desc = FALSE,   xrange = getCoordsRange(object)$x,   yrange = getCoordsRange(object)$y,   verbose = NULL,   ... )  # S4 method for class 'data.frame' plotSurfaceComparison(   object,   color_by,   alpha_by = FALSE,   pt_alpha = 0.9,   pt_clrsp = \"inferno\",   pt_size = 2,   image = NULL,   use_scattermore = FALSE,   sctm_pixels = c(1024, 1024),   sctm_interpolate = FALSE,   bcsp_rm = NULL,   na_rm = TRUE,   order = TRUE,   order_desc = FALSE,   verbose = TRUE,   ... )"},{"path":"/reference/plotSurfaceComparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot several surface plots colored by numeric variables — plotSurfaceComparison","text":"... Additional arguments given ggplot2::facet_wrap(). alpha_by , logical value. TRUE, alpha points scaled gene expression values addition color points. method_gs Character value. method according gene sets handled specified character length one. can either 'mean' one 'gsva', 'ssgsea', 'zscore', 'plage'. latter four given gsva::GSVA(). smooth Logical. set TRUE values smoothed according smoooth_-parameters. smooth_span amount smoothing specified single numeric value. pt_size Numeric value. Specifies size points. pt_alpha Numeric value. Specifies degree transparency points. pt_clrsp color spectrum used specified variable displayed color continuous. Run validColorSpectra() see valid input. display_image Logical. set TRUE histology image specified sample displayed underneath plot. image image class Image displayed background obtained getImage().","code":""},{"path":"/reference/plotSurfaceQuantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — plotSurfaceQuantiles","title":"Deprecated — plotSurfaceQuantiles","text":"Deprecated favor plotSurface().","code":""},{"path":"/reference/plotSurfaceQuantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — plotSurfaceQuantiles","text":"","code":"plotSurfaceQuantiles(   object,   color_by,   alpha_by = NULL,   n_qntls = 5,   keep_qntls = 1:n_qntls,   pt_alpha = NULL,   pt_clrp = NULL,   pt_size = NULL,   smooth = NULL,   smooth_span = NULL,   display_image = NULL,   bcsp_rm = NULL,   use_scattermore = FALSE,   sctm_pixels = c(1024, 1024),   sctm_interpolate = FALSE,   verbose = NULL,   ... )"},{"path":"/reference/plotSurfaceSAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot screening area of SAS set up — plotSurfaceSAS","title":"Plot screening area of SAS set up — plotSurfaceSAS","text":"Plots surface sample three times different coloring visualize spatialAnnotationScreening() screens sample depending input arguments binwidth, n_bins_dist, n_bins_angle.","code":""},{"path":"/reference/plotSurfaceSAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot screening area of SAS set up — plotSurfaceSAS","text":"","code":"plotSurfaceSAS(object, ...)  # S4 method for class 'SPATA2' plotSurfaceSAS(   object,   ids,   distance = distToEdge(object, id),   resolution = recBinwidth(object),   color_by = c(\"dist\", \"bins_dist\", \"angle\", \"bins_angle\"),   unit = getDefaultUnit(object),   angle_span = c(0, 360),   color_outside = ggplot2::alpha(\"lightgrey\", 0.25),   show_plots = TRUE,   ggpLayers = list(),   bcs_exclude = NULL,   verbose = NULL,   ... )  # S4 method for class 'SpatialAnnotationScreening' plotSurfaceSAS(   object,   show_plots = TRUE,   display_angle = FALSE,   display_bins_angle = TRUE,   display_bins_dist = TRUE,   ggpLayers = list(),   ... )"},{"path":"/reference/plotSurfaceSAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot screening area of SAS set up — plotSurfaceSAS","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. ids Character vector. Specifies IDs spatial annotations interest. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). color_by Character value. variables color data points. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. angle_span Numeric vector length 2. Confines area screened angle span relative center closest spatial annotation. show_plots Logical value. TRUE, plots immediately plotted. FALSE, list plots returned (invisibly). ggpLayers List ggproto-objects added plot. Skim ggpLayer*()-functions options. bcs_exclude Character value containing barcodes observations excluded analysis. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) display_angle, display_bins_angle, display_circle Logical value. TRUE, plot included. FALSE, plotting skipped. color_core, color_outside Character value. Denotes colors area image annotation (color_core) area included screening (color_outside) displayed.","code":""},{"path":"/reference/plotSurfaceSAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot screening area of SAS set up — plotSurfaceSAS","text":"invisible list ggplots.","code":""},{"path":"/reference/plotSurfaceSAS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot screening area of SAS set up — plotSurfaceSAS","text":"method class SpatialAnnotationScreening (output function spatialAnnotationScreening()) can used show area results based . Therefore, arguments binwidth, n_bins_circle n_bins_angle.","code":""},{"path":"/reference/plotSurfaceSC.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot single cells on surface — plotSurfaceSC","title":"Plot single cells on surface — plotSurfaceSC","text":"Plots single cell input sample surface.","code":""},{"path":"/reference/plotSurfaceSC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot single cells on surface — plotSurfaceSC","text":"","code":"plotSurfaceSC(   object,   sc_input,   cell_types = NULL,   line_size = 0.5,   pt_alpha = 1,   pt_size = 0.5,   display_density = TRUE,   display_facets = TRUE,   display_image = FALSE,   display_points = TRUE,   clrp = NULL,   clrp_adjust = NULL,   frame_by = \"coords\",   nrow = NULL,   ncol = NULL )"},{"path":"/reference/plotSurfaceSC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot single cells on surface — plotSurfaceSC","text":"object object class SPATA2 , case S4 generics, objects classes method defined. sc_input Data.frame contains results single cell deconvolution. Must least three columns: x :  numeric. Position cell x axis pixel., y : numeric. Position cell y axis pixel., cell_type : factor Cell type cell. line_size Numeric. Affects size main lines plot. pt_alpha Numeric value. Specifies degree transparency points. pt_size Numeric value. Specifies size points. display_density Logical value. TRUE, uses ggplot2::geom_density2d() visualize cell density contours. display_facets Logical value. set TRUE plot split via ggplot2::facet_wrap() variable gets subplot. display_image Logical value. TRUE, adds image tissue. display_points Logical value. set TRUE points used additionally display results. clrp Character value. Specifies color palette used represent groups discrete variables. Run validColorPalettes() obtain valid input options. clrp_adjust Named character vector NULL. character, adjusts color palette used represent groups. Names input vector must refer group respective named element denotes color represent group. nrow, ncol Numeric values NULL. Used arrange multiple plots. cell_type Character value NULL. character, subsets cell types included plots.","code":""},{"path":"/reference/plotSurfaceSC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot single cells on surface — plotSurfaceSC","text":"Returns ggplot can additionally customized according rules ggplot2 framework.","code":""},{"path":"/reference/plotTrajectoryBarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — plotTrajectoryBarplot","title":"Deprecated — plotTrajectoryBarplot","text":"Deprecated favor plotStsBarplot()","code":""},{"path":"/reference/plotTrajectoryBarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — plotTrajectoryBarplot","text":"","code":"plotTrajectoryBarplot(...)"},{"path":"/reference/plotTrajectoryHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — plotTrajectoryHeatmap","title":"Deprecated — plotTrajectoryHeatmap","text":"Deprecated favor plotStsHeatmap()","code":""},{"path":"/reference/plotTrajectoryHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — plotTrajectoryHeatmap","text":"","code":"plotTrajectoryHeatmap(...)"},{"path":"/reference/plotTrajectoryLineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — plotTrajectoryLineplot","title":"Deprecated — plotTrajectoryLineplot","text":"Deprecated favor plotStsLineplot()","code":""},{"path":"/reference/plotTrajectoryLineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — plotTrajectoryLineplot","text":"","code":"plotTrajectoryLineplot(...)  plotTrajectoryRidgeplot(   object,   id,   variables,   binwidth = getCCD(object),   n_bins = NA_integer_,   unit = getSpatialMethod(object)@unit,   round = 2,   method_gs = NULL,   smooth_method = \"loess\",   smooth_span = 0.2,   smooth_se = TRUE,   clrp = NULL,   clrp_adjust = NULL,   display_trajectory_parts = NULL,   alpha = 0.9,   fill = NULL,   line_color = \"black\",   line_size = 1.5,   vlinecolor = \"grey\",   vlinesize = 1,   vlinetype = \"dashed\",   x_nth = 7L,   xi = NULL,   yi = NULL,   expand_x = c(0, 0),   summarize_with = \"mean\",   ncol = 1,   nrow = NULL,   overlap = 0.5,   strip_pos = \"right\",   display_model = NULL,   verbose = NULL,   ... )"},{"path":"/reference/plotVolcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare evaluation of spatially opposing fits — plotVolcano","title":"Compare evaluation of spatially opposing fits — plotVolcano","text":"Plots volcano plot using model evaluation spatial fitting implemented spatialAnnotationScreening() spatialTrajectoryScreening().","code":""},{"path":"/reference/plotVolcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare evaluation of spatially opposing fits — plotVolcano","text":"","code":"plotVolcano(object, ...)  # S4 method for class 'SpatialAnnotationScreening' plotVolcano(   object,   eval = \"corr_mean\",   pval = \"p_value_mean\",   left = \"linear_ascending\",   right = \"linear_descending\",   display_thresholds = TRUE,   threshold_eval = 0.5,   threshold_pval = 0.05,   threshold_colors = c(\"tomato\", \"lightgrey\"),   label_vars = NULL,   label_alpha = 0.9,   label_color = \"black\",   label_size = 2,   negative_log = TRUE,   pt_alpha = 0.9,   pt_size = 1,   display_names = TRUE,   hstep = 1.5,   vstep = 1.2,   best_only = FALSE,   ... )  # S4 method for class 'SpatialTrajectoryScreening' plotVolcano(object, ...)"},{"path":"/reference/plotVolcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare evaluation of spatially opposing fits — plotVolcano","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. eval Character value. variable use x-axis. pval Character value. variable use y-axis. left, right Character value. name model whose best-fit variables go left right, respectively. Defaults left = 'linear_ascending' right = 'linear_descending'. threshold_pval, threshold_eval Numeric values set thresholds /points highlighted. threshold_colors Character vector length two. First denotes color significant variables, second denotes color -significant variables. label_vars Character value, numeric value NULL. Useful highlight exact position/evalation variables. character, specifies variables labeled. numeric, specifies top n variables labeled. NULL, ignored. pt_alpha Numeric value. Specifies degree transparency points. pt_size Numeric value. Specifies size points. hstep, vstep Adjust position two labels show model names left right. best_only Logical value. TRUE, variables included plot best model fit either left right model. display_threshold Logical value. TRUE, thresholds set treshold_pval threshold_eval used color points plot.","code":""},{"path":"/reference/plot_model_comparison_dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Model Comparison Dotplot — plot_model_comparison_dotplot","title":"Plot Model Comparison Dotplot — plot_model_comparison_dotplot","text":"Overview dotplot compare screening results selected models.","code":""},{"path":"/reference/plot_model_comparison_dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Model Comparison Dotplot — plot_model_comparison_dotplot","text":"","code":"plot_model_comparison_dotplot(   data,   eval = \"mae\",   pval = \"p_value\",   model_subset = NULL,   model_remove = NULL,   scale_factor = 1,   pt_size = 1.5,   label_vars = 2,   label_size = 4,   threshold_pval = 0.05,   label_color = \"#4d4d4d\" )"},{"path":"/reference/plot_model_comparison_dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Model Comparison Dotplot — plot_model_comparison_dotplot","text":"data Output spatialAnnotationScreening() spatialTrajectoryScreening() form screening_results@results. model_remove (Optional) character vector specifying models remove plot. scale_factor numeric value scale point sizes. Default 1. pt_size size points plot. Default 0.1. label_vars number top variables label model. Default 2. label_size size labels. Default 4. threshold_pval p-value threshold coloring points. Default 0.05. label_color color labels. Default \"#4d4d4d\". x_label label x-axis. Default \"Gene-model correlation\".","code":""},{"path":"/reference/plot_model_comparison_dotplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Model Comparison Dotplot — plot_model_comparison_dotplot","text":"dotplot comparing model screening results.","code":""},{"path":"/reference/plot_model_comparison_dotplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Model Comparison Dotplot — plot_model_comparison_dotplot","text":"","code":"# Example usage: pl <- plot_model_comparison_dotplot(screening_1@results, model_remove = c(\"peak\"), label_vars = 3) pl + coord_cartesian(xlim = c(0.5, 1))"},{"path":"/reference/plot_screening_evaluation.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper — plot_screening_evaluation","title":"Helper — plot_screening_evaluation","text":"Helper","code":""},{"path":"/reference/plot_screening_evaluation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper — plot_screening_evaluation","text":"","code":"plot_screening_evaluation(   df,   variables,   var_order,   method_eval = \"corr\",   model_subset = NULL,   model_remove = NULL,   model_add = NULL,   pt_alpha = 0.9,   pt_color = \"black\",   pt_size = 1,   line_alpha = 0.9,   line_color = \"blue\",   line_size = 1,   display_se = FALSE,   display_eval = FALSE,   eval_p_min = 5e-05,   eval_pos_x = NULL,   eval_pos_y = NULL,   eval_text_sep = \"\\n\",   eval_text_size = 1,   clr_model = \"steelblue\",   clr_segment = \"tomato\",   clr_variable = \"forestgreen\",   force_grid = FALSE,   nrow = NULL,   ncol = NULL,   make_pretty = FALSE,   verbose = TRUE )"},{"path":"/reference/plot_screening_evaluation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper — plot_screening_evaluation","text":"force_grid Logical value. TRUE, facet_grid() used regardless variables length 1.","code":""},{"path":"/reference/plot_type_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_type — plot_type_dummy","title":"plot_type — plot_type_dummy","text":"plot_type","code":""},{"path":"/reference/plot_type_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_type — plot_type_dummy","text":"","code":"plot_type_dummy(plot_type)"},{"path":"/reference/plot_type_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_type — plot_type_dummy","text":"plot_type Character value. Specifies type plot use visualize results. valid input options mentioned description use validPlotTypess() obtain valid input options.","code":""},{"path":"/reference/printAutoencoderSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print autoencoder summary — printAutoencoderSummary","title":"Print autoencoder summary — printAutoencoderSummary","text":"Prints human readable summary set last neural network constructed generate denoised expression matrix.","code":""},{"path":"/reference/printAutoencoderSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print autoencoder summary — printAutoencoderSummary","text":"","code":"printAutoencoderSummary(object, mtr_name = \"denoised\", of_sample = \"\")"},{"path":"/reference/printAutoencoderSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print autoencoder summary — printAutoencoderSummary","text":"object valid spata-object. of_sample argument currently inactive. might reactivated spata-objects can store one sample.","code":""},{"path":"/reference/printAutoencoderSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print autoencoder summary — printAutoencoderSummary","text":"human readable report issue interest.","code":""},{"path":"/reference/printDefaultInstructions.html","id":null,"dir":"Reference","previous_headings":"","what":"Print current default settings — printDefaultInstructions","title":"Print current default settings — printDefaultInstructions","text":"Print current default settings","code":""},{"path":"/reference/printDefaultInstructions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print current default settings — printDefaultInstructions","text":"","code":"printDefaultInstructions(object)"},{"path":"/reference/printDefaultInstructions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print current default settings — printDefaultInstructions","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/printDefaultInstructions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print current default settings — printDefaultInstructions","text":"human readable report issue interest.","code":""},{"path":"/reference/printGeneSetOverview.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — printGeneSetOverview","title":"Deprecated — printGeneSetOverview","text":"Deprecated favor getGeneSetOverview()","code":""},{"path":"/reference/printGeneSetOverview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — printGeneSetOverview","text":"","code":"printGeneSetOverview(object, ...)"},{"path":"/reference/print_family.html","id":null,"dir":"Reference","previous_headings":"","what":"print — print_family","title":"print — print_family","text":"print","code":""},{"path":"/reference/print_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print — print_family","text":"","code":"print_family()"},{"path":"/reference/print_family.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print — print_family","text":"human readable report issue interest.","code":""},{"path":"/reference/processImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Run image processing pipeline — processImage","title":"Run image processing pipeline — processImage","text":"wrapper around image processing functions: identifyPixelContent() identifyTissueOutline() identifyBackgroundColor()","code":""},{"path":"/reference/processImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run image processing pipeline — processImage","text":"","code":"processImage(object, img_name = activeImage(object), verbose = NULL, ...)"},{"path":"/reference/processImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run image processing pipeline — processImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Arguments passed identifyPixelContent().","code":""},{"path":"/reference/processImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run image processing pipeline — processImage","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/process_expand_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Process expand input — process_expand_input","title":"Process expand input — process_expand_input","text":"Process expand input","code":""},{"path":"/reference/process_expand_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process expand input — process_expand_input","text":"","code":"process_expand_input(expand)"},{"path":"/reference/process_expand_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process expand input — process_expand_input","text":"Returns always list length two. Two slots named h (height) x (width).","code":""},{"path":"/reference/process_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Process input ranges — process_ranges","title":"Process input ranges — process_ranges","text":"Processes x- y-ranges. function assumes x- yrange given perspective cartesian coordinate system.","code":""},{"path":"/reference/process_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process input ranges — process_ranges","text":"","code":"process_ranges(   xrange = getImageRange(object)$x,   yrange = getImageRange(object)$y,   expand = 0,   persp = \"ccs\",   object = NULL,   ranges = NULL,   opt = 1 )"},{"path":"/reference/process_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process input ranges — process_ranges","text":"xrange, yrange Distance vector length two NULL. NULL, specifies x- y-range spatial output cropped. E.g. xrange = c(200, 500) results two dimensional space cropped x-coordinate 200px x-coordinate 500px. NULL, original range used. expand Parameter adjust image expanded. See section Image expansion information. persp Determines perspective output. Thus, image, flip values yrange. 'ccs', values yrange flipped. object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/process_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process input ranges — process_ranges","text":"List 4 slots. Named xmin, xmax, ymin ymax. Adjusted range pixel.","code":""},{"path":"/reference/project_on_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Project barcode spots on a trajectory — project_on_trajectory","title":"Project barcode spots on a trajectory — project_on_trajectory","text":"Projects every barcode spot onto trajectory.","code":""},{"path":"/reference/project_on_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project barcode spots on a trajectory — project_on_trajectory","text":"","code":"project_on_trajectory(coords_df, traj_df, width, ...)"},{"path":"/reference/project_on_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project barcode spots on a trajectory — project_on_trajectory","text":"traj_df data.frame specifying course trajectory. Requires x y variables correspond position points build trajectory. nrow(traj_df) == 2, trajectory straight geometrical vector handled . nrow(traj_df) >= 3, trajectory considered curvature. width Numeric value determines width trajectory.","code":""},{"path":"/reference/project_on_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project barcode spots on a trajectory — project_on_trajectory","text":"data.frame containing variables barcodes, sample, x, y well projection_length: indicating position every barcode-spot respect direction trajectory. higher barcode-spots value farther away starting point trajectory belongs . trajectory_part: indicating part trajectory barcode-spot belongs . Depracated","code":""},{"path":"/reference/project_on_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform vector projection — project_on_vector","title":"Perform vector projection — project_on_vector","text":"Helper function trajectory-analysis use within dplyr::mutate(). Performs vector-projection spatial position local coordinates system arrange barcodes fall trajectory square according trajectory direction.","code":""},{"path":"/reference/project_on_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform vector projection — project_on_vector","text":"","code":"project_on_vector(lcs, x, y)"},{"path":"/reference/project_on_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform vector projection — project_on_vector","text":"lcs data.frame specifying local coordinates system variables x, y, xend, yend observations local length axis local width axis. x x-coordinate y y-coordinate","code":""},{"path":"/reference/project_on_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform vector projection — project_on_vector","text":"projected length.","code":""},{"path":"/reference/read_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Read coordinate data.frames — read_coords","title":"Read coordinate data.frames — read_coords","text":"Reads coordinates data.frame various platforms.","code":""},{"path":"/reference/read_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read coordinate data.frames — read_coords","text":"","code":"read_coords(...)  read_coords_merfish(dir_coords)  read_coords_slide_seq_v1(dir_coords)  read_coords_visium(dir_coords)  read_coords_xenium(dir_coords)"},{"path":"/reference/read_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read coordinate data.frames — read_coords","text":"dir_coords Character value. Directory coordinates data.frame.","code":""},{"path":"/reference/read_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read coordinate data.frames — read_coords","text":"Data.frame least five columns: barcodes: Character. Unique identifier observation. x_orig: Numeric. x-coordinates original input. y_orig: Numeric. y-coordinates original input. col: Integer. Column index. row: Integer. Row index.","code":""},{"path":"/reference/read_matrix_from_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Matrix from Folder — read_matrix_from_folder","title":"Read Matrix from Folder — read_matrix_from_folder","text":"function reads matrix, barcodes, features specified directory returns matrix appropriate row column names.","code":""},{"path":"/reference/read_matrix_from_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Matrix from Folder — read_matrix_from_folder","text":"","code":"read_matrix_from_folder(dir)"},{"path":"/reference/read_matrix_from_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Matrix from Folder — read_matrix_from_folder","text":"dir Character. directory containing matrix, barcodes, features files.","code":""},{"path":"/reference/read_matrix_from_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Matrix from Folder — read_matrix_from_folder","text":"sparse matrix barcodes column names features row names.","code":""},{"path":"/reference/read_matrix_from_folder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Matrix from Folder — read_matrix_from_folder","text":"specified directory must contain following files: Matrix file: file extension .mtx.gz .mtx. file contains count matrix Matrix Market format. Barcodes file: file name barcodes.tsv.gz barcodes.tsv. file contains barcodes columns matrix. Features file: file name features.tsv.gz features.tsv. file contains features (e.g., gene names) rows matrix. function search files specified directory read using appropriate functions. matrix returned barcodes column names features row names.","code":""},{"path":"/reference/read_matrix_from_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Matrix from Folder — read_matrix_from_folder","text":"","code":"if (FALSE) { # \\dontrun{   matrix_dir <- \"path/to/matrix/folder\"   matrix <- read_matrix_from_folder(matrix_dir)   print(matrix) } # }"},{"path":"/reference/recSgsRes.html","id":null,"dir":"Reference","previous_headings":"","what":"Platform dependent input recommendations — recDbscanEps","title":"Platform dependent input recommendations — recDbscanEps","text":"collection functions return recommended default input certain arguments depending spatial method (platform) SPATA2 object derived .","code":""},{"path":"/reference/recSgsRes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform dependent input recommendations — recDbscanEps","text":"","code":"recDbscanEps(object)  recDbscanMinPts(object)  recSgsRes(object, unit = getDefaultUnit(object))"},{"path":"/reference/recSgsRes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform dependent input recommendations — recDbscanEps","text":"object object class SPATA2 , case S4 generics, objects classes method defined. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options.","code":""},{"path":"/reference/recSgsRes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Platform dependent input recommendations — recDbscanEps","text":"Single values different classes depending function. See details .","code":""},{"path":"/reference/recSgsRes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Platform dependent input recommendations — recDbscanEps","text":"recDbscanEps default input eps argument dbscan::dbscan(). objects derived Visium platform, recommend binwidth equal center--center distance obtained getCCD() multiplied 1.25. objects derived platforms rely fixed grid data points (MERFISH, SlideSeq, etc.), recommend average minimal distance data points multiplied 1.25. recDbscanMinPts default input minPts argument dbscan::dbscan(). objects derived Visium platform, recommend minPts = 3. objects derived platforms rely fixed grid data points (MERFISH, SlideSeq, etc.), recommend minPts = 12. recSgsRes() default input resolution argument spatial gradient screening algorithm. objects derived Visium platform, recommend binwidth equal center--center distance obtained getCCD(). objects derived platforms rely fixed grid data points (MERFISH, SlideSeq, etc.), recommend average minimal distance data points.","code":""},{"path":"/reference/reduceSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce SPATA2 object — reduceSpataObject","title":"Reduce SPATA2 object — reduceSpataObject","text":"function reduces SPATA2 object minimal version removing analysis progress non-essential data.","code":""},{"path":"/reference/reduceSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce SPATA2 object — reduceSpataObject","text":"","code":"reduceSpataObject(object)"},{"path":"/reference/reduceSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce SPATA2 object — reduceSpataObject","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/reduceSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce SPATA2 object — reduceSpataObject","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/reduceSpataObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reduce SPATA2 object — reduceSpataObject","text":"following components removed reduced: @assays: @analysis @mtr_proc slots cleared, @meta_var reduced include molecule names. @data_add: Cleared completely. @dim_red: Cleared completely. @meta: barcodes column retained metadata. @spatial: @annotations: Cleared completely. @images: @outline @pixel_content slots cleared. @trajectories: Cleared completely. @outline: Cleared completely. Furthermore, images unload unlaodImages().","code":""},{"path":"/reference/reduceSpataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reduce SPATA2 object — reduceSpataObject","text":"","code":"# Assuming 'object' is a valid SPATA2 object reduced_object <- reduceSpataObject(object)"},{"path":"/reference/reduce_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduces vector length — reduce_vec","title":"Reduces vector length — reduce_vec","text":"Reduces length vectors keeping every nth element.","code":""},{"path":"/reference/reduce_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduces vector length — reduce_vec","text":"","code":"reduce_vec(x, nth, start.with = 1)"},{"path":"/reference/reduce_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduces vector length — reduce_vec","text":"x Input vector type. nth Numeric value. Every nth element kept. 1, every element kept. 2, every second element kept, etc. start.Element counting starts. Defaults 1. E.g. nth = 2 length x 6, first, third fifth element returned.","code":""},{"path":"/reference/reduce_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduces vector length — reduce_vec","text":"Vector class x. Content depends parameter adjustments.","code":""},{"path":"/reference/refImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain name of reference iamge — refImage","title":"Obtain name of reference iamge — refImage","text":"Handy functions quickly access name reference image.","code":""},{"path":"/reference/refImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain name of reference iamge — refImage","text":"","code":"refImage(object, ...)  # S4 method for class 'SPATA2' refImage(object)  # S4 method for class 'SpatialData' refImage(object)"},{"path":"/reference/refImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain name of reference iamge — refImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/refImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain name of reference iamge — refImage","text":"Character value.","code":""},{"path":"/reference/registerImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Register or remove images — registerImage","title":"Register or remove images — registerImage","text":"Use registerImage() add new image form HistoImage object. Use removeImage() savely discard images HistoImage container longer needed. confuse loadImage() unloadImage().","code":""},{"path":"/reference/registerImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register or remove images — registerImage","text":"","code":"registerImage(object, ...)  # S4 method for class 'SPATA2' registerImage(   object,   img_name,   img = NULL,   dir = NULL,   unload = TRUE,   process = FALSE,   overwrite = FALSE,   verbose = TRUE )  # S4 method for class 'SpatialData' registerImage(   object,   img_name,   img = NULL,   dir = NULL,   unload = FALSE,   process = FALSE,   overwrite = FALSE,   verbose = TRUE )  removeImage(object, ...)  # S4 method for class 'SPATA2' removeImage(object, img_name)  # S4 method for class 'SpatialData' removeImage(object, img_name)"},{"path":"/reference/registerImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register or remove images — registerImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. image remove. Must neither active reference image. img image. Must usable EBImage::.Image(). dir Character value. directory retrieve image. overwrite Logical value. Must TRUE allow overwriting. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/registerImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register or remove images — registerImage","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/registerImage.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"Register or remove images — registerImage","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":"/reference/relateToSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — relateToSpatialAnnotation","title":"Deprecated — relateToSpatialAnnotation","text":"Deprecated favor getCoordsDfSA()","code":""},{"path":"/reference/relateToSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — relateToSpatialAnnotation","text":"","code":"relateToSpatialAnnotation(object, input_df, ...)"},{"path":"/reference/relevelGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Relevel groups of grouping variable — relevelGroups","title":"Relevel groups of grouping variable — relevelGroups","text":"Sets ordering groups grouping variable. Affects order appear plots.","code":""},{"path":"/reference/relevelGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relevel groups of grouping variable — relevelGroups","text":"","code":"relevelGroups(object, grouping, new_levels, ...)"},{"path":"/reference/relevelGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relevel groups of grouping variable — relevelGroups","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. new_levels Character vector group names order new ordering supposed stored. Must contain groups grouping variable. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/relevelGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relevel groups of grouping variable — relevelGroups","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/relevelGroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relevel groups of grouping variable — relevelGroups","text":"","code":"library(SPATA2) library(patchwork)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  p_before <- plotSurface(object, color_by = \"bayes_space\")  plot(p_before)  getGroupNames(object, grouping = \"bayes_space\")  object <- relevelGroups(object, grouping = \"bayes_space\", new_levels = c(\"1\", \"2\", \"3\", \"7\", \"6\", \"5\", \"4\"))  getGroupNames(object, grouping = \"bayes_space\")  p_afterwards <- plotSurface(object, color_by = \"bayes_space\")  # different levels -> different order -> different color assignment p_before + p_afterwards"},{"path":"/reference/removeMetaFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove meta features — removeMetaFeatures","title":"Remove meta features — removeMetaFeatures","text":"Remove meta features SPATA2 object.","code":""},{"path":"/reference/removeMetaFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove meta features — removeMetaFeatures","text":"","code":"removeMetaFeatures(object, feature_names)"},{"path":"/reference/removeMetaFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove meta features — removeMetaFeatures","text":"object object class SPATA2 , case S4 generics, objects classes method defined. feature_names Character vector. Names meta features remove.","code":""},{"path":"/reference/removeMetaFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove meta features — removeMetaFeatures","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/removeMetaFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove meta features — removeMetaFeatures","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  # deafults to only return the meta features getFeatureNames(object)  object <- removeMetaFeatures(object, feature_names = \"bayes_space\")  getFeatureNames(object)"},{"path":"/reference/removeMolecules.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove molecules from the SPATA2 object — removeGenes","title":"Remove molecules from the SPATA2 object — removeGenes","text":"Functions removes molecules SPATA2 object removing count matrix processed matrices respective assay. removeMolecules(): Removes user specified molecules removeMoleculesZeroCounts(): Removes molecules single count across observations. Wrappers transriptomic assay: removeGenes(): Removes user specified genes. removeGenesZeroCounts(): Removes genes single count across observations. removeGenesStress(): Removes mitochondrial stress related genes.","code":""},{"path":"/reference/removeMolecules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove molecules from the SPATA2 object — removeGenes","text":"","code":"removeGenes(object, genes, show_warnings = FALSE, verbose = NULL)  removeGenesStress(object, verbose = NULL)  removeGenesZeroCounts(object, verbose = NULL)  removeMolecules(   object,   molecules,   show_warnings = FALSE,   ref = \"molecule\",   assay_name = activeAssay(object),   verbose = NULL )"},{"path":"/reference/removeMolecules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove molecules from the SPATA2 object — removeGenes","text":"object object class SPATA2 , case S4 generics, objects classes method defined. genes Character vector. Names genes remove. show_warnings Logical value. TRUE, warnings genes found although mentioned vector genes discarded suppressed. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/removeMolecules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove molecules from the SPATA2 object — removeGenes","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/removeMolecules.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove molecules from the SPATA2 object — removeGenes","text":"step affects matrices object thus subsequent analysis steps. Analysis steps already conducted affected! includes clustering, DEA, GSEA etc. advisable integrate step early possible processing pipeline.","code":""},{"path":"/reference/removeMolecules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove molecules from the SPATA2 object — removeGenes","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  genes <- getGenes(object) head(genes) length(genes)  object <- removeGenesZeroCounts(object) object <- removeGenesStress(object)  genes_new <- getGenes(object) length(genes_new)"},{"path":"/reference/removeObs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove observations — removeObs","title":"Remove observations — removeObs","text":"Remove unwanted observations object. removeObs(): Allows specify observations remove manually. removeObsNoCounts(): Identifies removes observations molecule counts SPATA2 object.","code":""},{"path":"/reference/removeObs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove observations — removeObs","text":"","code":"removeObs(object, barcodes, spatial_proc = TRUE, verbose = NULL)  removeObsZeroCounts(   object,   spatial_proc = TRUE,   assay_name = activeAssay(object),   verbose = NULL )"},{"path":"/reference/removeObs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove observations — removeObs","text":"object object class SPATA2 , case S4 generics, objects classes method defined. barcodes Character vector barcodes removed. spatial_proc Logical value. Indicates whether new sub-object processed spatially. TRUE, new tissue outline identified based remaining observations via identifyTissueOutline(). , spatial annotations tested located either remaining tissue sections. , removed. FALSE, processing steps skipped. Generally speaking, recommended. set FALSE, know . verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/removeObs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove observations — removeObs","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/removeObs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove observations — removeObs","text":"Unused levels factor variables feature data.frame dropped.","code":""},{"path":[]},{"path":"/reference/removeObs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove observations — removeObs","text":"","code":"library(SPATA2)  data(\"example_data\") object <- example_data$object_UKF269T_diet  # the function tells you if / how many observations were removed object <- removeObsNoCounts(object, verbose = TRUE)"},{"path":"/reference/removeProcessedMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a processed matrix — removeProcessedMatrix","title":"Remove a processed matrix — removeProcessedMatrix","text":"Removes processed matrix SPATA2 object.","code":""},{"path":"/reference/removeProcessedMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a processed matrix — removeProcessedMatrix","text":"","code":"removeProcessedMatrix(object, mtr_name, assay_name = activeAssay(object))"},{"path":"/reference/removeProcessedMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a processed matrix — removeProcessedMatrix","text":"object object class SPATA2 , case S4 generics, objects classes method defined. mtr_name Character value. name matrix interest. Defaults active matrix assay, denoted activateMatrix(). assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/removeProcessedMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a processed matrix — removeProcessedMatrix","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/removeProcessedMatrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Remove a processed matrix — removeProcessedMatrix","text":"removed matrix active matrix new active matrix defined last element getMatrixNames().","code":""},{"path":"/reference/removeProcessedMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a processed matrix — removeProcessedMatrix","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  getMatrixNames(object) getProcessedMatrixNames(object)  object <- normalizeCounts(object, method = \"LogNormalize\")  getProcessedMatrixNames(object)  object <- removeProcessedMatrix(object, mtr_name = \"LogNormalize\")  getProcessedMatrixNames(object)"},{"path":"/reference/removeSpatialAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove spatial annotations — removeSpatialAnnotations","title":"Remove spatial annotations — removeSpatialAnnotations","text":"Removes spatial annotations SPATA2 object.","code":""},{"path":"/reference/removeSpatialAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove spatial annotations — removeSpatialAnnotations","text":"","code":"removeSpatialAnnotations(object, ids)"},{"path":"/reference/removeSpatialAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove spatial annotations — removeSpatialAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector. IDs spatial annotations remove.","code":""},{"path":"/reference/removeSpatialAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove spatial annotations — removeSpatialAnnotations","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/removeSpatialAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove spatial annotations — removeSpatialAnnotations","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  getSpatAnnIds(object) plotSpatialAnnotations(object)  # get IDs tagged with both 'necrotic' and 'compr' ids_rm <- getSpatAnnIds(object, tags = c(\"necrotic\", \"compr\"), test = \"all\")  print(ids_rm)  object <- removeSpatialAnnotations(object, ids = ids_rm)  plotSpatialAnnotations(object)"},{"path":"/reference/removeSpatialOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove spatial outliers — removeSpatialOutliers","title":"Remove spatial outliers — removeSpatialOutliers","text":"Removes data points identified spatial outliers related data. spatial outliers exist, input object returned .","code":""},{"path":"/reference/removeSpatialOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove spatial outliers — removeSpatialOutliers","text":"","code":"removeSpatialOutliers(   object,   spatial_proc = TRUE,   rm_var = TRUE,   verbose = NULL )"},{"path":"/reference/removeSpatialOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove spatial outliers — removeSpatialOutliers","text":"object object class SPATA2 , case S4 generics, objects classes method defined. spatial_proc Logical value. Indicates whether new sub-object processed spatially. TRUE, new tissue outline identified based remaining observations via identifyTissueOutline(). , spatial annotations tested located either remaining tissue sections. , removed. FALSE, processing steps skipped. Generally speaking, recommended. set FALSE, know . rm_var Logical value. TRUE, variable sp_outlier removed since contains FALSE function call value longer. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/removeSpatialOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove spatial outliers — removeSpatialOutliers","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/removeSpatialOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove spatial outliers — removeSpatialOutliers","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  # spatial outliers have not been labeled histologically (= NA) plotSurface(object, color_by = \"histology\")  object <- identifyTissueOutline(object) # step 1  plotSurface(object, color_by = \"tissue_section\")  object <- identifySpatialOutliers(object) # step 2  plotSurface(object, color_by = \"sp_outlier\")  nObs(object) # before removal  object <- removeSpatialOutliers(object) # step 3  plotSurface(object, color_by = \"histology\")  nObs(object) # after removal"},{"path":"/reference/removeSpatialTrajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove spatial trajectories — removeSpatialTrajectories","title":"Remove spatial trajectories — removeSpatialTrajectories","text":"Removes spatial trajectories SPATA2 object.","code":""},{"path":"/reference/removeSpatialTrajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove spatial trajectories — removeSpatialTrajectories","text":"","code":"removeSpatialTrajectories(object, ids)"},{"path":"/reference/removeSpatialTrajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove spatial trajectories — removeSpatialTrajectories","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character vector. IDs spatial trajectories remove.","code":""},{"path":"/reference/removeSpatialTrajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove spatial trajectories — removeSpatialTrajectories","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/removeSpatialTrajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove spatial trajectories — removeSpatialTrajectories","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  getTrajectoryIds(object)  object <- removeSpatialTrajectories(object, ids = \"horizontal_mid\")  getTrajectoryIds(object)"},{"path":"/reference/removeTissueFragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove data points from tissue fragments — removeTissueFragments","title":"Remove data points from tissue fragments — removeTissueFragments","text":"Removes data points fall tissue fragments identified identifyTissueOutline() identifySpatialOutliers()","code":""},{"path":"/reference/removeTissueFragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove data points from tissue fragments — removeTissueFragments","text":"","code":"removeTissueFragments(object, fragments = NULL, fdb_fn = \"message\")"},{"path":"/reference/removeTissueFragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove data points from tissue fragments — removeTissueFragments","text":"object object class SPATA2 , case S4 generics, objects classes method defined. fragments Numeric vector, character vector NULL. NULL, tissue fragments removed. numeric character indicates fragments removed.","code":""},{"path":"/reference/removeTissueFragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove data points from tissue fragments — removeTissueFragments","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/removeTissueFragments.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"Remove data points from tissue fragments — removeTissueFragments","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":[]},{"path":"/reference/renameGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename cluster/group names — renameGroups","title":"Rename cluster/group names — renameGroups","text":"Allows rename groups within grouping variable. Make sure rename tissue sections renameTissueSection()!","code":""},{"path":"/reference/renameGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename cluster/group names — renameGroups","text":"","code":"renameGroups(object, grouping, ..., keep_levels = NULL)  renameTissueSection(object, ...)"},{"path":"/reference/renameGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename cluster/group names — renameGroups","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. ... groups renamed specified according following syntax: 'new_group_name' = 'old_group_name'.","code":""},{"path":[]},{"path":"/reference/renameGroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename cluster/group names — renameGroups","text":"","code":"library(SPATA2)  data(\"example_data\")  ## Example 1 - rename normal grouping variables  object <- example_data$object_UKF269T_diet  plotSurface(object, color_by = \"histology\")  object <-  renameGroups(   object = object,   grouping = \"histology\",   \"hist1\" = \"tumor\", \"hist2\" = \"transition\", \"hist3\" = \"infiltrated\"   )  plotSurface(object, color_by = \"histology\")  ## Example 2 - rename tissue secions  object <- example_data$object_lmu_mci_diet  object <- identifyTissueOutline(object)  plotSurface(object, color_by = \"tissue_section\")  object <-  renameTissueSection(    object = object,    \"lower_hemisphere\" = \"tissue_section_1\", \"upper_hemisphere\" = \"tissue_section_2\"    )  plotSurface(object, color_by = \"tissue_section\")"},{"path":"/reference/renameImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename an image — renameImage","title":"Rename an image — renameImage","text":"Renames image.","code":""},{"path":"/reference/renameImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename an image — renameImage","text":"","code":"renameImage(object, ...)  # S4 method for class 'SPATA2' renameImage(object, img_name, new_img_name, ...)  # S4 method for class 'SpatialData' renameImage(object, img_name, new_img_name, verbose = TRUE, ...)"},{"path":"/reference/renameImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename an image — renameImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image renamed. new_img_name Character value. new name image. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/renameImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename an image — renameImage","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/renameImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename an image — renameImage","text":"","code":"library(SPATA2)  object <- example_data$object_UKF275T_diet  getImageNames(object)  plotImage(object, img_name = \"normres\") # fails  object <- renameImage(object, img_name = \"normres\", new_img_name = \"normres\")  plotImage(object, img_name = \"normres\")"},{"path":"/reference/renameMetaFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename features — renameMetaFeatures","title":"Rename features — renameMetaFeatures","text":"Allows rename features stored inside @fdata slot.","code":""},{"path":"/reference/renameMetaFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename features — renameMetaFeatures","text":"","code":"renameMetaFeatures(object, ...)"},{"path":"/reference/renameMetaFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename features — renameMetaFeatures","text":"object valid spata-object. ... features renamed specified according following syntax: 'new_feature_name' = 'old_feature_name'.","code":""},{"path":"/reference/renameMetaFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename features — renameMetaFeatures","text":"upated spata-object.","code":""},{"path":"/reference/renameMetaFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename features — renameMetaFeatures","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  getFeatureNames(object)  object <- renameMetaFeatures(object, \"histology_new\" = \"histology\")  getFeatureNames(object)  plotSurface(object, color_by = \"histology\") # fails potSurface(object, color_by = \"histology_new\")"},{"path":"/reference/renameSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename SPATA2 object — renameSpataObject","title":"Rename SPATA2 object — renameSpataObject","text":"Renames SPATA2 object.","code":""},{"path":"/reference/renameSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename SPATA2 object — renameSpataObject","text":"","code":"renameSpataObject(object, sample_name)"},{"path":"/reference/renameSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename SPATA2 object — renameSpataObject","text":"object object class SPATA2 , case S4 generics, objects classes method defined. sample_name Character value. new sample name.","code":""},{"path":"/reference/renameSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename SPATA2 object — renameSpataObject","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/renameSpataObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename SPATA2 object — renameSpataObject","text":"Sets slot @sample S4 classes within SPATA2 object new name.","code":""},{"path":"/reference/renameSpataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename SPATA2 object — renameSpataObject","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  object <- renameSpataObject(object, sample_name = \"my_new_name\")"},{"path":"/reference/renameSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a spatial annotation — renameSpatialAnnotation","title":"Rename a spatial annotation — renameSpatialAnnotation","text":"Renames spatial annotation.","code":""},{"path":"/reference/renameSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a spatial annotation — renameSpatialAnnotation","text":"","code":"renameSpatialAnnotation(object, id, new_id, overwrite = FALSE)"},{"path":"/reference/renameSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a spatial annotation — renameSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value. current ID spatial annotation renamed. new_id Character value. new ID spatial annotation. overwrite Logical value. Must TRUE allow overwriting. inherit argument_dummy params","code":""},{"path":"/reference/renameSpatialAnnotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename a spatial annotation — renameSpatialAnnotation","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  plotSpatialAnnotations(object)  object <- renameSpatialAnnotation(object, id = \"necrotic_area\", new_id = \"Necrotic_Area_Cap\")  plotSpatialAnnotations(object)"},{"path":"/reference/renameSpatialTrajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a spatial trajectory. — renameSpatialTrajectory","title":"Rename a spatial trajectory. — renameSpatialTrajectory","text":"Renames spatial trajectory.","code":""},{"path":"/reference/renameSpatialTrajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a spatial trajectory. — renameSpatialTrajectory","text":"","code":"renameSpatialTrajectory(object, id, new_id, overwrite = FALSE)"},{"path":"/reference/renameSpatialTrajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a spatial trajectory. — renameSpatialTrajectory","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value. current ID spatial trajectory renamed. new_id Character value. new ID spatial trajectory. overwrite Logical value. Must TRUE allow overwriting. inherit argument_dummy params","code":""},{"path":"/reference/renameSpatialTrajectory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename a spatial trajectory. — renameSpatialTrajectory","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  plotSpatialTrajectories(object)  object <- renameSpatialTrajectory(object, id = \"horizontal_mid\", new_id = \"Horizontal_Mid_Cap\")  plotSpatialTrajectories(object)"},{"path":"/reference/resetImageJustification.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — resetImageJustification","title":"Deprecated — resetImageJustification","text":"Deprecated favor resetImageTransformations().","code":""},{"path":"/reference/resetImageJustification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — resetImageJustification","text":"","code":"resetImageJustification(object)"},{"path":"/reference/resetImageTransformations.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset image transformations — resetImageTransformations","title":"Reset image transformations — resetImageTransformations","text":"Resets transformation values image defined usage alignImage(), alignImageAuto() alignImageInteractive().","code":""},{"path":"/reference/resetImageTransformations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset image transformations — resetImageTransformations","text":"","code":"resetImageTransformations(object, ...)  # S4 method for class 'SPATA2' resetImageTransformations(object, img_name, ...)  # S4 method for class 'SpatialData' resetImageTransformations(object, img_name, ...)  # S4 method for class 'HistoImage' resetImageTransformations(object, ...)"},{"path":"/reference/resetImageTransformations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset image transformations — resetImageTransformations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/resetImageTransformations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset image transformations — resetImageTransformations","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/resetImageTransformations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset image transformations — resetImageTransformations","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  plotImage(object)  object <- alignImage(object, img_name = \"lowres\", angle = 90)  # note that $angle contains instructions to rotate the image to 90° getImageTransformations(object, img_name = \"lowres\")  plotImage(object)  object <- resetImageTransformations(object, img_name = \"lowres\")  getImageTransformations(object, img_name = \"lowres\")  plotImage(object)"},{"path":"/reference/resizingSegmentsGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Used for GeomSegmentFixed — resizingSegmentsGrob","title":"Used for GeomSegmentFixed — resizingSegmentsGrob","text":"Used GeomSegmentFixed","code":""},{"path":"/reference/resizingSegmentsGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used for GeomSegmentFixed — resizingSegmentsGrob","text":"","code":"resizingSegmentsGrob(...)"},{"path":"/reference/resizingTextGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Used for GeomTextScaled — resizingTextGrob","title":"Used for GeomTextScaled — resizingTextGrob","text":"Used GeomTextScaled","code":""},{"path":"/reference/resizingTextGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used for GeomTextScaled — resizingTextGrob","text":"","code":"resizingTextGrob(...)"},{"path":"/reference/rotateAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate image and coordinates — rotateAll","title":"Rotate image and coordinates — rotateAll","text":"rotate*() family rotates current image coordinates spatial aspects everything. See details information. NOTE: rotateImage() rotates image lets everything else . use want rotate image aligned spatial coordinates. want rotate image maintaining alignment spatial aspects SPATA2 object use rotateAll()!","code":""},{"path":"/reference/rotateAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate image and coordinates — rotateAll","text":"","code":"rotateAll(object, angle, clockwise = TRUE)  rotateImage(   object,   angle,   img_name = activeImage(object),   clockwise = TRUE,   ... )  rotateCoordinates(object, angle, clockwise = TRUE, verbose = NULL)  rotateCoordsDf(object, angle, clockwise = TRUE, verbose = NULL)  rotateTissueOutlineDf(object, angle, clockwise = TRUE, verbose = NULL)  rotateSpatialAnnotations(   object,   angle,   ids = getSpatAnnIds(object),   clockwise = TRUE,   verbose = NULL )  rotateSpatialTrajectories(object, angle, clockwise = TRUE, verbose = NULL)"},{"path":"/reference/rotateAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate image and coordinates — rotateAll","text":"object object class SPATA2 , case S4 generics, objects classes method defined. angle Numeric value. angle coordinates rotated. range 1-359. clockwise Logical value. TRUE, rotation performed clockwise direction. FALSE, way round. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames(). ... Additional arguments given give_feedback(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/rotateAll.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate image and coordinates — rotateAll","text":"rotate*() functions can used rotate complete SPATA2 object content rotate single aspects. rotateAll(): Rotates image well every single spatial aspect. Always tracks justification. rotateImage(): Rotates image. rotateCoordinates(): Rotates coordinates data.frame, spatial annotations spatial trajectories. rotateCoordsDf(): Rotates coordinates data.frame. rotateSpatialAnnotations(): Rotates spatial annotations. rotateSpatialTrajectories(): Rotates spatial trajectories.","code":""},{"path":[]},{"path":"/reference/rotateSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate the outline of a spatial annotation — rotateSpatialAnnotation","title":"Rotate the outline of a spatial annotation — rotateSpatialAnnotation","text":"Rotates outline spatial annotation specific degree.","code":""},{"path":"/reference/rotateSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate the outline of a spatial annotation — rotateSpatialAnnotation","text":"","code":"rotateSpatialAnnotation(object, ...)  # S4 method for class 'SPATA2' rotateSpatialAnnotation(   object,   id,   angle,   clockwise = TRUE,   new_id = FALSE,   overwrite = FALSE )  # S4 method for class 'SpatialData' rotateSpatialAnnotation(   object,   id,   angle,   clockwise = TRUE,   new_id = FALSE,   overwrite = FALSE )"},{"path":"/reference/rotateSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate the outline of a spatial annotation — rotateSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Additional arguments given give_feedback(). id Character value. ID spatial annotation interest. angle Numeric value. angle coordinates rotated. range 1-359. clockwise Logical value. TRUE, rotation performed clockwise direction. FALSE, way round. new_id Character value FALSE. character, resulting spatial annotation stored new ID. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/rotateSpatialAnnotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate the outline of a spatial annotation — rotateSpatialAnnotation","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/rotate_coords_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate coordinate variables pairs — rotate_coords_df","title":"Rotate coordinate variables pairs — rotate_coords_df","text":"Rotates coordinate variable pairs data.frame.","code":""},{"path":"/reference/rotate_coords_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate coordinate variables pairs — rotate_coords_df","text":"","code":"rotate_coords_df(   df,   angle,   clockwise = TRUE,   coord_vars = list(pair1 = c(\"x\", \"y\"), pair2 = c(\"xend\", \"yend\"), pair3 = c(\"x_orig\",     \"y_orig\")),   verbose = FALSE,   error = FALSE,   center = c(0, 0),   ... )"},{"path":"/reference/rotate_coords_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate coordinate variables pairs — rotate_coords_df","text":"df Data.frame numeric coordinate variable pairs. angle Numeric value. angle coordinates rotated. range 1-359. clockwise Logical value. TRUE, rotation performed clockwise direction. FALSE, way round. coord_vars Input denotes variable pairs. Can vector length two. list vectors length two. First element vector sets name x-axis, second value sets name y axis. list provided, slot checked invalid slots removed iteration. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) error Logical. TRUE input invalid function throws error. ... Additional arguments given give_feedback().","code":""},{"path":"/reference/rotate_coords_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate coordinate variables pairs — rotate_coords_df","text":"Adjusted data.frame.","code":""},{"path":"/reference/rotate_coords_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotate coordinate variables pairs — rotate_coords_df","text":"Usually data.frame contains variables refer x- y-coordinates one single pair . E.g. one variable named x one variable named y. , coord_vars = c(\"x\", \"y\") coord_vars = list(pair1 = c(\"x\", \"y\") appropriate (naming list necessary). data.frame contains several variables refer axes different scales can adjusted altogether. E.g. data.frame contains variable pair x y well col row needs coord_vars = list(pair1 = c(\"x\", \"y\"), pair2 = c(\"col\", \"row\"). pair adjusted variables must found, else adjustment skipped function gives feedback verbose = TRUE throws error error = TRUE. Default sets FALSE results silent skipping.","code":""},{"path":"/reference/runAutoencoderAssessment.html","id":null,"dir":"Reference","previous_headings":"","what":"Assessment of Neural Network Set Up — assessAutoencoderOptions","title":"Assessment of Neural Network Set Up — assessAutoencoderOptions","text":"Assesses different neural network set ups regarding activation function number bottleneck neurons.","code":""},{"path":"/reference/runAutoencoderAssessment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assessment of Neural Network Set Up — assessAutoencoderOptions","text":"","code":"assessAutoencoderOptions(   expr_mtr,   activations,   bottlenecks,   layers = c(128, 64, 32),   dropout = 0.1,   epochs = 20,   verbose = TRUE )  runAutoencoderAssessment(   object,   activations,   bottlenecks,   layers = c(128, 64, 32),   dropout = 0.1,   epochs = 20,   verbose = TRUE )"},{"path":"/reference/runAutoencoderAssessment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assessment of Neural Network Set Up — assessAutoencoderOptions","text":"expr_mtr expression matrix used input neural network. activations Character vector. Denotes activation functions assessed. bottlenecks Numeric vector. Denotes different numbers bottleneck neurons assessed. layers Numeric vector length 3. Denotes number neurons three hidden layers. (default = c(128, 64, 32)) dropout Numeric value. Denotes dropout. (defaults 0.1) epochs Numeric value. Denotes epochs neural network. (defaults 20) object valid spata-object.","code":""},{"path":"/reference/runAutoencoderAssessment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assessment of Neural Network Set Up — assessAutoencoderOptions","text":"runAutoencoderAssessment(): spata object containing list holds total variance measured irlba::prcomp_irlba() combination activations/bottlenecks well additional set . assessAutoencoderOptions(): list holds total variance measured irlba::prcomp_irlba() combination activations/bottlenecks well additional set .","code":""},{"path":"/reference/runAutoencoderDenoising.html","id":null,"dir":"Reference","previous_headings":"","what":"Denoise expression matrix — runAutoencoderDenoising","title":"Denoise expression matrix — runAutoencoderDenoising","text":"function constructs uses neural network denoise expression levels spatially.","code":""},{"path":"/reference/runAutoencoderDenoising.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Denoise expression matrix — runAutoencoderDenoising","text":"","code":"runAutoencoderDenoising(   object,   activation = \"relu\",   bottleneck = 56,   mtr_name_output = \"denoised\",   layers = c(128, 64, 32),   dropout = 0.1,   epochs = 20,   display_plot = FALSE,   genes = NULL,   set_as_active = FALSE,   verbose = TRUE,   of_sample = NA )"},{"path":"/reference/runAutoencoderDenoising.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Denoise expression matrix — runAutoencoderDenoising","text":"object valid spata-object. activation Character value. Denotes activation function. (defaults 'relu') bottleneck Numeric value. Denotes number bottleneck neurons. mtr_name_output Character value. Denotes name denoised matrix stored data slot. layers Numeric vector length 3. Denotes number neurons three hidden layers. (default = c(128, 64, 32)) dropout Numeric value. Denotes dropout. (defaults 0.1) epochs Numeric value. Denotes epochs neural network. (defaults 20) display_plot Logical. set TRUE scatter plot result displayed viewer pane. See documentation plotAutoencoderResults() information. genes Character vector length two. Denotes genes used validation plot. set_as_active Logical. set TRUE denoised matrix set active matrix via setActiveExpressionMatrix().","code":""},{"path":"/reference/runAutoencoderDenoising.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Denoise expression matrix — runAutoencoderDenoising","text":"spata-object containing denoised expression matrix slot @data$denoised. matrix denoted active matrix.","code":""},{"path":"/reference/runBayesSpaceClustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering with BayesSpace — runBayesSpaceClustering","title":"Clustering with BayesSpace — runBayesSpaceClustering","text":"wrapper around BayesSpace clustering pipeline introduced Zhao et al. (2021).","code":""},{"path":"/reference/runBayesSpaceClustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering with BayesSpace — runBayesSpaceClustering","text":"","code":"runBayesSpaceClustering(   object,   name = \"bayes_space\",   n.Pcs = 15,   n.HVGs = 2000,   skip.PCA = FALSE,   log.normalize = TRUE,   assay.type = \"logcounts\",   BSPARAM = BiocSingular::ExactParam(),   qs = 3:15,   burn.in = c(100, 1000),   nrep = c(1000, 50000),   use.dimred = \"PCA\",   d = 15,   init.method = \"mclust\",   model = \"t\",   gamma = 3,   mu0 = NULL,   lambda0 = NULL,   alpha = 1,   beta = 0.01,   save.chain = FALSE,   chain.fname = NULL,   prefix = \"B\",   return_model = TRUE,   empty_remove = FALSE,   overwrite = FALSE,   assign_sce = FALSE,   assign_envir = .GlobalEnv,   seed = 123,   verbose = NULL,   ... )"},{"path":"/reference/runBayesSpaceClustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clustering with BayesSpace — runBayesSpaceClustering","text":"object object class SPATA2 , case S4 generics, objects classes method defined. name Character value. name cluster variable feature data SPATA2 object. Defaults bayes_space. n.HVGs Number highly variable genes run PCA upon. skip.PCA Skip PCA (dimensionality reduction previously computed.) log.normalize Whether log-normalize input data scater. May omitted log-normalization previously computed. assay.type Name assay sce containing normalized counts. Leave \"logcounts\" unless explicitly pre-computed different normalization added sce another assay. Note recommend running BayesSpace PCs computed raw counts. BSPARAM BiocSingularParam object specifying algorithm used perform PCA. default, exact PCA performed, current spatial datasets generally small (<10,000 spots). perform faster approximate PCA, please specify FastAutoParam() set random seed ensure reproducibility. qs values q evaluate. qs one value exactly given q BayesSpace::spatialCluster(). Else optimal q provided values identified using BayesSpace::qTune(). burn., nrep Integers specifying range repetitions compute. use.dimred Name reduced dimensionality result reducedDims(sce). provided, cluster features directly. d Number top principal components use clustering. init.method init provided, cluster top d PCs method obtain initial cluster assignments. model Error model. ('normal' 't') gamma Smoothing parameter. Defaults 2 platform=\"ST\" 3 platform=\"Visium\". (Values range 1-3 seem work well.) mu0 Prior mean hyperparameter mu. provided, mu0 set mean PCs spots. lambda0 Prior precision hyperparam mu. provided, lambda0 set diagonal matrix \\(0.01 \\). alpha Hyperparameter Wishart distributed precision lambda. beta Hyperparameter Wishart distributed precision lambda. save.chain true, save MCMC chain HDF5 file. chain.fname File path saved chain. Tempfile used provided. prefix Character value. Prefix cluster groups. overwrite Logical value. TRUE, name overwrites features feature data SPATA2 object. assign_sce Character value NULL. character, specifies name bayes space output (object class SingleCellExperiment) assigned global environment. makes whole output bayes space pipeline available instead adding clustering output grouping variable SPATA2 object. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional arguments given BayesSpace::spatialCluster(). Exception: sce, q specified within function. q_force Numeric value FALSE. numeric, forces number output clusters input value. FALSE, optimal number clusters chosen q determined elbow point BayesSpace::qTune().","code":""},{"path":"/reference/runBayesSpaceClustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clustering with BayesSpace — runBayesSpaceClustering","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/runBayesSpaceClustering.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clustering with BayesSpace — runBayesSpaceClustering","text":"function wrapper around readVisium(), spatialPreprocess(), qTune() spatialCluster() BayesSpace package. results stored form grouping variable feature data.frame returned SPATA2 object.","code":""},{"path":"/reference/runBayesSpaceClustering.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Clustering with BayesSpace — runBayesSpaceClustering","text":"Zhao E, Stone MR, Ren X, Guenthoer J, Smythe KS, Pulliam T, Williams SR, Uytingco CR, Taylor SEB, Nghiem P, Bielas JH, Gottardo R. Spatial transcriptomics subspot resolution BayesSpace. Nat Biotechnol. 2021 Nov;39(11):1375-1384. doi: 10.1038/s41587-021-00935-2. Epub 2021 Jun 3. PMID: 34083791; PMCID: PMC8763026.","code":""},{"path":[]},{"path":"/reference/runBayesSpaceClustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clustering with BayesSpace — runBayesSpaceClustering","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  # tests options for q from 3 to 15 and picks the best object <- runBayesSpaceClustering(object, name = \"new_bspace\", qs = 3:15)  plotLoglik(object)  # run with q = 10 to force 10 clusters in the output object <- runBayesSpaceClustering(object, name = \"bspace_10\", qs = 10)"},{"path":"/reference/runCIN.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute chromosomal instability — runCIN","title":"Compute chromosomal instability — runCIN","text":"Computes chromosomal instability scores based copy number variation results according Drews et al., 2022. Requires results runCNV(). See details .","code":""},{"path":"/reference/runCIN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute chromosomal instability — runCIN","text":"","code":"runCIN(   object,   bin_size = 1e+06,   window_k = 10,   noise = 0.035,   gene_pos_df = SPATA2::gene_pos_df,   chrom_regions_df = SPATA2::cnv_regions_df,   coverage_model = SPATA2::coverage_model,   verbose = NULL )"},{"path":"/reference/runCIN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute chromosomal instability — runCIN","text":"object object class SPATA2 , case S4 generics, objects classes method defined. bin_size size used chromosomal binning. Defaults 1.000.000 base pairs. window_k Given window.k imputeTS::na_ma. noise Numeric value. Sets level noise add. gene_pos_df Data.frame defining positions genes chromosomes. chrom_regions_df Data.frame defining chromosomal regions. coverage_model formula. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/runCIN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute chromosomal instability — runCIN","text":"Adds total 18 new numeric variables meta data.frame. CX1, CX2, CX3, ..., CX17: Chromosomal instability scores described paper referenced . ploidy: Quantification abnormal ploidy. Adding variables forced! Existing variable equal names overwritten!","code":""},{"path":"/reference/runCIN.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute chromosomal instability — runCIN","text":"Requires packages CINSignatureQuantification imputeTS installed.","code":""},{"path":"/reference/runCIN.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute chromosomal instability — runCIN","text":"Drews, R.M., Hernando, B., Tarabichi, M. et al. pan-cancer compendium chromosomal instability. Nature 606, 976–983 (2022). https://doi.org/10.1038/s41586-022-04789-9","code":""},{"path":"/reference/runCNV.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify large-scale chromosomal copy number variations — runCNV","title":"Identify large-scale chromosomal copy number variations — runCNV","text":"functions integrates large-scale copy number variations analysis using inferncnv package. detailed information infercnv works visit https://github.com/broadinstitute/inferCNV/wiki.","code":""},{"path":"/reference/runCNV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify large-scale chromosomal copy number variations — runCNV","text":"","code":"runCNV(   object,   ref_annotation = cnv_ref[[\"annotation\"]],   ref_mtr = cnv_ref[[\"mtr\"]],   ref_regions = cnv_ref[[\"regions\"]],   gene_pos_df = SPATA2::gene_pos_df,   directory_cnv_folder = \"data-development/cnv-results\",   directory_regions_df = NA,   cnv_prefix = \"Chr\",   save_infercnv_object = TRUE,   verbose = NULL,   CreateInfercnvObject = list(ref_group_names = \"ref\"),   require_above_min_mean_expr_cutoff = list(min_mean_expr_cutoff = 0.1),   require_above_min_cells_ref = list(min_cells_per_gene = 3),   normalize_counts_by_seq_depth = list(),   anscombe_transform = list(),   log2xplus1 = list(),   apply_max_threshold_bounds = list(),   smooth_by_chromosome = list(window_length = 101, smooth_ends = TRUE),   center_cell_expr_across_chromosome = list(method = \"median\"),   subtract_ref_expr_from_obs = list(inv_log = TRUE),   invert_log2 = list(),   clear_noise_via_ref_mean_sd = list(sd_amplifier = 1.5),   remove_outliers_norm = list(),   define_signif_tumor_subclusters = list(p_val = 0.05, hclust_method = \"ward.D2\",     cluster_by_groups = TRUE, partition_method = \"qnorm\"),   plot_cnv = list(k_obs_groups = 5, cluster_by_groups = TRUE, output_filename =     \"infercnv.outliers_removed\", color_safe_pal = FALSE, x.range = \"auto\", x.center = 1,     output_format = \"pdf\", title = \"Outliers Removed\") )  runCnvAnalysis(object, ...)"},{"path":"/reference/runCNV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify large-scale chromosomal copy number variations — runCNV","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ref_annotation data.frame row names refer barcodes reference matrix provided argument ref_mtr column named sample refers reference group names. Defaults data.frame stored slot $annotation list SPATA2::cnv_ref. provide reference, make sure barcodes reference input overlap barcodes SPATA2 object. (e.g. suffixing exemplified default list SPATA2::cnv_ref.) ref_mtr count matrix supposed used reference. Row names must refer gene names column names must refer barcodes. Barcodes must identical row names data.frame provided argument ref_annotation. Defaults count matrix stored slot $mtr list SPATA2::cnv_ref. provide reference, make sure barcodes reference input overlap barcodes SPATA2 object. (e.g. suffixing exemplified default list SPATA2::cnv_ref.) ref_regions data.frame contains information chromosome positions. Defaults data.frame stored slot $regions list SPATA2::cnv_ref. provide regions reference, make sure data.frame equal column names row names default input. gene_pos_df Either NULL data.frame. data.frame, replaces output CONICsmat::getGenePositions(). Must contain three character variables ensembl_gene_id, hgnc_symbol, chromosome_name two numeric variables start_position end_position.. NULL data.frame created via CONICsmat::getGenePositions() using gene names appear count matrix reference matrix. Defaults SPATA2 intern data.frame SPATA2::gene_pos_df. directory_cnv_folder Character value. directory leads folder store temporary files, infercnv-object well output heatmap. cnv_prefix Character value. Denotes string feature variables information chromosomal gains losses stored prefixed. save_infercnv_object Logical value. set TRUE infercnv-object stored folder denoted argument directory_cnv_folder 'infercnv-object.RDS. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) CreateInfercnvObject list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. require_above_min_mean_expr_cutoff list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. require_above_min_cells_ref list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. normalize_counts_by_seq_depth list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. anscombe_transform list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. log2xplus1 list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. apply_max_threshold_bounds list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. smooth_by_chromosome list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. center_cell_expr_across_chromosome list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. subtract_ref_expr_from_obs list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. invert_log2 list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. clear_noise_via_ref_mean_sd list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. remove_outliers_norm list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. define_signif_tumor_subclusters list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj must specified. plot_cnv list arguments function supposed called. Make sure input conflict downstream function calls. Input argument infercnv_obj  must specified. Input argument out_dir taken argument directory_cnv_folder. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/runCNV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify large-scale chromosomal copy number variations — runCNV","text":"updated SPATA2 object containg results respective slot.","code":""},{"path":"/reference/runCNV.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify large-scale chromosomal copy number variations — runCNV","text":"runCnvAnalysis() wrapper around functions infercnv-pipeline composed . Argument directory_cnv_folder lead empty folder temporary files well output heatmap infercnv-object stored without asking permission can lead overwriting due naming issues. Results (including PCA) stored slot @cnv SPATA2 object can obtained via getCnvResults(). Additionally, variables store copy-number-variations barcode-spot added SPATA2 object's feature data. corresponding feature variables named according chromosome's number prefix denoted argument cnv_prefix. Regarding reference data: list SPATA2::cnv_ref offer reference data including count matrix results stRNA-seq healthy human brain tissue, annotation data.frame well data.frame containing information regarding chromosome positions. can choose provide reference data specifying ref_*-arguments. Check content list SPATA2::cnv_ref make sure reference input similiar structure regarding column names, rownames, etc.","code":""},{"path":"/reference/runCNV.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Identify large-scale chromosomal copy number variations — runCNV","text":"runCnvAnalysis() deprecated favor runCNV().","code":""},{"path":"/reference/runCNV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify large-scale chromosomal copy number variations — runCNV","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  # make sure that \"/my_cnv_folder\" exists dir.exists(\"my_cnv_folder\")  # this can take some time object <- runCNV(object, directory_cnv_folder = \"my_cnv_folder\")  plotCnvHeatmap(object, across = \"histology\")  # chromosomal alterations are immediately added to the objects # meta features  getFeatureNames(object)  plotSurface(object, color_by = \"Chr7\", pt_clrsp = \"Reds 3\")"},{"path":"/reference/runDEA.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential expression analysis (DEA) — runDEA","title":"Differential expression analysis (DEA) — runDEA","text":"function makes use Seurat::FindAllMarkers() identify differently expressed variables across groups grouping variable denoted argument across. See details .","code":""},{"path":"/reference/runDEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential expression analysis (DEA) — runDEA","text":"","code":"runDEA(   object,   across,   method_de = NULL,   verbose = NULL,   base = 2,   assay_name = activeAssay(object),   ... )  runDeAnalysis(...)"},{"path":"/reference/runDEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential expression analysis (DEA) — runDEA","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character value NULL. Specifies grouping variable interest. Use getGroupingOptions() obtain variable names group barcode spots object certain manner. method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). ... Additional arguments given Seurat::FindAllMarkers() fc_name, base Given corresponding arguments Seurat::FindAllMarkers().","code":""},{"path":"/reference/runDEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential expression analysis (DEA) — runDEA","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/runDEA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential expression analysis (DEA) — runDEA","text":"function wrapper around DEA pipeline Seurat package. creates temporary Seurat object via Seurat::CreateSeuratObject(), Seurat::SCTransform(). , Seurat::FindAllMarkers() run. output data.frame stored SPATA2 object returned end. across /method_de vectors instead single values runDEA() iterates combinations -loop stores results respective slots. (e.g.: across = 'seurat_clusters' method_de = c('wilcox', 'bimod') function computes differently expressed genes across groups found feature variable seurat_clusters according method wilcox stores results respective slot. according method bimod.) results obtainable via getDeaResults(), getDeaResultsDf() getDeaGenes().","code":""},{"path":"/reference/runDEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential expression analysis (DEA) — runDEA","text":"","code":"library(SPATA2)  data(\"example_data\") object <- example_data$object_UKF269T_diet  getGroupingOptions(object)  plotSurface(object, color_by = \"histology\")  object <- runDEA(object, across = \"histology\")  # extract best marker gene for each group by lowest p-value top_marker_genes <-   getDeaGenes(object, across = \"histology\", n_lowest_pval = 1)  print(top_marker_genes)  plotSurfaceComparison(object, color_by = top_marker_genes)"},{"path":"/reference/runGSEA.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute gene set enrichment — runGSEA","title":"Compute gene set enrichment — runGSEA","text":"Computes gene set enrichment based results runDEA(). See details .","code":""},{"path":"/reference/runGSEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute gene set enrichment — runGSEA","text":"","code":"runGSEA(   object,   across,   methods_de = \"wilcox\",   max_adj_pval = 0.05,   min_lfc = 0,   n_highest_lfc = NULL,   n_lowest_pval = NULL,   signatures = NULL,   test = c(\"hypergeometric\", \"kstest\"),   absolute = FALSE,   background = 20000,   power = 1,   pval = 0.05,   fdr = 0.05,   reduce = TRUE,   quiet = TRUE,   chr_to_fct = TRUE,   assay_name = activeAssay(object),   verbose = NULL,   ... )"},{"path":"/reference/runGSEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute gene set enrichment — runGSEA","text":"object object class SPATA2 , case S4 generics, objects classes method defined. across Character vector. grouping variables interest. methods_de Character vector. differential expression methods interest. max_adj_pval Numeric value. Sets threshold adjusted p-values. genes adjusted p-values threshold ignored. min_lfc Numeric value. Sets threshold average log fold change. genes average log fold change threshold ignored. n_highest_lfc Numeric value. Affects total number genes kept. See details. n_lowest_pval Numeric value. Affects total number genes kept. See details. signatures Character vector signature names taken assays stored signatures. Defaults signatures currently active assay. test Choose enrichment type e.g. c(\"hypergeometric\", \"kstest\") absolute Takes max-min score rather max deviation null (kstest ) background Size character vector background population genes power Exponent weights (kstest ) pval Filter results less pval cutoff fdr Filter results less fdr cutoff reduce Logical value. set TRUE (default) return value hypeR::hypeR() reduced necessary SPATA2s function work. FALSE, complete objects stored. grow SPATA2 object's size quickly! quiet Use true suppress logs warnings assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Additional arguments given Seurat::FindAllMarkers() gene_set_list named list character vectors. Names slots correspond gene set names. slot contains genes gene sets.Holds priority gene_set_names.","code":""},{"path":"/reference/runGSEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute gene set enrichment — runGSEA","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/runGSEA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute gene set enrichment — runGSEA","text":"Computes gene set enrichment analysis using hypeR::hypeR(). iterating possible combinations across methods_de. Combinations DE-results found silently skipped.","code":""},{"path":"/reference/runGSEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute gene set enrichment — runGSEA","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  # requires the results of runDEA(object, across = \"histology\")! object <- runDEA(object, across = \"histology\")  object <- runGSEA(object, across = \"histology\")  plotGseaDotplot(object, across = \"histology\", )"},{"path":"/reference/runKmeansClustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering with Kmeans — runKmeansClustering","title":"Clustering with Kmeans — runKmeansClustering","text":"wrapper around Kmeans clustering algorithm. Iterates combinations ks methods_kmeans stores resulting clustering variables feature data.frame.","code":""},{"path":"/reference/runKmeansClustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering with Kmeans — runKmeansClustering","text":"","code":"runKmeansClustering(   object,   ks,   methods_kmeans = \"Hartigan-Wong\",   prefix = \"K\",   naming = \"{method_kmeans}_k{k}\",   n_pcs = NULL,   overwrite = TRUE,   ... )"},{"path":"/reference/runKmeansClustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clustering with Kmeans — runKmeansClustering","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ks Numeric vector. Denotes options k-clusters iterate. Values <1 discarded. (Givent o centers stats::kmeans()). methods_kmeans character vector kmeans methods. one c(\"Hartigan-Wong\", \"Lloyd\", \"Forgy\", \"MacQueen\"). (Given algorithm stats::kmeans()). naming glue::glue() instruction name resulting cluster variables. use method_kmeans refer method k value k. n_pcs Integer value. number principal components use clustering. overwrite Logical value. Must TRUE allow overwriting. ... Additional arguments given stats::kmeans().","code":""},{"path":"/reference/runKmeansClustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clustering with Kmeans — runKmeansClustering","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/runKmeansClustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clustering with Kmeans — runKmeansClustering","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  object <- runPCA(object, n_pcs = 20)  object <- runKmeansClustering(object, ks = 3:10, n_pcs = 20)  getFeatureNames(object)"},{"path":"/reference/runNearestNeighborClustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering with nearest neighbor search — runNearestNeighborClustering","title":"Clustering with nearest neighbor search — runNearestNeighborClustering","text":"wrapper around RANN::nn2() function - nearest neighbor clustering.","code":""},{"path":"/reference/runNearestNeighborClustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering with nearest neighbor search — runNearestNeighborClustering","text":"","code":"runNearestNeighborClustering(   object,   n_pcs = NULL,   k = 50,   naming = \"nn2_{priority}_{treetype}\",   searchtype = \"priority\",   treetype = \"bd\",   radius = 0,   eps = 0,   overwrite = FALSE,   verbose = TRUE )"},{"path":"/reference/runNearestNeighborClustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clustering with nearest neighbor search — runNearestNeighborClustering","text":"object object class SPATA2 , case S4 generics, objects classes method defined. n_pcs Numeric value NULL. numeric, specifies number principal components use. NULL, principal components used (computed runPCA()). k maximum number nearest neighbours compute. default value set smaller number columnns data. naming Character value. glue expression new cluster variable name. searchtype See details treetype Character vector. Character vector specifying standard 'kd' tree 'bd' (box-decomposition, AMNSW98) tree may perform better larger point sets. radius Radius search searchtype='radius' eps Error bound: default 0.0 implies exact nearest neighbour search overwrite Logical value. Must TRUE allow overwriting. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) searchtypes Character value. Either 'priority', 'standard' 'radius '. See details .","code":""},{"path":"/reference/runNearestNeighborClustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clustering with nearest neighbor search — runNearestNeighborClustering","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/runNearestNeighborClustering.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clustering with nearest neighbor search — runNearestNeighborClustering","text":"Search types: priority visits cells increasing order distance query point, hence, converge rapidly true nearest neighbour, standard usually faster exact searches. radius searches neighbours within specified radius point. neighbours nn.idx contain 0 nn.dists contain 1.340781e+154 point.","code":""},{"path":"/reference/runNearestNeighborClustering.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Clustering with nearest neighbor search — runNearestNeighborClustering","text":"Requires RANN packge.","code":""},{"path":"/reference/runSDEA.html","id":null,"dir":"Reference","previous_headings":"","what":"Run spatial differential expression analysis — runSDEA","title":"Run spatial differential expression analysis — runSDEA","text":"function conducts differential expression analysis (DEA) data points grouped based distance SpatialAnnotation.","code":""},{"path":"/reference/runSDEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run spatial differential expression analysis — runSDEA","text":"","code":"runSDEA(   object,   interval,   id = idSA(object),   naming = \"sdea_{id}\",   method_de = \"wilcox\",   base = 2,   overwrite = FALSE,   ... )"},{"path":"/reference/runSDEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run spatial differential expression analysis — runSDEA","text":"object object class SPATA2 , case S4 generics, objects classes method defined. interval Distance measure. width spatial intervals data points grouped starting boundary spatial annotation till edge tissue reached. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation. naming glue::glue() instruction create name grouping variable.Providing simple string without glue syntax works, . method_de Character value. Denotes method according de-analysis performed. Given argument test.use Seurat::FindAllMarkers()-function. Run SPATA::dea_methods obtain valid input options. overwrite Logical value. Must TRUE allow overwriting. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/runSDEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run spatial differential expression analysis — runSDEA","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/runSDEA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run spatial differential expression analysis — runSDEA","text":"function bases concept runDEA() gene expression compared across different groups within grouping variable. However, contrast runDEA() grouping variable denoted via across, function runSDEA() creates grouping variable data points grouped based distance SpatialAnnotation. approach aims identify genes upregulated within certain distance intervals spatial annotation interest. spatial interval defined via argument interval. E.g. interval = 500um data points grouped 500um intervals starting boundaries spatial annotation edge tissue reached. names groups correspond distance : 500um, 1000um, 1500um, etc. interval = 0.5mm, equivalent 500um, grouping group names correspond 0.5mm, 1mm, 1.5mm, etc. Data points lie within boundaries spatial annotation assigned group core. grouping variable created way stored feature data.frame grouping variable DEA results stored slot @dea DEA results.","code":""},{"path":"/reference/runSDEA.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Run spatial differential expression analysis — runSDEA","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":[]},{"path":"/reference/runSeuratClustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering with Seurat — runSeuratClustering","title":"Clustering with Seurat — runSeuratClustering","text":"wrapper around Seurat clustering pipeline suggested Hao Hao et al., 2021.","code":""},{"path":"/reference/runSeuratClustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering with Seurat — runSeuratClustering","text":"","code":"runSeuratClustering(   object,   name = \"seurat_clusters\",   mtr_name = activeMatrix(object),   assay_name = activeAssay(object),   NormalizeData = list(),   ScaleData = list(),   FindVariableFeatures = list(selection.method = \"vst\", nfeatures = 2000),   RunPCA = list(npcs = 60),   FindNeighbors = list(dims = 1:30),   FindClusters = list(resolution = 0.8),   prefix = \"S\",   overwrite = FALSE )"},{"path":"/reference/runSeuratClustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clustering with Seurat — runSeuratClustering","text":"FindVariableFeatures, RunPCA, FindNeighbors, FindClusters argument takes list arguments given equivalent function.","code":""},{"path":"/reference/runSeuratClustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clustering with Seurat — runSeuratClustering","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/runSeuratClustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clustering with Seurat — runSeuratClustering","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  object <- runSeuratClustering(object, name = \"new_seurat_clst\")  plotSurface(object, color_by = \"new_seurat_clst\")"},{"path":"/reference/runSparkx.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify spatially significant features with SPARKX — getSparkxGeneDf","title":"Identify spatially significant features with SPARKX — getSparkxGeneDf","text":"wrapper around algorithm introduced Zhu et al. 2021 identify features non-random spatial expression pattern SPARK-X.","code":""},{"path":"/reference/runSparkx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify spatially significant features with SPARKX — getSparkxGeneDf","text":"","code":"getSparkxGeneDf(object, threshold_pval = 1, arrange_pval = TRUE)  getSparkxGenes(object, threshold_pval)  getSparkxResults(object, assay_name = activeAssay(object), error = TRUE, ...)  runSPARKX(   object,   assay_name = activeAssay(object),   numCores = 1,   option = \"mixture\",   verbose = NULL )"},{"path":"/reference/runSparkx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify spatially significant features with SPARKX — getSparkxGeneDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). error Logical. TRUE input invalid function throws error. ... Used absorb deprecated arguments functions. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/runSparkx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify spatially significant features with SPARKX — getSparkxGeneDf","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/runSparkx.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify spatially significant features with SPARKX — getSparkxGeneDf","text":"Zhu, J., Sun, S. & Zhou, X. SPARK-X: non-parametric modeling enables scalable robust detection spatial expression patterns large spatial transcriptomic studies. Genome Biol 22, 184 (2021). https://doi.org/10.1186/s13059-021-02404-0","code":""},{"path":"/reference/runSparkx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify spatially significant features with SPARKX — getSparkxGeneDf","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  object <- runSPARKX(object)  sparkx_genes <- getSparkxGenes(object, threshold = 0.05)  sparkx_df <- getSparkxGenesDf(object)"},{"path":"/reference/runSpatialCorrelationAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiate gene clustering analysis based on spatial patterns — runSpatialCorrelationAnalysis","title":"Initiate gene clustering analysis based on spatial patterns — runSpatialCorrelationAnalysis","text":"function screens subset genes evaluates spatial overlap correlation- subsequent clustering analysis. Results can conveniently obtained processed additional functions clusterSpCorResults(), getGenes() getSpCorResults().","code":""},{"path":"/reference/runSpatialCorrelationAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiate gene clustering analysis based on spatial patterns — runSpatialCorrelationAnalysis","text":"","code":"runSpatialCorrelationAnalysis(   object,   of_sample = \"\",   genes = 2000,   genes_additional = NULL,   threshold_stw = 0.5,   threshold_stpv = 0.1,   with_ties = TRUE,   method_cor = \"pearson\",   method_dist = \"euclidean\",   mtr_name = NULL,   verbose = TRUE )"},{"path":"/reference/runSpatialCorrelationAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiate gene clustering analysis based on spatial patterns — runSpatialCorrelationAnalysis","text":"object valid spata-object. of_sample argument currently inactive. might reactivated spata-objects can store one sample. genes numeric value (integer) character vector. Determines genes included correlation assessment. specified numeric value genes sorted decreasing fashion corresponding variance across barcode spots. top n genes included whereby n equal specified numeric value. specified character vector elements considered gene names valid inputs included. genes_additional Character vector gene names. genes specified numeric value want certain genes included irrespective variance can denote added variance evaluation. threshold_stw, threshold_stpv Numeric values. values refer results shapiro-wilkinson test results gene. beeing sorted according variance can use arguments filter genes W-value bigger equal threshold_stw respective p-value lower equal threshold_stpv. with_ties Logical. set TRUE (default) genes equal variances kept even total number genes method_dist Character value vector (see details ). Denotes distance methods (e.g. 'euclidean') used. Run validDistanceMethods() obtain valid input options.","code":""},{"path":"/reference/runSpatialCorrelationAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initiate gene clustering analysis based on spatial patterns — runSpatialCorrelationAnalysis","text":"updated spata-object.","code":""},{"path":"/reference/runSpatialCorrelationAnalysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initiate gene clustering analysis based on spatial patterns — runSpatialCorrelationAnalysis","text":"overall expression matrix filtered according input argument genes, transposed given stats::cor(). returned correlation matrix given stats::dist() calculate distance matrix needed subsequent cluster analysis. Use getGenes() argument similar_to order get genes feature similar expression profile/pattern gene interest.","code":""},{"path":"/reference/sample_name.html","id":null,"dir":"Reference","previous_headings":"","what":"sample_name — sample_name","title":"sample_name — sample_name","text":"sample_name","code":""},{"path":"/reference/sample_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sample_name — sample_name","text":"","code":"sample_name(sample_name)"},{"path":"/reference/sample_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sample_name — sample_name","text":"sample_name Character value. Denotes name sample analyzing spata-object. future input SPATA's of_sample-argument.","code":""},{"path":"/reference/saveSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a SPATA2 object with a default directory — saveSpataObject","title":"Save a SPATA2 object with a default directory — saveSpataObject","text":"Saves SPATA2 object default directory.","code":""},{"path":"/reference/saveSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a SPATA2 object with a default directory — saveSpataObject","text":"","code":"saveSpataObject(object, dir = NULL, verbose = NULL, ...)"},{"path":"/reference/saveSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a SPATA2 object with a default directory — saveSpataObject","text":"object object class SPATA2 , case S4 generics, objects classes method defined. dir Character value. directory store SPATA2 object. NULL, defaults directory set setSpataDir(). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/saveSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a SPATA2 object with a default directory — saveSpataObject","text":"Apart side effect (saving object interest) three functions return provided, updated SPATA2 object.","code":""},{"path":[]},{"path":"/reference/saveSpataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a SPATA2 object with a default directory — saveSpataObject","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF269T_diet  getSpataDir(object) # fails, no directory set  # opt 1 object <- setSpataDir(object, directory_spata = \"my_folder/object_UKF269T.RDS\")  saveSpataObject(object)  # opt 2 object <- saveSpataObject(object, directory_spata = \"my_folder/object_UKF269T.RDS\")  getSpataDir(object)"},{"path":"/reference/scale_color_add_on.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 - color add on — scale_color_add_on","title":"ggplot2 - color add on — scale_color_add_on","text":"wrapper around variety scale_color_-() / scale_fill_-() functions.","code":""},{"path":"/reference/scale_color_add_on.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 - color add on — scale_color_add_on","text":"","code":"scale_color_add_on(   aes = \"color\",   variable = NULL,   clrsp = NULL,   clrp = NULL,   clrp.adjust = NULL,   color.trans = \"identity\",   ... )"},{"path":"/reference/scale_color_add_on.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 - color add on — scale_color_add_on","text":"aes Character value. Either 'color' 'fill'. Denotes used aesthetic. variable variable mapped onto denoted aesthetic character value - one 'numeric', 'discrete'. clrsp Character value. color spectrum choice. Run confuns::all_color_spectra() see valid input choices. (Ignored variable discrete) clrp Character value. color palette choice. Run confuns::all_color_palettes() see valid input choices. (Ignored variable numeric) clrp.adjust Named character vector NULL. character, adjusts colors used represent groups. Names input vector must refer group respective named element denotes color represent group. color.trans Character value. variable displayed color continuous (numeric) color.trans given argument trans respective scale_<aes>_*() function. ... Additional arguments given respective function. ggplot2::scale_<aes>_viridis_c(...): variable numeric clrsp one 'cividis', 'viridis', 'inferno', 'magma', 'plasma'. colorspace::scale_<aes>_continuous_sequential(...): variable numeric clrsp sequential. colorspace::scale_<aes>_continuous_diverging(...): variable numeric clrsp diverging. ggplot2::scale_<aes>_viridis_d(...): variable numeric clrp one 'cividis', 'viridis', 'inferno', 'magma', 'plasma'. ggplot2::scale_<aes>_greyscale(...): variable discrete clrp set 'greyscale'. ggplot2:.scale_<aes>_discrete(): variable discrete clrp set 'default'. ggplot2::scale_<aes>_manual(...): variable discrete.","code":""},{"path":"/reference/scale_color_add_on.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 - color add on — scale_color_add_on","text":"unnamed list containing ggproto object.","code":""},{"path":"/reference/scale_color_add_on.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggplot2 - color add on — scale_color_add_on","text":"specified clrp contain enough colors cover specified variable NULL returned - makes call ggplot2::ggplot() use default ggplot2 color panel.","code":""},{"path":"/reference/scale_color_add_on.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 - color add on — scale_color_add_on","text":"","code":"library(ggplot2)  ggplot(mtcars, aes(x = qsec, y = wt)) + geom_point(aes(color = mpg)) + scale_color_add_on(aes = \"color\", clrsp = \"Reds 3\")"},{"path":"/reference/scale_coords_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale coordinate variable pairs — scale_coords_df","title":"Scale coordinate variable pairs — scale_coords_df","text":"Scales coordinate variable pairs data.frame multiplying scale factor.","code":""},{"path":"/reference/scale_coords_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale coordinate variable pairs — scale_coords_df","text":"","code":"scale_coords_df(   df,   scale_fct = 1,   coord_vars = list(pair1 = c(\"x\", \"y\"), pair2 = c(\"xend\", \"yend\"), pair3 = c(\"col\",     \"row\"), pair4 = c(\"imagecol\", \"imagerow\")),   verbose = FALSE,   error = FALSE,   ... )"},{"path":"/reference/scale_coords_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale coordinate variable pairs — scale_coords_df","text":"df Data.frame numeric coordinate variable pairs. scale_fct Numeric value bigger 0. used within flipImage() must range 0 1. applied spatial aspects base coordinates, can bigger 1. coord_vars Input denotes variable pairs. Can vector length two. list vectors length two. First element vector sets name x-axis, second value sets name y axis. list provided, slot checked invalid slots removed iteration. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) error Logical. TRUE input invalid function throws error. ... Additional arguments given give_feedback().","code":""},{"path":"/reference/scale_coords_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale coordinate variable pairs — scale_coords_df","text":"Adjusted data.frame.","code":""},{"path":"/reference/scale_coords_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Scale coordinate variable pairs — scale_coords_df","text":"Usually data.frame contains variables refer x- y-coordinates one single pair . E.g. one variable named x one variable named y. , coord_vars = c(\"x\", \"y\") coord_vars = list(pair1 = c(\"x\", \"y\") appropriate (naming list necessary). data.frame contains several variables refer axes different scales can adjusted altogether. E.g. data.frame contains variable pair x y well col row needs coord_vars = list(pair1 = c(\"x\", \"y\"), pair2 = c(\"col\", \"row\"). pair adjusted variables must found, else adjustment skipped function gives feedback verbose = TRUE throws error error = TRUE. Default sets FALSE results silent skipping.","code":""},{"path":"/reference/section_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Section dummy — section_dummy","title":"Section dummy — section_dummy","text":"Section dummy","code":""},{"path":"/reference/section_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Section dummy — section_dummy","text":"","code":"section_dummy()"},{"path":"/reference/section_dummy.html","id":"area-measures","dir":"Reference","previous_headings":"","what":"Area measures","title":"Section dummy — section_dummy","text":"vignette area measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/section_dummy.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Section dummy — section_dummy","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/section_dummy.html","id":"expansion-of-cropped-image-sections","dir":"Reference","previous_headings":"","what":"Expansion of cropped image sections","title":"Section dummy — section_dummy","text":"argument expand versatile way, specify cropped image section extracted. want cropped image , specify expand = 0. Else, multiple options. general, expand takes three kinds values, namely percentages, distances distance exclamations. Percentage: string suffixed %. E.g. expand = '50%' adds 50% distance center border image annotation image frame. Distance measures: pixel European units length. E.g. expand =  list(x = '1mm') expands x-axis sides 1mm. expand = list(x = c('0.5mm', 1.5mm') expands x-axis left side 0.5mm right side 1.5mm. Exclam distance measures: Distance measure exclamation mark suffix. E.g. expand = '1mm!' centers image forces axis length 1 millimeter. (Example 5) Depending values specified different parts image can expanded. Single values, like expand = 50, recycled: Every end image axis expanded 50 pixel. (Example 2) Vectors length two, like expand = c('1mm', '2mm'), recycled: beginning axis expanded 1 millimeter. end axis expanded 2mm. (Example 3) Named lists can precise. expand = list(x = c('1mm', '0.5mm'), y = c('0.25mm', '1mm')). Applies vectors expand corresponding axis. (Example 4) Using exclam input side axis must specified axis fixed whole. E.g expand = list(x = '1mm!', y = '2mm!') results output expand = list(x = c('1mm!', '1mm!'), y = c('2mm!', '2mm!').","code":""},{"path":"/reference/section_dummy.html","id":"image-visualization-with-ggplot-","dir":"Reference","previous_headings":"","what":"Image visualization with ggplot2","title":"Section dummy — section_dummy","text":"comparing output ggplot() + ggpLayerImage() image plotting functions, may notice image appears horizontally flipped plotted using ggpLayerImage(). behavior due use Cartesian coordinate system SPATA2, pixel coordinates c(width = 1, height = 1) plotted left side bottom. contrast, functions like EBImage::display() graphics::plot() use image space coordinate system, pixel heights start top. Consequently, image space, pixel c(width = 1, height = 1) displayed top resulting mirror inverted visualization image. chose use Cartesian coordinate system SPATA2 believe provides intuitive framework spatial alignment tissue, spatial annotations, spatial trajectories, barcoded sots, single cells, etc. coordinates corresponding data.frames provided form x- y-variables. See getCoordsDf(), getImgAnnOutlineDf(), getTissueOutlineDf() etc. prefer view image regular orientation, can use flipAll() function object, specifying axis = \"horizontal\", reverse effect.","code":""},{"path":"/reference/section_dummy.html","id":"selection-of-spatial-annotations","dir":"Reference","previous_headings":"","what":"Selection of spatial annotations","title":"Section dummy — section_dummy","text":"Selection spatial annotations via arguments ids, class, tags test works three steps: First, ids character prefilters annotations ID specified ones submitted next steps. NULL, annotations submitted next steps. Secondd, class character filters annotations remaining first step class. NULL, step skipped. Third, tags character used combination test select spatial annotations remain second step based meta data tagged . multiple options: Argument test set '' 1: included, image annotation must tagged least one input tags. Argument test set '' 2: included, image annotation must tagged input tags. Can contain tags specified. Argument test set 'identical' 3: included, image annotation must tagged input tags. Can tagged anything else. Argument test set not_identical 4: included, image annotation must tagged combination input tags. Argument test set 'none' 5: included, image annotation must contain input tags. tags NULL, step skipped. Therefore, ids, class tags NULL, default, annotations selected subsetting steps skipped. Eventually, remaining spatial annotations submitted whatever respective function .","code":""},{"path":"/reference/setActiveExpressionMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — setActiveExpressionMatrix","title":"Deprecated — setActiveExpressionMatrix","text":"Deprecated favor activateMatrix().","code":""},{"path":"/reference/setActiveExpressionMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — setActiveExpressionMatrix","text":"","code":"setActiveExpressionMatrix(...)"},{"path":"/reference/setActiveMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — setActiveMatrix","title":"Deprecated — setActiveMatrix","text":"Deprecated favor activateMatrix().","code":""},{"path":"/reference/setActiveMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — setActiveMatrix","text":"","code":"setActiveMatrix(object, mtr_name, verbose = NULL)"},{"path":"/reference/setAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Set MolecularAssay objects — setAssay","title":"Set MolecularAssay objects — setAssay","text":"Function set MolecularAssay object.","code":""},{"path":"/reference/setAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set MolecularAssay objects — setAssay","text":"","code":"setAssay(object, assay)"},{"path":"/reference/setAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set MolecularAssay objects — setAssay","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/setAssay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set MolecularAssay objects — setAssay","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setAutoencoderAssessment.html","id":null,"dir":"Reference","previous_headings":"","what":"Set results of autoencoder assessment — setAutoencoderAssessment","title":"Set results of autoencoder assessment — setAutoencoderAssessment","text":"Set results autoencoder assessment","code":""},{"path":"/reference/setAutoencoderAssessment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set results of autoencoder assessment — setAutoencoderAssessment","text":"","code":"setAutoencoderAssessment(object, assessment_list, of_sample = \"\")"},{"path":"/reference/setAutoencoderAssessment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set results of autoencoder assessment — setAutoencoderAssessment","text":"object valid spata-object. assessment_list Named list slots $df $set_up.","code":""},{"path":"/reference/setAutoencoderAssessment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set results of autoencoder assessment — setAutoencoderAssessment","text":"spata-object.","code":""},{"path":"/reference/setBarcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Set barcodes — setBarcodes","title":"Set barcodes — setBarcodes","text":"Sets reference barcode ids.","code":""},{"path":"/reference/setBarcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set barcodes — setBarcodes","text":"","code":"setBarcodes(object, barcodes)"},{"path":"/reference/setBarcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set barcodes — setBarcodes","text":"object object class SPATA2 , case S4 generics, objects classes method defined. barcodes Character vector. Barcode ids.","code":""},{"path":"/reference/setBarcodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set barcodes — setBarcodes","text":"spata object containing set input.","code":""},{"path":"/reference/setBarcodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set barcodes — setBarcodes","text":"set*()-functions offer save way set certain slots spata-object. check input validity effectively overwrite everything occupying slot set - use caution.","code":""},{"path":"/reference/setCCD.html","id":null,"dir":"Reference","previous_headings":"","what":"Set center to center distance — setCCD","title":"Set center to center distance — setCCD","text":"Sets center center distance slot $ccd SpatialMethod object.","code":""},{"path":"/reference/setCCD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set center to center distance — setCCD","text":"","code":"setCCD(object, ccd)"},{"path":"/reference/setCCD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set center to center distance — setCCD","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ccd Distance measure length one SI units.","code":""},{"path":"/reference/setCCD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set center to center distance — setCCD","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setCCD.html","id":"distance-measures","dir":"Reference","previous_headings":"","what":"Distance measures","title":"Set center to center distance — setCCD","text":"vignette distance measures SPATA2 replaced. Click read .","code":""},{"path":"/reference/setCaptureArea.html","id":null,"dir":"Reference","previous_headings":"","what":"Set capture area — setCaptureArea","title":"Set capture area — setCaptureArea","text":"Sets capture area objects platforms specific capture area / field view.","code":""},{"path":"/reference/setCaptureArea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set capture area — setCaptureArea","text":"","code":"setCaptureArea(object, x = NULL, y = NULL)"},{"path":"/reference/setCaptureArea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set capture area — setCaptureArea","text":"object object class SPATA2 , case S4 generics, objects classes method defined. x, y Vectors length two correspond range respective axis. NULL, respective range stays .","code":""},{"path":"/reference/setCaptureArea.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set capture area — setCaptureArea","text":"spatial methods VisiumSmall VisiumLarge capture area default. can override recommended.","code":""},{"path":[]},{"path":"/reference/setCnvResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Set CNV results — setCnvResults","title":"Set CNV results — setCnvResults","text":"Set CNV results","code":""},{"path":"/reference/setCnvResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set CNV results — setCnvResults","text":"","code":"setCnvResults(object, cnv_list, ...)"},{"path":"/reference/setCnvResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set CNV results — setCnvResults","text":"object object class SPATA2 , case S4 generics, objects classes method defined. cnv_list list containing results runCnvAnalysis(). ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/setCnvResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set CNV results — setCnvResults","text":"spata object containing set input.","code":""},{"path":"/reference/setCnvResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set CNV results — setCnvResults","text":"set*()-functions offer save way set certain slots spata-object. check input validity effectively overwrite everything occupying slot set - use caution.","code":""},{"path":"/reference/setCoordsDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the coordinates — setCoordsDf","title":"Set the coordinates — setCoordsDf","text":"Set coordinates","code":""},{"path":"/reference/setCoordsDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the coordinates — setCoordsDf","text":"","code":"setCoordsDf(object, ...)  # S4 method for class 'SPATA2' setCoordsDf(object, coords_df, force = FALSE)  # S4 method for class 'SpatialData' setCoordsDf(object, coords_df, force = FALSE)"},{"path":"/reference/setCoordsDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the coordinates — setCoordsDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. coords_df data.frame containing information every observation. Must contain variables: barcodes Character. barcode-sequences (+ sample belonging) every observation. sample Character. sample belonging every observation. x_orig Numeric. unscaled x-coordinates every observation. y_orig Numeric. unscaled y-coordinates every observation.","code":""},{"path":"/reference/setCoordsDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the coordinates — setCoordsDf","text":"spata object containing set input.","code":""},{"path":"/reference/setCoordsDf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the coordinates — setCoordsDf","text":"set*()-functions offer save way set certain slots spata-object. check input validity effectively overwrite everything occupying slot set - use caution.","code":""},{"path":"/reference/setCountMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Set data matrices — setCountMatrix","title":"Set data matrices — setCountMatrix","text":"Functions set data matrices different assays.","code":""},{"path":"/reference/setCountMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set data matrices — setCountMatrix","text":"","code":"setCountMatrix(object, count_mtr, assay_name = activeAssay(object), ...)  setProcessedMatrix(   object,   proc_mtr,   name,   assay_name = activeAssay(object),   ... )"},{"path":"/reference/setCountMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set data matrices — setCountMatrix","text":"object object class SPATA2 , case S4 generics, objects classes method defined. count_mtr count matrix rownames corresponding feature names column names corresponding barcodes. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay(). ... Used absorb deprecated arguments functions. proc_mtr processed matrix rownames corresponding feature names column names corresponding barcodes. name Character value. name refer processed matrix later .","code":""},{"path":"/reference/setCountMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set data matrices — setCountMatrix","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setCountMatrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set data matrices — setCountMatrix","text":"SPATA2 general distinguishes two types data matrices. count matrices containing raw counts, processed matrices contain processed expression data obtained via single subsequent processing steps log normalization, scaling, denoising etc. Count matrices always stored slot @mtr_counts MolecularAssay object need name. Processed matrices stored list stored slot @mtr_proc MolecularAssay object therefore need naming. name correspond method processed. E.g. log_norm created log normalizing counts. scaled created subsequent scaling log_norm matrix.","code":""},{"path":"/reference/setDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Set object specific default — setDefault","title":"Set object specific default — setDefault","text":"Sets object specific default recurring arguments pt_alpha, pt_clrp, verbose.","code":""},{"path":"/reference/setDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set object specific default — setDefault","text":"","code":"setDefault(object, ...)"},{"path":"/reference/setDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set object specific default — setDefault","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Named arguments whose default input want override.","code":""},{"path":"/reference/setDefault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set object specific default — setDefault","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setDefault.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set object specific default — setDefault","text":"","code":"library(SPATA2)  object1 <- loadExampleObject(\"UKFT269T\", meta = TRUE) object2 <- loadExmapleObject(\"UKF275T\", meta = TRUE)  # current getDefault(object1, arg = \"pt_clrp\") getDefault(object2, arg = \"pt_clrp\")  # if not specified, the function uses the object specific default plotSurface(object1, color_by = \"bayes_space\") plotSurface(object2, color_by = \"bayes_space\")  # overwrite object1 <- setDefault(object1, pt_clrp = \"uc\") objct2 <- setDefault(object2, pt_clrp = \"jco\")  # if not specified, the function uses the object specific default # default has changed plotSurface(object1, color_by = \"bayes_space\") plotSurface(object2, color_by = \"bayes_space\")  # manually speciyfing the argument overwrites the default plotSurface(object1, color_by = \"bayes_space\", pt_clrp = \"jama\") plotSurface(object2, color_by = \"bayes_space\", pt_clrp = \"tab20\")"},{"path":"/reference/setDefaultInstructions.html","id":null,"dir":"Reference","previous_headings":"","what":"Set default instructions — setDefaultInstructions","title":"Set default instructions — setDefaultInstructions","text":"Set default instructions","code":""},{"path":"/reference/setDefaultInstructions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set default instructions — setDefaultInstructions","text":"","code":"setDefaultInstructions(object, instructions = NULL)  setDirectoryInstructions(object)"},{"path":"/reference/setDefaultInstructions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set default instructions — setDefaultInstructions","text":"object valid spata-object.","code":""},{"path":"/reference/setDefaultInstructions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set default instructions — setDefaultInstructions","text":"spata-object containing default spata-instructions. Everything previously adjusted adjustDefaultInstructions() overwritten.","code":""},{"path":"/reference/setDenoisedMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — setDenoisedMatrix","title":"Deprecated — setDenoisedMatrix","text":"Deprecated favor setProcessedMatrix().","code":""},{"path":"/reference/setDenoisedMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — setDenoisedMatrix","text":"","code":"setDenoisedMatrix(object, denoised_mtr, ...)"},{"path":"/reference/setHistoImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Set HistoImage object — setHistoImage","title":"Set HistoImage object — setHistoImage","text":"Sets object class HistoImage.","code":""},{"path":"/reference/setHistoImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set HistoImage object — setHistoImage","text":"","code":"setHistoImage(object, ...)  # S4 method for class 'SPATA2' setHistoImage(object, hist_img, ...)  # S4 method for class 'SpatialData' setHistoImage(object, hist_img, ...)"},{"path":"/reference/setHistoImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set HistoImage object — setHistoImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. hist_img object class HistoImage.","code":""},{"path":"/reference/setHistoImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set HistoImage object — setHistoImage","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/setImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — setImage","title":"Deprecated — setImage","text":"Deprecated favor registerImage().","code":""},{"path":"/reference/setImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — setImage","text":"","code":"setImage(object, image, of_sample = \"\")"},{"path":"/reference/setImageAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — setImageAnnotation","title":"Deprecated — setImageAnnotation","text":"Deprecated favor setSpatialAnnotation().","code":""},{"path":"/reference/setImageAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — setImageAnnotation","text":"","code":"setImageAnnotation(object, img_ann, ...)  setImageAnnotations(object, img_anns, ...)"},{"path":"/reference/setImageDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set image directory — setImageDir","title":"Set image directory — setImageDir","text":"Sets file directory image read activated.","code":""},{"path":"/reference/setImageDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set image directory — setImageDir","text":"","code":"setImageDir(object, ...)  # S4 method for class 'SPATA2' setImageDir(object, img_name, dir)  # S4 method for class 'SpatialData' setImageDir(object, img_name, dir)  # S4 method for class 'HistoImage' setImageDir(object, dir)"},{"path":"/reference/setImageDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set image directory — setImageDir","text":"dir Character value. directory new image.","code":""},{"path":"/reference/setImageDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set image directory — setImageDir","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setImageDir.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set image directory — setImageDir","text":"function also accepts directories exist! throws warnign case.","code":""},{"path":[]},{"path":"/reference/setImageTransformations.html","id":null,"dir":"Reference","previous_headings":"","what":"Set image transformation instructions — setImageTransformations","title":"Set image transformation instructions — setImageTransformations","text":"Sets image transformation instruction list.","code":""},{"path":"/reference/setImageTransformations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set image transformation instructions — setImageTransformations","text":"","code":"setImageTransformations(object, ...)  # S4 method for class 'SpatialData' setImageTransformations(object, img_name, transformations, ...)"},{"path":"/reference/setImageTransformations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set image transformation instructions — setImageTransformations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image interest. NULL, active image chosen default. Either way, must one getImageNames().","code":""},{"path":"/reference/setImageTransformations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set image transformation instructions — setImageTransformations","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setLogfileDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Set logfile data.frame — setLogfileDf","title":"Set logfile data.frame — setLogfileDf","text":"Set logfile data.frame","code":""},{"path":"/reference/setLogfileDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set logfile data.frame — setLogfileDf","text":"","code":"setLogfileDf(object, lf_df)"},{"path":"/reference/setLogfileDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set logfile data.frame — setLogfileDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. lf_df logfile data.frame.","code":""},{"path":"/reference/setLogfileDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set logfile data.frame — setLogfileDf","text":"spata object containing set input.","code":""},{"path":"/reference/setLogfileDf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set logfile data.frame — setLogfileDf","text":"set*()-functions offer save way set certain slots spata-object. check input validity effectively overwrite everything occupying slot set - use caution.","code":""},{"path":"/reference/setMetaDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Set meta data.frame — setMetaDf","title":"Set meta data.frame — setMetaDf","text":"Sets meta data.frame.","code":""},{"path":"/reference/setMetaDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set meta data.frame — setMetaDf","text":"","code":"setMetaDf(object, meta_df)"},{"path":"/reference/setMetaDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set meta data.frame — setMetaDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined.","code":""},{"path":"/reference/setMetaDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set meta data.frame — setMetaDf","text":"set_dummy return details","code":""},{"path":"/reference/setMetaVarDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Set molecular meta data.frame — setMetaVarDf","title":"Set molecular meta data.frame — setMetaVarDf","text":"Sets metadata variable data frame specified assay given object.","code":""},{"path":"/reference/setMetaVarDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set molecular meta data.frame — setMetaVarDf","text":"","code":"setMetaVarDf(object, meta_var_df, assay_name = activeAssay(object))"},{"path":"/reference/setMetaVarDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set molecular meta data.frame — setMetaVarDf","text":"meta_var_df data.frame slot @meta_var molecular assay. inherit update_dummy return","code":""},{"path":"/reference/setPcaDf.html","id":null,"dir":"Reference","previous_headings":"","what":"Set dimensional reductions data.frames — setPcaDf","title":"Set dimensional reductions data.frames — setPcaDf","text":"Safely adds data.frames containing barcode-spot embedding different dimensional reduction techniques. Cell embedding variables must named follows: pca_df: PC1, PC2, PC3, ... tsne_df: tsne1, tsne2, ... umap_df: umap1, umap2, ...","code":""},{"path":"/reference/setPcaDf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set dimensional reductions data.frames — setPcaDf","text":"","code":"setPcaDf(object, pca_df, fdb_fn = \"stop\")  setTsneDf(object, tsne_df, ...)  setUmapDf(object, umap_df, ...)"},{"path":"/reference/setPcaDf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set dimensional reductions data.frames — setPcaDf","text":"object object class SPATA2 , case S4 generics, objects classes method defined. pca_df, tsne_df, umap_df data.frame composed variables barcodes, sample variables containing barcode- spot embedding. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/setPcaDf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set dimensional reductions data.frames — setPcaDf","text":"spata object containing set input.","code":""},{"path":"/reference/setPcaDf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set dimensional reductions data.frames — setPcaDf","text":"set*()-functions offer save way set certain slots spata-object. check input validity effectively overwrite everything occupying slot set - use caution.","code":""},{"path":"/reference/setPrResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Set results of pattern recognition methods — setPrResults","title":"Set results of pattern recognition methods — setPrResults","text":"Set results pattern recognition methods","code":""},{"path":"/reference/setPrResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set results of pattern recognition methods — setPrResults","text":"","code":"setPrResults(object, of_sample = \"\", method_pr = \"hpa\", pr_results)"},{"path":"/reference/setPrResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set results of pattern recognition methods — setPrResults","text":"object valid spata-object. of_sample argument currently inactive. might reactivated spata-objects can store one sample. method_pr Character value. Denotes pattern recognition method. pr_list list information results chosen method method_pr returns","code":""},{"path":"/reference/setPrResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set results of pattern recognition methods — setPrResults","text":"spata object containing set input.","code":""},{"path":"/reference/setPrResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set results of pattern recognition methods — setPrResults","text":"set*()-functions offer save way set certain slots spata-object. check input validity effectively overwrite everything occupying slot set - use caution.","code":""},{"path":"/reference/setScaleFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Set scale factors — setScaleFactor","title":"Set scale factors — setScaleFactor","text":"Sets scale factor values.","code":""},{"path":"/reference/setScaleFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set scale factors — setScaleFactor","text":"","code":"setScaleFactor(object, ...)  # S4 method for class 'SPATA2' setScaleFactor(object, fct_name, value)  # S4 method for class 'SpatialData' setScaleFactor(object, fct_name, value)  # S4 method for class 'HistoImage' setScaleFactor(object, fct_name, value)"},{"path":"/reference/setScaleFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set scale factors — setScaleFactor","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. fct_name Character value. Name scale factor. value Value set.","code":""},{"path":"/reference/setScaleFactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set scale factors — setScaleFactor","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setScaleFactor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set scale factors — setScaleFactor","text":"S4 methods HistoImage: Sets scale factors reference image. Corresponding scale factors additionally registered images () computed. images registered, scale factor set corresponding list slot @scale_factors SpatialData object.","code":""},{"path":"/reference/setSpCorResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Set results of spatial correlation analysis — setSpCorResults","title":"Set results of spatial correlation analysis — setSpCorResults","text":"Set results spatial correlation analysis","code":""},{"path":"/reference/setSpCorResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set results of spatial correlation analysis — setSpCorResults","text":"","code":"setSpCorResults(object, sp_cor_list, of_sample = \"\")"},{"path":"/reference/setSpCorResults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set results of spatial correlation analysis — setSpCorResults","text":"object valid spata-object. sp_cor_list list information results function runSpatialCorrelationAnalysis() returns. of_sample argument currently inactive. might reactivated spata-objects can store one sample.","code":""},{"path":"/reference/setSpCorResults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set results of spatial correlation analysis — setSpCorResults","text":"spata object containing set input.","code":""},{"path":"/reference/setSpCorResults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set results of spatial correlation analysis — setSpCorResults","text":"set*()-functions offer save way set certain slots spata-object. check input validity effectively overwrite everything occupying slot set - use caution.","code":""},{"path":"/reference/setSpataDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set SPATA2 directory — setSpataDir","title":"Set SPATA2 directory — setSpataDir","text":"Sets directory SPATA2 object always stored using function saveSpataObject().","code":""},{"path":"/reference/setSpataDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set SPATA2 directory — setSpataDir","text":"","code":"setSpataDir(object, dir, add_wd = FALSE, ...)"},{"path":"/reference/setSpataDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set SPATA2 directory — setSpataDir","text":"object object class SPATA2 , case S4 generics, objects classes method defined. dir Character value. directory store SPATA2 object. add_wd Logical value. TRUE, working directory added directory separated '/'. ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/setSpataDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set SPATA2 directory — setSpataDir","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Set SpatialAnnotation objects — setSpatialAnnotation","title":"Set SpatialAnnotation objects — setSpatialAnnotation","text":"Sets spatial annotations correct slot. Expects valid spatial annotation conduct checks adjustments.","code":""},{"path":"/reference/setSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set SpatialAnnotation objects — setSpatialAnnotation","text":"","code":"setSpatialAnnotation(object, ...)  # S4 method for class 'SPATA2' setSpatialAnnotation(object, spat_ann, ...)  setSpatialAnnotations(object, ...)  # S4 method for class 'SPATA2' setSpatialAnnotations(object, spat_anns, ...)"},{"path":"/reference/setSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set SpatialAnnotation objects — setSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. spat_ann object class SpatialAnnotation. spat_anns list objects class SpatialAnnotation.","code":""},{"path":"/reference/setSpatialAnnotation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set SpatialAnnotation objects — setSpatialAnnotation","text":"GroupAnnotation, NumericAnnotation, ImageAnnotation derivatives SpatialAnnotation class valid inputs, !","code":""},{"path":"/reference/setSpatialData.html","id":null,"dir":"Reference","previous_headings":"","what":"Set SpatialData object — setSpatialData","title":"Set SpatialData object — setSpatialData","text":"Sets image container class SpatialData corresponding slot SPATA2 object.","code":""},{"path":"/reference/setSpatialData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set SpatialData object — setSpatialData","text":"","code":"setSpatialData(object, sp_data)"},{"path":"/reference/setSpatialData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set SpatialData object — setSpatialData","text":"object object class SPATA2 , case S4 generics, objects classes method defined. sp_data object class SpatialData.","code":""},{"path":"/reference/setSpatialMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Set SpatialMethod object — setSpatialMethod","title":"Set SpatialMethod object — setSpatialMethod","text":"Sets SpatialMethod object containing information platform used.","code":""},{"path":"/reference/setSpatialMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set SpatialMethod object — setSpatialMethod","text":"","code":"setSpatialMethod(object, ...)  # S4 method for class 'SPATA2' setSpatialMethod(object, method, ...)"},{"path":"/reference/setSpatialMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set SpatialMethod object — setSpatialMethod","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. method object class SpatialMethod.","code":""},{"path":"/reference/setSpatialMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set SpatialMethod object — setSpatialMethod","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setSpatialMethodInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Set information of SpatialMethod object — setSpatialMethodInfo","title":"Set information of SpatialMethod object — setSpatialMethodInfo","text":"Sets information slot @info SpatialMethod-object.","code":""},{"path":"/reference/setSpatialMethodInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set information of SpatialMethod object — setSpatialMethodInfo","text":"","code":"setSpatialMethodInfo(object, slot, content)"},{"path":"/reference/setSpatialMethodInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set information of SpatialMethod object — setSpatialMethodInfo","text":"object object class SPATA2 , case S4 generics, objects classes method defined. slot Character value. list-slot slot @info SpatialMethod object @info[[slot]]. content content set.","code":""},{"path":"/reference/setSpatialMethodInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set information of SpatialMethod object — setSpatialMethodInfo","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setSpatialMethodSlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set slot content of SpatialMethod object — setSpatialMethodSlot","title":"Set slot content of SpatialMethod object — setSpatialMethodSlot","text":"Sets content slot SpatialMethod object. Use caution.","code":""},{"path":"/reference/setSpatialMethodSlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set slot content of SpatialMethod object — setSpatialMethodSlot","text":"","code":"setSpatialMethodSlot(object, slot, content)"},{"path":"/reference/setSpatialMethodSlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set slot content of SpatialMethod object — setSpatialMethodSlot","text":"object object class SPATA2 , case S4 generics, objects classes method defined. slot Name slot. content Content set.","code":""},{"path":"/reference/setSpatialMethodSlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set slot content of SpatialMethod object — setSpatialMethodSlot","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setSpatialTrajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Set SpatialTrajectory objects — setSpatialTrajectory","title":"Set SpatialTrajectory objects — setSpatialTrajectory","text":"Sets trajectories correct slot.","code":""},{"path":"/reference/setSpatialTrajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set SpatialTrajectory objects — setSpatialTrajectory","text":"","code":"setSpatialTrajectory(object, trajectory, overwrite = FALSE)  setSpatialTrajectories(object, trajectories, overwrite = FALSE)"},{"path":"/reference/setSpatialTrajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set SpatialTrajectory objects — setSpatialTrajectory","text":"object object class SPATA2 , case S4 generics, objects classes method defined. trajectory object class SpatialTrajectory. overwrite Logical value. Must TRUE allow overwriting. trajectories List objects class SpatialTrajectory.","code":""},{"path":"/reference/setSpatialTrajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set SpatialTrajectory objects — setSpatialTrajectory","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/setTrajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — setTrajectory","title":"Deprecated — setTrajectory","text":"Deprecated favor setSpatialTrajectory() setSpatialTrajectories().","code":""},{"path":"/reference/setTrajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — setTrajectory","text":"","code":"setTrajectory(...)  setTrajectories(...)"},{"path":"/reference/setUpMetaVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up meta var slot — setUpMetaVar","title":"Set up meta var slot — setUpMetaVar","text":"Sets slot @meta_var molecular assay already done.","code":""},{"path":"/reference/setUpMetaVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up meta var slot — setUpMetaVar","text":"","code":"setUpMetaVar(object, ...)  # S4 method for class 'SPATA2' setUpMetaVar(object, assay_name = activeAssay(object), ...)  # S4 method for class 'MolecularAssay' setUpMetaVar(object, assay_name = activeAssay(object), ...)"},{"path":"/reference/setUpMetaVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up meta var slot — setUpMetaVar","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. assay_name relevant SPATA2 object contains one assay: Denotes assay interest thus molecular modality use. Defaults active assay set activateAssay().","code":""},{"path":"/reference/setUpMetaVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up meta var slot — setUpMetaVar","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/set_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"set — set_dummy","title":"set — set_dummy","text":"set","code":""},{"path":"/reference/set_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set — set_dummy","text":"","code":"set_dummy()"},{"path":"/reference/set_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set — set_dummy","text":"spata object containing set input.","code":""},{"path":"/reference/set_dummy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"set — set_dummy","text":"set*()-functions offer save way set certain slots spata-object. check input validity effectively overwrite everything occupying slot set - use caution.","code":""},{"path":"/reference/seurat_object_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — seurat_object_dummy","title":"Title — seurat_object_dummy","text":"Title","code":""},{"path":"/reference/seurat_object_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — seurat_object_dummy","text":"","code":"seurat_object_dummy(seurat_object)"},{"path":"/reference/seurat_object_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — seurat_object_dummy","text":"seurat_object valid seurat-object. (Seurat platform)","code":""},{"path":"/reference/shiftSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift the borders of a spatial annotation — shiftSpatialAnnotation","title":"Shift the borders of a spatial annotation — shiftSpatialAnnotation","text":"function moves spatial annotation either x y direction, . allows selective shifting outer /inner borders annotation.","code":""},{"path":"/reference/shiftSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift the borders of a spatial annotation — shiftSpatialAnnotation","text":"","code":"shiftSpatialAnnotation(   object,   id,   outer = TRUE,   inner = TRUE,   shift_x = 0,   shift_y = 0,   new_id = FALSE,   overwrite = FALSE )"},{"path":"/reference/shiftSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift the borders of a spatial annotation — shiftSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation. outer Logical; TRUE, outer border annotation affected. inner Logical numeric; TRUE, inner borders affected. numeric value provided, specified inner borders affected. shift_x, shift_y Distance measure. shift x- /y-direction. Negative values also accepted. new_id Character value FALSE. character, resulting spatial annotation stored new ID. overwrite Logical value. Must TRUE allow overwriting.","code":""},{"path":"/reference/shiftSpatialAnnotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shift the borders of a spatial annotation — shiftSpatialAnnotation","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/shiftSpatialAnnotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shift the borders of a spatial annotation — shiftSpatialAnnotation","text":"","code":"library(SPATA2) library(patchwork) library(stringr)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  p1 <- plotImage(object) + ggpLayerSpatAnnOutline(object, ids = \"necrotic_area\")  plot(p1)  object <- shiftSpatialAnnotation(object, id = \"necrotic_area\", shift_x = \"0.5mm\", shift_y = \"0.25mm\", new_id = \"na_shifted\")  p2 <- plotImage(object) + ggpLayerSpatAnnOutline(object, ids = \"na_shifted\")  # compare both p1 + p2"},{"path":"/reference/shinyModuleZoomingServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny module Zooming — shinyModuleZoomingServer","title":"Shiny module Zooming — shinyModuleZoomingServer","text":"server logical shiny module Zooming.","code":""},{"path":"/reference/shinyModuleZoomingServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny module Zooming — shinyModuleZoomingServer","text":"","code":"shinyModuleZoomingServer(   id = \"m1\",   default = list(),   brushed_area = NULL,   dims = NULL,   persp = \"ccs\",   trigger_zoom_out = NULL,   ... )  shinyModuleZoomingUI(id = \"m1\")"},{"path":"/reference/shinyModuleZoomingServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny module Zooming — shinyModuleZoomingServer","text":"id Character value. ID module. brushed_area Reactive expression , called <reactiveExpression>() returns list four slots named xmin, xmax, ymin ymax numeric value. dims Image dimensions original, complete image zooming. ... Used absorb deprecated arguments functions. object object method getImageRange() defined.","code":""},{"path":"/reference/shinyModuleZoomingServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny module Zooming — shinyModuleZoomingServer","text":"reactive expression , called <reactiveExpression>() returns list three slots: x: Numeric vector length two corresponding xrange zoom. y: Numeric vector length two corresponging yrange zoom. dims: Numeric vector length two. dimensions image zoomed .","code":""},{"path":"/reference/showColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Show color palettes and spectra — showColors","title":"Show color palettes and spectra — showColors","text":"Simple visualization available color palettes spectra left right.","code":""},{"path":"/reference/showColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show color palettes and spectra — showColors","text":"","code":"showColors(input, n = 20, title_size = 10)  showColorPalettes(input = validColorPalettes(flatten = TRUE), n = 15)  showColorSpectra(input = validColorSpectra(flatten = TRUE), n = 20)"},{"path":"/reference/showColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show color palettes and spectra — showColors","text":"input Character vector input options clrsp clrp. n Numnber colors. title_size Size plot titles.","code":""},{"path":"/reference/showColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show color palettes and spectra — showColors","text":"plot ggplots arranged gridExtra::arrange.grid().","code":""},{"path":"/reference/showColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show color palettes and spectra — showColors","text":"","code":"showColors(input = c(\"inferno\", \"Reds\", \"npg\", \"uc\"), n = 10)   showColors(input = validColorPalettes()[[1]])"},{"path":"/reference/showModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Show spatial gradient screening models — showModels","title":"Show spatial gradient screening models — showModels","text":"Display models used spatial gradient screening.","code":""},{"path":"/reference/showModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show spatial gradient screening models — showModels","text":"","code":"showModels(   input = 100,   linecolor = \"black\",   linesize = 0.5,   model_subset = NULL,   model_remove = NULL,   model_add = NULL,   noise_level = 0,   noise = NULL,   seed = 123,   pretty_names = FALSE,   x_axis_arrow = TRUE,   verbose = NULL,   ... )"},{"path":"/reference/showModels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show spatial gradient screening models — showModels","text":"linesize Numeric value. size line(s) plotted. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/showModels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show spatial gradient screening models — showModels","text":"ggplot.","code":""},{"path":"/reference/signatures.html","id":null,"dir":"Reference","previous_headings":"","what":"The default collection of frequently used signatures — signatures","title":"The default collection of frequently used signatures — signatures","text":"Number different gene-sets: 11654","code":""},{"path":"/reference/signatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The default collection of frequently used signatures — signatures","text":"","code":"data(signatures)"},{"path":"/reference/signatures.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The default collection of frequently used signatures — signatures","text":"object class list length 3.","code":""},{"path":"/reference/signatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The default collection of frequently used signatures — signatures","text":"Gene set classes: BP.GO: Biological processes - gene ontology CC.GO: Cellular componenents - gene-ontology MF.GO: Molecular functions - gene-ontology HM: Hallmark gene sets BC: Biocarta gene sets RCTM: Reactome gene sets","code":""},{"path":"/reference/simulate_expression_pattern_sas.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression pattern simulation — simulate_expression_pattern_sas","title":"Expression pattern simulation — simulate_expression_pattern_sas","text":"Simulates expression pattern modelling expression dependent distance spatial annotation.","code":""},{"path":"/reference/simulate_expression_pattern_sas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expression pattern simulation — simulate_expression_pattern_sas","text":"","code":"simulate_expression_pattern_sas(   object,   ids,   simulations,   core,   distance = \"dte\",   resolution = recSgsRes(object),   angle_span = c(0, 360),   noise_levels = seq(0, 100, length.out = 21),   noise_types = c(\"ed\", \"ep\", \"fp\", \"cb\"),   range_sim = c(0, 1),   range_random = base::range(range_sim),   model_add = NULL,   model_remove = NULL,   seed = 123,   npref = \"SE\",   nsep = \".\",   verbose = TRUE )  simulate_expression_pattern_sts(   object,   id,   simulations,   width,   resolution = recSgsRes(object),   noise_levels = seq(0, 100, length.out = 21),   noise_types = c(\"ed\", \"ep\", \"fp\", \"cb\"),   range_sim = c(0, 1),   range_random = base::range(range_sim),   model_add = NULL,   seed = 123,   npref = \"SE\",   nsep = \".\",   verbose = TRUE )  simulate_random_expression(   object,   n_total,   range_sim = c(0, 1),   seed = 123,   naming = \"SE.RANDOM.{i}\",   verbose = TRUE )"},{"path":"/reference/simulate_expression_pattern_sas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expression pattern simulation — simulate_expression_pattern_sas","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector. Specifies IDs spatial annotations interest. simulations list simulation lists. simulations list list contains least three slots provide instructions set simulations: id Character value. overall ID simulation. n Integer. number simulations. model Character value. name model based want simulate expression. simulation list can additional slot called noise_levels , present, overwrites input noise_levels specific simulation. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). angle_span Numeric vector length 2. Confines area screened angle span relative center closest spatial annotation. noise_levels vector integers 0-100 (inclusive). Indicate respective levels noise added simulation percent. 0 indicates noise. 100 indicates noise. range_sim range output simulation values. range_random range values randomly assigned areas outside area interest. model_add Named list. Every slot list must either formula containing function takes numeric vector input returns numeric vector length input vector. numeric vector length input vector. Test models showModels(). model_remove Character value. Used regex remove models supposed included. seed Numeric value, given set.seed(). npref Prefix simulations. Defaults SG (simulated gene.) nsep Character value separate aspects build name simulation. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/simulate_expression_pattern_sas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expression pattern simulation — simulate_expression_pattern_sas","text":"Matrix rownames corresponding simulation names colnames corresponding barcodes object.","code":""},{"path":"/reference/simulate_expression_pattern_sas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expression pattern simulation — simulate_expression_pattern_sas","text":"Simulation names created according function call stringr::str_c(npref, nsep, \"NP\", nl, nsep, sim_id, nsep, n, sep = \"\"). nl noise level simulation, sim_id corresponds slot id simulation list n index simulation case slot n simulation instruction bigger one.","code":""},{"path":"/reference/simulate_random_gradients.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Random Gradients — simulate_random_gradients","title":"Simulate Random Gradients — simulate_random_gradients","text":"function simulates random expression patterns, computes gradients, calculates various metrics evaluating inferred expression gradients.","code":""},{"path":"/reference/simulate_random_gradients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Random Gradients — simulate_random_gradients","text":"","code":"simulate_random_gradients(   coords_df,   span,   expr_est_pos,   amccd,   n = 1000,   seed = 123,   coef = Inf,   range = c(0, 1),   control = SPATA2::sgs_loess_control,   fn = \"runif\",   verbose = TRUE,   ... )"},{"path":"/reference/simulate_random_gradients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Random Gradients — simulate_random_gradients","text":"coords_df data frame containing coordinates distance information. span alpha parameter loess smoothing, controlling degree smoothness. n number simulations perform (default 1000). seed random seed ensure reproducibility (default 123). range numeric vector specifying range generating random expression values (default c(0, 1)). verbose logical value indicating whether display progress messages (default TRUE). ... Additional parameters given obtain_inferred_gradient(). pred_pos numeric vector positions gradients inferred.","code":""},{"path":"/reference/simulate_random_gradients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Random Gradients — simulate_random_gradients","text":"list length n containing information simulated gradients, Loess Deviation Scores (LDS), loess models, total variation simulation. list named seed indices trace circumstances simulation conducted. output list contains following components: gradient numeric vector representing inferred expression gradient. model loess model object fitted simulated data. tot_var numeric value representing total variation inferred gradient.","code":""},{"path":"/reference/simulate_spatial_niches.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Spatial Niche in Coordinate Data Frame — simulate_spatial_niches","title":"Create a Spatial Niche in Coordinate Data Frame — simulate_spatial_niches","text":"function creates spatial niche around specified origin points coordinate data frame. niche defined specified size used modify values data frame based proximity origin points.","code":""},{"path":"/reference/simulate_spatial_niches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Spatial Niche in Coordinate Data Frame — simulate_spatial_niches","text":"","code":"simulate_spatial_niches(   coords_df,   origins,   size,   size_fct = 1.1,   vt,   vf = NULL,   rr = c(0, 1),   type = \"small\",   seed = 123 )"},{"path":"/reference/simulate_spatial_niches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Spatial Niche in Coordinate Data Frame — simulate_spatial_niches","text":"coords_df data frame containing spatial coordinates variables. origins character vector specifying barcodes origin points around niche created. size numeric value specifying size niche around origin point. vt name variable coords_df values assigned. vf name variable coords_df values taken. NULL (default), random values generated assigned. rr numeric vector length 2 specifying range generating random values. Default c(0, 1). seed numeric value specifying seed random number generation. Default 123.","code":""},{"path":"/reference/simulate_spatial_niches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Spatial Niche in Coordinate Data Frame — simulate_spatial_niches","text":"data frame modified values based created spatial niche.","code":""},{"path":"/reference/simulate_spatial_niches.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Spatial Niche in Coordinate Data Frame — simulate_spatial_niches","text":"function works calculating distances origin point points coords_df. Points fall within specified niche size around origin identified, values vt variable modified based vf variable. vf NULL, random values within specified range (rr) generated used.","code":""},{"path":"/reference/simulate_spatial_niches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Spatial Niche in Coordinate Data Frame — simulate_spatial_niches","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(x = runif(100, 0, 10), y = runif(100, 0, 10), value = rnorm(100)) df_with_niche <- simulate_spatial_niches(df, origins = c(\"A\", \"B\"), size = 5, vt = \"value\") } # }"},{"path":"/reference/smoothSpatialAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth the border of a spatial annotation — smoothSpatialAnnotation","title":"Smooth the border of a spatial annotation — smoothSpatialAnnotation","text":"function applies smoothing algorithm borders SpatialAnnotation object. can smooth outer inner borders using various methods.","code":""},{"path":"/reference/smoothSpatialAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth the border of a spatial annotation — smoothSpatialAnnotation","text":"","code":"smoothSpatialAnnotation(   object,   id,   method,   outer = TRUE,   inner = TRUE,   new_id = FALSE,   overwrite = FALSE,   ... )"},{"path":"/reference/smoothSpatialAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth the border of a spatial annotation — smoothSpatialAnnotation","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value specifying ID spatial annotation interest. one spatial annotation object, function default using . However, multiple annotations, argument must explicitly specified identify target annotation. method smoothing method applied. Options include \"chaikin\", \"densify\", \"ksmooth\", \"spline\". outer Logical; TRUE, outer border annotation smoothed. inner Logical numeric; TRUE, inner borders smoothed. numeric value provided, specified inner border smoothed. new_id Character value FALSE. character, resulting spatial annotation stored new ID. overwrite Logical value. Must TRUE allow overwriting. ... Additional arguments passed smoothing function smoothr::ksmooth(), smoothr::chaikin(), etc.","code":""},{"path":"/reference/smoothSpatialAnnotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth the border of a spatial annotation — smoothSpatialAnnotation","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/smoothSpatialAnnotation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Smooth the border of a spatial annotation — smoothSpatialAnnotation","text":"Requires package 'terra' 'smoothr'.","code":""},{"path":[]},{"path":"/reference/smoothSpatialAnnotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth the border of a spatial annotation — smoothSpatialAnnotation","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  ids <- getSpatAnnIds(object, tags = c(\"necrotic\", \"compr\"), test = \"identical\")  plotSpatialAnnotations(object, ids = \"necrotic_edge\")  object <-  smoothSpatialAnnotation(object, id = \"necrotic_edge\", method = \"ksmooth\", new_id = \"necrotic_edge_sm\", smoothness = 50)  plotSpatialAnnotations(object, ids = c(\"necrotic_edge\", \"necrotic_edge_sm\"))"},{"path":"/reference/smoothSpatially.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth numeric variables spatially — smoothSpatially","title":"Smooth numeric variables spatially — smoothSpatially","text":"Uses loess-fit model smooth numeric variables spatially. variable names denoted argument variables overwritten.","code":""},{"path":"/reference/smoothSpatially.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth numeric variables spatially — smoothSpatially","text":"","code":"smoothSpatially(   coords_df,   variables,   smooth_span = 0.025,   normalize = TRUE,   verbose = TRUE )"},{"path":"/reference/smoothSpatially.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth numeric variables spatially — smoothSpatially","text":"coords_df data.frame containing information every observation. Must contain variables: barcodes Character. barcode-sequences (+ sample belonging) every observation. sample Character. sample belonging every observation. x_orig Numeric. unscaled x-coordinates every observation. y_orig Numeric. unscaled y-coordinates every observation. variables Character vector. Specifies numeric variables input data.frame smoothed. smooth_span Numeric value. Controls degree smoothing. Given argument span stats::loess(). normalize Logical. set TRUE values scaled 0-1. Hint: Variables uniformly expressed can scaled discarded. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/smoothSpatially.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth numeric variables spatially — smoothSpatially","text":"input data.frame containing smoothed variables.","code":""},{"path":"/reference/spata2-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The spata2- Class — spata2-class","title":"The spata2- Class — spata2-class","text":"Deprecated favor SPATA2.","code":""},{"path":"/reference/spatialAnnotationScreening.html","id":null,"dir":"Reference","previous_headings":"","what":"The Spatial Annotation Screening algorithm — spatialAnnotationScreening","title":"The Spatial Annotation Screening algorithm — spatialAnnotationScreening","text":"Screens sample numeric variables stand meaningful, spatial relation annotated structures/areas, spatial annotations. detailed explanation define parameters distance, resolution, angle_span n_bins_angle see details section.","code":""},{"path":"/reference/spatialAnnotationScreening.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Spatial Annotation Screening algorithm — spatialAnnotationScreening","text":"","code":"spatialAnnotationScreening(   object,   ids,   variables,   core,   distance = \"dte\",   resolution = recSgsRes(object),   angle_span = c(0, 360),   unit = getDefaultUnit(object),   bcs_exclude = character(0),   sign_var = \"fdr\",   sign_threshold = 0.05,   force_comp = FALSE,   skip_comp = FALSE,   model_add = NULL,   model_subset = NULL,   model_remove = NULL,   estimate_R2 = TRUE,   control = NULL,   n_random = 10000,   rm_zero_infl = TRUE,   seed = 123,   add_image = TRUE,   verbose = NULL,   ... )"},{"path":"/reference/spatialAnnotationScreening.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Spatial Annotation Screening algorithm — spatialAnnotationScreening","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector. Specifies IDs spatial annotations interest. variables Character vector. numeric variables included screening process. Makre sure correct matrix active respective assays. distance Distance measure. Specifies distance border spatial annotation horizon periphery screening conducted. Defaults distance covers whole tissue section spatial annotation located using distToEdge(). (distance must exceeded.) resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). angle_span Numeric vector length 2. Confines area screened angle span relative center closest spatial annotation. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. bcs_exclude Character value containing barcodes observations excluded analysis. sign_var Either p_value fdr. Defaults fdr. sign_threshold significance threshold. Defaults 0.05. model_add Named list. Every slot list must either formula containing function takes numeric vector input returns numeric vector length input vector. numeric vector length input vector. Test models showModels(). model_subset Character value. Used regex subset models. Use validModelNames() obtain model names known SPATA2 showModels() visualize . model_remove Character value. Used regex remove models supposed included. control list arguments taken stats::loess.control(). Default setting stored SPATA2::sgs_loess_control. n_random Number random permutations significance testing step 2. seed Numeric value. Sets random seed. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/spatialAnnotationScreening.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Spatial Annotation Screening algorithm — spatialAnnotationScreening","text":"object class SpatialAnnotationScreening.","code":""},{"path":"/reference/spatialAnnotationScreening.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"The Spatial Annotation Screening algorithm — spatialAnnotationScreening","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":[]},{"path":"/reference/spatialAnnotationScreening.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Spatial Annotation Screening algorithm — spatialAnnotationScreening","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  object <- identifyTissueOutline(object)  ids <- getSpatAnnIds(object, tags = c(\"necrotic\", \"compr\"), test = \"all\")  # opt 1 prefiltering by SPARKX is recommended, but not required object <- runSPARKX(object) genes <- getSparkxGenes(object, threshold_pval = 0.05)  # opt 2 genes <- getGenes(object)  sas_out <-  spatialAnnotationScreening(    object = object,    ids = ids,    variables = genes,    core = FALSE    )"},{"path":"/reference/spatialAnnotationToGrouping.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert spatial annotation to grouping variable — spatialAnnotationToGrouping","title":"Convert spatial annotation to grouping variable — spatialAnnotationToGrouping","text":"Converts one spatial annotations binary segmentation variable feature data.frame.","code":""},{"path":"/reference/spatialAnnotationToGrouping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert spatial annotation to grouping variable — spatialAnnotationToGrouping","text":"","code":"spatialAnnotationToGrouping(   object,   ids,   grouping_name,   inside = \"inside\",   outside = \"outside\",   overwrite = FALSE )"},{"path":"/reference/spatialAnnotationToGrouping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert spatial annotation to grouping variable — spatialAnnotationToGrouping","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ids Character vector. Specifies spatial annotation(s) interest. data points fall area annotations labeled input argument inside. grouping_name Character value. name new segmentation variable. inside Character value. group name data points located inside area spatial annotation(s). outside Character value. group name data points located outside area spatial annotation(s). overwrite Logical. Set TRUE overwrite existing variables name.","code":""},{"path":"/reference/spatialAnnotationToGrouping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert spatial annotation to grouping variable — spatialAnnotationToGrouping","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/spatialAnnotationToGrouping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert spatial annotation to grouping variable — spatialAnnotationToGrouping","text":"","code":"library(SPATA2) library(patchwork)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  ids <- getSpatAnnIds(object, tags = c(\"necrotic\", \"compr\"), test = \"all\")  plotSpatialAnnotations(object, ids = ids)  object <-   spatialAnnotationToGrouping(     object = object,     ids = ids,     grouping_name = \"histology\",     inside = \"necrotic\",     outside = \"vivid\"     )  plotSurface(object, color_by = \"histology\", clrp_adjust = c(\"necrotic\" = \"black\", \"vivid\" = \"forest_green\"))"},{"path":"/reference/spatialTrajectoryScreening.html","id":null,"dir":"Reference","previous_headings":"","what":"The Spatial Trajectory Screening algorithm — spatialTrajectoryScreening","title":"The Spatial Trajectory Screening algorithm — spatialTrajectoryScreening","text":"Screens sample numeric variables follow specific expression changes along course spatial trajectory.","code":""},{"path":"/reference/spatialTrajectoryScreening.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Spatial Trajectory Screening algorithm — spatialTrajectoryScreening","text":"","code":"spatialTrajectoryScreening(   object,   id,   variables,   resolution = recSgsRes(object),   width = getTrajectoryLength(object, id),   unit = getDefaultUnit(object),   bcs_exclude = character(0),   sign_var = \"fdr\",   sign_threshold = 0.05,   force_comp = FALSE,   model_add = NULL,   model_subset = NULL,   model_remove = NULL,   estimate_R2 = TRUE,   rm_zero_infl = TRUE,   n_random = 10000,   seed = 123,   control = NULL,   verbose = NULL,   ... )"},{"path":"/reference/spatialTrajectoryScreening.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Spatial Trajectory Screening algorithm — spatialTrajectoryScreening","text":"object object class SPATA2 , case S4 generics, objects classes method defined. variables Character vector. numeric variables included screening process. resolution Distance measure. resolution expression gradient inferred. Defaults platform specific. See detail section recSgsRes(). width Distance measure. width trajectory frame. Defaults trajectory length. unit Character value. Specifies desired unit distance measures  area measures provided. Run validUnitsOfLength() validUnitsofArea() valid input options. sign_var Either p_value fdr. Defaults fdr. sign_threshold significance threshold. Defaults 0.05. n_random Number random permutations significance testing step 2. seed Numeric value. Sets random seed. control list arguments taken stats::loess.control(). Default setting stored SPATA2::sgs_loess_control. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) ... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/spatialTrajectoryScreening.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Spatial Trajectory Screening algorithm — spatialTrajectoryScreening","text":"object class SpatialTrajectoryScreening. See documentation ?ImageAnnotationScreening information.","code":""},{"path":[]},{"path":"/reference/spatialTrajectoryScreening.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Spatial Trajectory Screening algorithm — spatialTrajectoryScreening","text":"","code":"library(SPATA2)  object <- example_data$object_UKF269T_diet  object <- identifyTissueOutline(object)  object <- runSPARKX(object) genes <- getSparkxGenes(object, threshold_pval = 0.05)  id <- \"horizontal_mid\"  plotImage(object) +   ggpLayerSpatialTrajectories(object, ids = id)  plotSpatialTrajectories(object, ids = id)  sts_out <-   spatialTrajectoryScreening(     object = object,     id = id,     variables = genes     )"},{"path":"/reference/spatial_gradient_screening.html","id":null,"dir":"Reference","previous_headings":"","what":"Low level implementation of the spatial gradient screening algorithm — spatial_gradient_screening","title":"Low level implementation of the spatial gradient screening algorithm — spatial_gradient_screening","text":"Conducts spatial gradient screening.","code":""},{"path":"/reference/spatial_gradient_screening.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low level implementation of the spatial gradient screening algorithm — spatial_gradient_screening","text":"","code":"spatial_gradient_screening(   coords_df,   variables,   resolution,   cf = 1,   rm_zero_infl = TRUE,   n_random = 10000,   sign_var = \"fdr\",   sign_threshold = 0.05,   skip_comp = FALSE,   force_comp = FALSE,   model_subset = NULL,   model_add = NULL,   model_remove = NULL,   control = NULL,   seed = 123,   verbose = TRUE )"},{"path":"/reference/spatial_gradient_screening.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low level implementation of the spatial gradient screening algorithm — spatial_gradient_screening","text":"coords_df data.frame contains least numeric variable named dist well numeric variables denoted variables. variables Character vector numeric variable names integrated screening process. resolution Units value unit dist variable coords_df. n_random Number random permutations significance testing step 2. sign_var Either p_value fdr. Defaults fdr. sign_threshold significance threshold. Defaults 0.05. control list arguments taken stats::loess.control(). Default setting stored SPATA2::sgs_loess_control. seed Numeric value. Sets random seed. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/spatial_gradient_screening.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low level implementation of the spatial gradient screening algorithm — spatial_gradient_screening","text":"list four slots: variables: character vector names variables included screening. model_df: data.frame models used step 3. loess_models: named list loess models variables integrated screening process. Names correspond variable names. pval: Data.frame three variables: variable, lds, p_value fdr. Contains results step 2. observation corresponds inferred gradient variable. eval: Data.frame five variable: variable, model, corr, mae rmse. Contains results step 3. observation corresponds gradient ~ model fit. Variables correspond evaluation metrics fit.","code":""},{"path":"/reference/spatial_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Spatial Methods — spatial_methods","title":"List of Spatial Methods — spatial_methods","text":"list contains predefined spatial methods various spatial biology platforms. entry instance SpatialMethod class specifications tailored specific platform.","code":""},{"path":"/reference/spatial_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Spatial Methods — spatial_methods","text":"","code":"spatial_methods"},{"path":"/reference/spatial_methods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of Spatial Methods — spatial_methods","text":"object class list length 7.","code":""},{"path":"/reference/spatial_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of Spatial Methods — spatial_methods","text":"spatial_methods list includes following spatial methods: MERFISH: spatial method focusing cell-level observations using Multiplexed Error-Robust Fluorescence Situ Hybridization technique. SlideSeqV1: spatial method focusing bead-level observations using Slide-seq V1 platform. Undefined: default spatial method undefined properties. VisiumSmall: spatial method small capture areas using Visium platform. VisiumLarge: spatial method large capture areas using Visium platform. VisiumHD: high-density spatial method using Visium platform. Xenium: spatial method focusing cell-level observations using Xenium platform. spatial method list instance SpatialMethod class contains specific configurations unit observation, SI unit, method-specific details.","code":""},{"path":"/reference/spatial_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Spatial Methods — spatial_methods","text":"","code":"if (FALSE) { # \\dontrun{   # Access the VisiumLarge spatial method   visium_large_method <- spatial_methods[[\"VisiumLarge\"]]   print(visium_large_method) } # }"},{"path":"/reference/spatial_trajectory-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The spatial_trajectory- Class — spatial_trajectory-class","title":"The spatial_trajectory- Class — spatial_trajectory-class","text":"Deprecatd favor SpatialTrajectory.","code":""},{"path":"/reference/splitSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Split SPATA2 object — splitSpataObject","title":"Split SPATA2 object — splitSpataObject","text":"function splits SPATA2 object multiple sub-objects based specified grouping variable.","code":""},{"path":"/reference/splitSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split SPATA2 object — splitSpataObject","text":"","code":"splitSpataObject(   object,   grouping,   naming = \"{sample_name}_{group_name}\",   spatial_proc = TRUE,   reduce = FALSE,   verbose = NULL )"},{"path":"/reference/splitSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split SPATA2 object — splitSpataObject","text":"object object class SPATA2 , case S4 generics, objects classes method defined. grouping Character value. grouping variable interest. Use getGroupingOptions() obtain valid input options. naming Character value. glue expression based respective new sample names created. See details information. spatial_proc Logical value. Indicates whether new sub-object processed spatially. TRUE, new tissue outline identified based remaining observations via identifyTissueOutline(). , spatial annotations tested located either remaining tissue sections. , removed. FALSE, processing steps skipped. Generally speaking, recommended. set FALSE, know . reduce logical value indicating whether reduce SPATA2 sub-objects splitting via reduceSpataObject(). Default FALSE. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/splitSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split SPATA2 object — splitSpataObject","text":"named list SPATA2 sub-objects split specified grouping.","code":""},{"path":"/reference/splitSpataObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split SPATA2 object — splitSpataObject","text":"input naming defaults original sample name suffixed name group sub-object contains data. separated '_'.  Sample name can accessed via 'sample_name' group name can accessed via 'group_name'. Afterwards, grouping 'tissue_section' new tissue outline identified every sub-object using identifyTissueOutline() default input.","code":""},{"path":"/reference/splitSpataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split SPATA2 object — splitSpataObject","text":"","code":"library(SPATA2) library(tidyverse) library(patchwork)  # ----- Example 1: subsetSpataObject() object <- loadExampleObject(\"UKF313T\", meta = TRUE)  barcodes_keep <-  getMetaDf(object) %>%  filter(bayes_space %in% c(\"B3\", \"B2\", \"B1\")) %>%  pull(barcodes)  object_sub <- subsetSpataObject(object, barcodes = barcodes_keep)  show(object) show(object_sub)  plotSpatialAnnotations(object) # plots all annotations plotSpatialAnnotations(object_sub) # subsetting affects everything by default  ids <- getSpatAnnIds(object) ids_sub <- getSpatAnnIds(object_sub)  # use patchwork to compare plots plot_orig <-   plotSurface(object, color_by = \"bayes_space\", outline = T) +   ggpLayerSpatAnnOutline(object, ids = ids)  plot_sub <-   plotSurface(object_sub, color_by = \"bayes_space\", outline = T) +   ggpLayerSpatAnnOutline(object_sub, ids = ids_sub)  plot_orig + plot_sub  # ----- Example 2: splitSpataObject() # uses subsetSpataObject() in the background  object_mouse <- loadExampleObject(\"LMU_MCI\", process = TRUE, meta = TRUE)  orig_frame <- ggpLayerFrameByCoords(object_mouse)  ids <- getSpatAnnIds(object_mouse)  plotSurface(object_mouse, color_by = \"tissue_section\", pt_clr = \"lightgrey\") +   ggpLayerSpatAnnOutline(object, ids = ids) +   ggpLayerSpatAnnPointer(object, ids = ids, ptr_lengths = \"0.45mm\", text_dist = 10, text_size = 7)  obj_list <- splitSpataObject(object_mouse, grouping = \"tissue_section\")  # present resulting sub-objects purrr::map(obj_list, .f = ~ .x)  # present remaining ids purrr::map(obj_list, .f = ~ getSpatAnnIds(.x))  # show surface plot with all remaining spatial annotations purrr::map(obj_list, .f = ~ plotSurface(.x) + ggpLayerSpatAnnOutline(.x) + orig_frame) %>%   patchwork::wrap_plots()  # repeat with spatial_proc = FALSE obj_list <- splitSpataObject(object_mouse, grouping = \"tissue_section\", spatial_proc = FALSE)  # present remaining spatial annotation ids purrr::map(obj_list, .f = ~ getSpatAnnIds(.x))  # show surface plot with all remaining spatial annotations purrr::map(obj_list, .f = ~ plotSurface(.x) + ggpLayerSpatAnnOutline(.x) + orig_frame) %>%   patchwork::wrap_plots()  # -----  Example 3: cropSpataObject() # uses subsetSpataObject() in the background object <- loadExampleObject(\"UKF275T\", meta = TRUE)  orig_frame <- ggpLayerFrameByCoords(object)  xcrop <- c(\"2.5mm\", \"5.5mm\") ycrop <- c(\"5mm\", \"7mm\")  plotSurface(object, color_by = \"bayes_space\") +  ggpLayerAxesSI(object) +  ggpLayerRect(object, xrange = xcrop, yrange = ycrop)  object_cropped <-  cropSpataObject(object, xrange = xcrop, yrange = ycrop)  plotSurface(object_cropped, color_by = \"bayes_space\") + orig_frame"},{"path":"/reference/subsetByBarcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated — subsetByBarcodes","title":"Deprecated — subsetByBarcodes","text":"Deprecated favor subsetSpataObject().","code":""},{"path":"/reference/subsetByBarcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated — subsetByBarcodes","text":"","code":"subsetByBarcodes(...)"},{"path":"/reference/subsetSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset SPATA2 object with barcodes — subsetSpataObject","title":"Subset SPATA2 object with barcodes — subsetSpataObject","text":"Creates subset SPATA2 object using list barcodes. function working horse behind functions manipulate number observations object.","code":""},{"path":"/reference/subsetSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset SPATA2 object with barcodes — subsetSpataObject","text":"","code":"subsetSpataObject(object, barcodes, spatial_proc = TRUE, verbose = NULL)"},{"path":"/reference/subsetSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset SPATA2 object with barcodes — subsetSpataObject","text":"object object class SPATA2 , case S4 generics, objects classes method defined. barcodes Character vector. barcodes observations supposed kept. spatial_proc Logical value. Indicates whether new sub-object processed spatially. TRUE, new tissue outline identified based remaining observations via identifyTissueOutline(). , spatial annotations tested located either remaining tissue sections. , removed. FALSE, processing steps skipped. Generally speaking, recommended. set FALSE, know . verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.)","code":""},{"path":"/reference/subsetSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset SPATA2 object with barcodes — subsetSpataObject","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/subsetSpataObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset SPATA2 object with barcodes — subsetSpataObject","text":"Unused levels factor variables feature data.frame dropped.","code":""},{"path":[]},{"path":"/reference/subsetSpataObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset SPATA2 object with barcodes — subsetSpataObject","text":"","code":"library(SPATA2) library(tidyverse) library(patchwork)  # ----- Example 1: subsetSpataObject() object <- loadExampleObject(\"UKF313T\", meta = TRUE)  barcodes_keep <-  getMetaDf(object) %>%  filter(bayes_space %in% c(\"B3\", \"B2\", \"B1\")) %>%  pull(barcodes)  object_sub <- subsetSpataObject(object, barcodes = barcodes_keep)  show(object) show(object_sub)  plotSpatialAnnotations(object) # plots all annotations plotSpatialAnnotations(object_sub) # subsetting affects everything by default  ids <- getSpatAnnIds(object) ids_sub <- getSpatAnnIds(object_sub)  # use patchwork to compare plots plot_orig <-   plotSurface(object, color_by = \"bayes_space\", outline = T) +   ggpLayerSpatAnnOutline(object, ids = ids)  plot_sub <-   plotSurface(object_sub, color_by = \"bayes_space\", outline = T) +   ggpLayerSpatAnnOutline(object_sub, ids = ids_sub)  plot_orig + plot_sub  # ----- Example 2: splitSpataObject() # uses subsetSpataObject() in the background  object_mouse <- loadExampleObject(\"LMU_MCI\", process = TRUE, meta = TRUE)  orig_frame <- ggpLayerFrameByCoords(object_mouse)  ids <- getSpatAnnIds(object_mouse)  plotSurface(object_mouse, color_by = \"tissue_section\", pt_clr = \"lightgrey\") +   ggpLayerSpatAnnOutline(object, ids = ids) +   ggpLayerSpatAnnPointer(object, ids = ids, ptr_lengths = \"0.45mm\", text_dist = 10, text_size = 7)  obj_list <- splitSpataObject(object_mouse, grouping = \"tissue_section\")  # present resulting sub-objects purrr::map(obj_list, .f = ~ .x)  # present remaining ids purrr::map(obj_list, .f = ~ getSpatAnnIds(.x))  # show surface plot with all remaining spatial annotations purrr::map(obj_list, .f = ~ plotSurface(.x) + ggpLayerSpatAnnOutline(.x) + orig_frame) %>%   patchwork::wrap_plots()  # repeat with spatial_proc = FALSE obj_list <- splitSpataObject(object_mouse, grouping = \"tissue_section\", spatial_proc = FALSE)  # present remaining spatial annotation ids purrr::map(obj_list, .f = ~ getSpatAnnIds(.x))  # show surface plot with all remaining spatial annotations purrr::map(obj_list, .f = ~ plotSurface(.x) + ggpLayerSpatAnnOutline(.x) + orig_frame) %>%   patchwork::wrap_plots()  # -----  Example 3: cropSpataObject() # uses subsetSpataObject() in the background object <- loadExampleObject(\"UKF275T\", meta = TRUE)  orig_frame <- ggpLayerFrameByCoords(object)  xcrop <- c(\"2.5mm\", \"5.5mm\") ycrop <- c(\"5mm\", \"7mm\")  plotSurface(object, color_by = \"bayes_space\") +  ggpLayerAxesSI(object) +  ggpLayerRect(object, xrange = xcrop, yrange = ycrop)  object_cropped <-  cropSpataObject(object, xrange = xcrop, yrange = ycrop)  plotSurface(object_cropped, color_by = \"bayes_space\") + orig_frame"},{"path":"/reference/summarize_formulas.html","id":null,"dir":"Reference","previous_headings":"","what":"List of summarizing formulas — summarize_formulas","title":"List of summarizing formulas — summarize_formulas","text":"List summarizing formulas","code":""},{"path":"/reference/summarize_formulas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of summarizing formulas — summarize_formulas","text":"","code":"summarize_formulas"},{"path":"/reference/summarize_formulas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of summarizing formulas — summarize_formulas","text":"object class list length 5.","code":""},{"path":"/reference/tab_surface_plots_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Surface plot tab - classic — tab_surface_plots_app","title":"Surface plot tab - classic — tab_surface_plots_app","text":"Surface plot tab - classic","code":""},{"path":"/reference/tab_surface_plots_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surface plot tab - classic — tab_surface_plots_app","text":"","code":"tab_surface_plots_app()"},{"path":"/reference/tab_surface_plots_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Surface plot tab - classic — tab_surface_plots_app","text":"use within shinydashboard::tab_items()","code":""},{"path":"/reference/tab_surface_plots_app.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Surface plot tab - classic — tab_surface_plots_app","text":"Tab big application","code":""},{"path":"/reference/tab_surface_plots_return.html","id":null,"dir":"Reference","previous_headings":"","what":"Surface plot tab - return — tab_surface_plots_return","title":"Surface plot tab - return — tab_surface_plots_return","text":"Surface plot tab - return","code":""},{"path":"/reference/tab_surface_plots_return.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surface plot tab - return — tab_surface_plots_return","text":"","code":"tab_surface_plots_return()"},{"path":"/reference/tab_surface_plots_return.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Surface plot tab - return — tab_surface_plots_return","text":"use within shinydashboard::tab_items()","code":""},{"path":"/reference/tab_surface_plots_return.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Surface plot tab - return — tab_surface_plots_return","text":"Tab output returning application","code":""},{"path":"/reference/tagSpatialAnnotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag spatial annotations — tagSpatialAnnotations","title":"Tag spatial annotations — tagSpatialAnnotations","text":"Adjusts tags spatial annotations.","code":""},{"path":"/reference/tagSpatialAnnotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag spatial annotations — tagSpatialAnnotations","text":"","code":"tagSpatialAnnotations(object, ...)  # S4 method for class 'SPATA2' tagSpatialAnnotations(object, ids, tags, opt = \"add\")  # S4 method for class 'SpatialData' tagSpatialAnnotations(object, ids, tags, opt = \"add\")"},{"path":"/reference/tagSpatialAnnotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag spatial annotations — tagSpatialAnnotations","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. ids character vector IDs naming spatial annotations affected changes. tags character vector tags. opt character string specifying kind adjustment: either 'add' add tags existing tags 'set' replace existing tags new ones.","code":""},{"path":"/reference/tagSpatialAnnotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tag spatial annotations — tagSpatialAnnotations","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/tagSpatialAnnotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tag spatial annotations — tagSpatialAnnotations","text":"","code":"library(SPATA2)  data(\"example_data\")  object <- example_data$object_UKF313T_diet  plotSpatialAnnotations(object) getSpatAnnTags(object, simplify = FALSE)  object <- tagSpatialAnnotations(object, ids = c(\"necrotic_edge\", \"necrotic_edge2\"), tags = \"edge\")  getSpatAnnTags(object, simplify = FALSE)"},{"path":"/reference/theme_lineplot_gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 themes — theme_lineplot_gradient","title":"ggplot2 themes — theme_lineplot_gradient","text":"Miscellaneous ggplot2 themes used throughout package.","code":""},{"path":"/reference/theme_lineplot_gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 themes — theme_lineplot_gradient","text":"","code":"theme_lineplot_gradient(breaks_x = ggplot2::waiver(), range_d)  theme_ridgeplot_gradient(overlap = 0.5)  theme_trajectory_fit()  theme_transparent()"},{"path":"/reference/theme_lineplot_gradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 themes — theme_lineplot_gradient","text":"gg theme","code":""},{"path":"/reference/transfer_slot_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Transfer S4 slot content — transfer_slot_content","title":"Transfer S4 slot content — transfer_slot_content","text":"Transfers slot content one S4 object (donor) newer version (recepient).","code":""},{"path":"/reference/transfer_slot_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transfer S4 slot content — transfer_slot_content","text":"","code":"transfer_slot_content(   donor,   recipient = NULL,   skip = character(0),   verbose = TRUE )"},{"path":"/reference/transfer_slot_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transfer S4 slot content — transfer_slot_content","text":"donor Old S4 object. recipient Empty new S4 object. skip Slot names whose content transferred.","code":""},{"path":"/reference/transfer_slot_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transfer S4 slot content — transfer_slot_content","text":"Updated S4 object.","code":""},{"path":"/reference/transform_area_si_to_pixel.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert area in SI units to pixel — transform_area_si_to_pixel","title":"Convert area in SI units to pixel — transform_area_si_to_pixel","text":"Transforms area SI units pixel based current resolution image SPATA2 object.","code":""},{"path":"/reference/transform_area_si_to_pixel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert area in SI units to pixel — transform_area_si_to_pixel","text":"","code":"transform_area_si_to_pixel(input, object, round = FALSE)  transform_area_si_to_pixels(input, object, round = FALSE, as_numeric = TRUE)"},{"path":"/reference/transform_area_si_to_pixel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert area in SI units to pixel — transform_area_si_to_pixel","text":"input Area SI units. See details information. object valid SPATA2 object NULL. specified distance scaling adjusted current resolution image inside object. NULL, image_dims method must specified. round Numeric value FALSE. numeric, given digits base::round(). Rounds transformed values returned. as_numeric Logical value. TRUE, forces output numeric. means unit suffixed.","code":""},{"path":"/reference/transform_area_si_to_pixel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert area in SI units to pixel — transform_area_si_to_pixel","text":"Transformed input. Vector length input. Function transform_area_si_to_pixel() always returns single numeric value. Function transform_si_to_pixels() returns numeric vector default. as_numeric FALSE, output string suffixed px.","code":""},{"path":"/reference/transform_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform coordinates — transform_coords","title":"Transform coordinates — transform_coords","text":"Applies spatial linear transformations set points Cartesian coordinate system.","code":""},{"path":"/reference/transform_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform coordinates — transform_coords","text":"","code":"transform_coords(coords_df, transformations, center, ranges, ...)"},{"path":"/reference/transform_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform coordinates — transform_coords","text":"transformations List transformation instructions. See slot @transformations class HistoImage. outline_df Data.frame x- y-coordinates.","code":""},{"path":"/reference/transform_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform coordinates — transform_coords","text":"Transformed input.","code":""},{"path":"/reference/transform_dist_si_to_pixel.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert from European Units of Length to pixels — transform_dist_si_to_pixel","title":"Convert from European Units of Length to pixels — transform_dist_si_to_pixel","text":"Transforms European units length (e.g. '2mm', '400.50um') pixel values depending original size spatial -omic methods.","code":""},{"path":"/reference/transform_dist_si_to_pixel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert from European Units of Length to pixels — transform_dist_si_to_pixel","text":"","code":"transform_dist_si_to_pixel(   input,   object = NULL,   image_dims = NULL,   round = FALSE,   ... )  transform_dist_si_to_pixels(   input,   object = NULL,   image_dims = NULL,   round = FALSE,   as_numeric = TRUE,   ... )"},{"path":"/reference/transform_dist_si_to_pixel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert from European Units of Length to pixels — transform_dist_si_to_pixel","text":"input Distance SI unit length. See details . object valid SPATA2 object NULL. specified distance scaling adjusted current resolution image inside object. NULL, image_dims method must specified. round Numeric value FALSE. numeric, given digits base::round(). Rounds transformed values returned. as_numeric Logical value. TRUE, forces output numeric. means unit suffixed.","code":""},{"path":"/reference/transform_dist_si_to_pixel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert from European Units of Length to pixels — transform_dist_si_to_pixel","text":"Transformed input. Vector length input. Function transform_dist_si_to_pixel() always returns single numeric value. Function transform_dist_si_to_pixels() returns numeric vector default. as_numeric FALSE, output string suffixed px.","code":""},{"path":"/reference/transform_dist_si_to_pixel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert from European Units of Length to pixels — transform_dist_si_to_pixel","text":"Several functions SPATA2 arguments take distance input. specifically refer distance unit must specified. three ways create valid input arguments. 1. pixel: two valid input options specify distance pixel: numeric: Single numeric values, e.g. arg_input <- c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input <- c('2px', '3.554px', '69px', '100.67px') Note: unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant. 2. According Systeme international d`unites (SI): Specifying distances SI units e.g. arg_input <- c('2mm', '4mm') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfLengthSI(). 3. vectors class unit: Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input <- units::set_unit(x = c(2,4), value = 'mm') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":"/reference/transform_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform image — transform_image","title":"Transform image — transform_image","text":"Transforms image tissue outline.","code":""},{"path":"/reference/transform_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform image — transform_image","text":"","code":"transform_image(image, transformations, bg_col = \"white\")"},{"path":"/reference/transform_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform image — transform_image","text":"image Image comptabible EBImage-package. transformations List transformation instructions. See slot @transformations class HistoImage.","code":""},{"path":"/reference/transform_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform image — transform_image","text":"Transformed input.","code":""},{"path":"/reference/transform_pixel_to_area_si.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts from pixel to area in SI units — transform_pixel_to_area_si","title":"Converts from pixel to area in SI units — transform_pixel_to_area_si","text":"Transforms pixel values SI units (e.g. '7.5mm2', '20um2')","code":""},{"path":"/reference/transform_pixel_to_area_si.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts from pixel to area in SI units — transform_pixel_to_area_si","text":"","code":"transform_pixel_to_area_si(input, unit, object, round = FALSE)"},{"path":"/reference/transform_pixel_to_area_si.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts from pixel to area in SI units — transform_pixel_to_area_si","text":"input Area pixel input. See details information. unit SI area unit. Use validUnitsOfAreaSI() obtain valid input options. object object class SPATA2 , case S4 generics, objects classes method defined. round Numeric value FALSE. numeric, given digits base::round(). Rounds transformed values returned.","code":""},{"path":"/reference/transform_pixel_to_area_si.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts from pixel to area in SI units — transform_pixel_to_area_si","text":"Transformed input. Vector length input class units.","code":""},{"path":"/reference/transform_pixel_to_dist_si.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert from pixels to European units of length — transform_pixel_to_dist_si","title":"Convert from pixels to European units of length — transform_pixel_to_dist_si","text":"Transforms pixel values European units length (e.g. '2mm', '400.50um') depending one original size spatial -omic methods resolution current image.","code":""},{"path":"/reference/transform_pixel_to_dist_si.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert from pixels to European units of length — transform_pixel_to_dist_si","text":"","code":"transform_pixel_to_dist_si(   input,   unit,   object = NULL,   image_dims = NULL,   round = FALSE,   ... )  transform_pixels_to_dist_si(   input,   unit,   object = NULL,   image_dims = NULL,   method = NULL,   round = FALSE,   ... )"},{"path":"/reference/transform_pixel_to_dist_si.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert from pixels to European units of length — transform_pixel_to_dist_si","text":"input Distance pixel input. See details information. unit Character value. desired SI unit length. Use validUnitsOfLengthSI() obtain valid input options. object valid SPATA2 object NULL. specified distance scaling adjusted current resolution image inside object. NULL, image_dims method must specified. round Numeric value FALSE. numeric, given digits base::round(). Rounds transformed values returned. as_numeric Logical value. TRUE, forces output numeric. means unit suffixed.","code":""},{"path":"/reference/transform_pixel_to_dist_si.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert from pixels to European units of length — transform_pixel_to_dist_si","text":"Transformed input. Vector length input class units.","code":""},{"path":"/reference/transform_pixel_to_dist_si.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert from pixels to European units of length — transform_pixel_to_dist_si","text":"Several functions SPATA2 arguments take distance input. specifically refer distance unit must specified. three ways create valid input arguments. 1. pixel: two valid input options specify distance pixel: numeric: Single numeric values, e.g. arg_input <- c(2, 3.554, 69, 100.67). unit specified input interpreted pixels. character: Suffixed 'px', e.g. arg_input <- c('2px', '3.554px', '69px', '100.67px') Note: unit pixel (px) used distances well areas. pixel refers distance pixel side length meant. pixel refers area number pixels meant. 2. According Systeme international d`unites (SI): Specifying distances SI units e.g. arg_input <- c('2mm', '4mm') etc. requires input character unit must provided suffix. numeric value unit must empty space! Valid suffixes can obtained using function validUnitsOfLengthSI(). 3. vectors class unit: Behind scenes SPATA2 works units package. Input converted vectors class units. Therefore, input can directly provided way: arg_input <- units::set_unit(x = c(2,4), value = 'mm') Note pixel valid unit units package. want specify input pixel use input option 1. pixel.","code":""},{"path":"/reference/transform_pixel_to_dist_si.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert from pixels to European units of length — transform_pixel_to_dist_si","text":"transform_pixel_to_dist_si() transforms single values. transform_pixels_to_dist_si() transforms vectors lengths one .","code":""},{"path":"/reference/transform_pixel_to_si.html","id":null,"dir":"Reference","previous_headings":"","what":"dummy — transform_pixels_to_area_si","title":"dummy — transform_pixels_to_area_si","text":"dummy","code":""},{"path":"/reference/transform_pixel_to_si.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dummy — transform_pixels_to_area_si","text":"","code":"transform_pixels_to_area_si(input, unit, object, round = FALSE)  transform_pixel_to_si()"},{"path":"/reference/translate_shape_string.html","id":null,"dir":"Reference","previous_headings":"","what":"inspired from https://github.com/tidyverse/ggplot2/blob/main/R/geom-point.r — translate_shape_string","title":"inspired from https://github.com/tidyverse/ggplot2/blob/main/R/geom-point.r — translate_shape_string","text":"inspired https://github.com/tidyverse/ggplot2/blob/main/R/geom-point.r","code":""},{"path":"/reference/translate_shape_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"inspired from https://github.com/tidyverse/ggplot2/blob/main/R/geom-point.r — translate_shape_string","text":"","code":"translate_shape_string(shape_string)"},{"path":"/reference/tutorial_hint_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tutorial_hint_dummy","title":"Title — tutorial_hint_dummy","text":"Title","code":""},{"path":"/reference/tutorial_hint_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tutorial_hint_dummy","text":"","code":"tutorial_hint_dummy()"},{"path":"/reference/tutorial_hint_dummy.html","id":"tutorials","dir":"Reference","previous_headings":"","what":"Tutorials","title":"Title — tutorial_hint_dummy","text":"Extensive tutorials use function can found website https://themilolab.github.io/SPATA2/ .","code":""},{"path":"/reference/unloadImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Unload image slot content — unloadImage","title":"Unload image slot content — unloadImage","text":"Removes image slot @image HistoImage. Useful efficient data storing. confused removeImage()!","code":""},{"path":"/reference/unloadImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unload image slot content — unloadImage","text":"","code":"unloadImage(object, ...)  # S4 method for class 'SPATA2' unloadImage(object, img_name = activeImage(object), verbose = NULL, ...)  # S4 method for class 'SpatialData' unloadImage(object, img_name, verbose = TRUE, ...)  # S4 method for class 'HistoImage' unloadImage(object, verbose = TRUE, ...)  unloadImages(object, ...)  # S4 method for class 'SPATA2' unloadImages(object, active = FALSE, verbose = TRUE)  # S4 method for class 'SpatialData' unloadImages(object, active = FALSE, verbose = TRUE)"},{"path":"/reference/unloadImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unload image slot content — unloadImage","text":"object object class SPATA2 , case S4 generics, objects classes method defined. ... Used absorb deprecated arguments functions. img_name Character value. name image unload. verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) active. Logical value. FALSE, default, image active HistoImage unloaded.","code":""},{"path":"/reference/unloadImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unload image slot content — unloadImage","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/updateS4.html","id":null,"dir":"Reference","previous_headings":"","what":"Update S4 objects — updateS4","title":"Update S4 objects — updateS4","text":"Methods S4 classes within SPATA2 keep S4 objects date.","code":""},{"path":"/reference/updateS4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update S4 objects — updateS4","text":"","code":"updateS4(object, ...)  # S4 method for class 'SpatialMethod' updateS4(object, method_name)  # S4 method for class 'spata2' updateS4(   object,   method = NULL,   sample_name = NULL,   n_pcs = 30,   verbose = TRUE,   .... )"},{"path":"/reference/updateS4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update S4 objects — updateS4","text":"object S4 object. ...  method_name Character value. Name used spatial method.","code":""},{"path":"/reference/updateS4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update S4 objects — updateS4","text":"updated S4 object.","code":""},{"path":"/reference/updateSpataObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Update SPATA2 object — updateSpataObject","title":"Update SPATA2 object — updateSpataObject","text":"Updates input object newest version package.","code":""},{"path":"/reference/updateSpataObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update SPATA2 object — updateSpataObject","text":"","code":"updateSpataObject(   object,   method = NULL,   sample_name = NULL,   n_pcs = 30,   verbose = TRUE,   .... )"},{"path":"/reference/updateSpataObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update SPATA2 object — updateSpataObject","text":"object object class SPATA2 , case S4 generics, objects classes method defined. method Character value NULL. NULL, functions tests whether barcodes input object can mapped either VisiumSmall VisiumLarge platform. succeed must specify argument. case one base::names(spatial_methods). sample_name Character value. name input object. n_pcs Numeric value NULL. numeric, specifies number principal components use. NULL, principal components used (computed runPCA()). verbose Logical. TRUE, informative messages regarding computational progress printed. (Warning messages always printed.) .... Used absorb deprecated arguments functions.","code":""},{"path":"/reference/updateSpataObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update SPATA2 object — updateSpataObject","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/updateSpataObject.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Update SPATA2 object — updateSpataObject","text":"n_pcs sample_name input object derives old SPATA (SPATA2) package!","code":""},{"path":"/reference/update_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"update — update_dummy","title":"update — update_dummy","text":"update","code":""},{"path":"/reference/update_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update — update_dummy","text":"","code":"update_dummy()"},{"path":"/reference/update_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"update — update_dummy","text":"updated input object, containing added, removed computed results.","code":""},{"path":"/reference/update_spata2v2_to_spata2v3.html","id":null,"dir":"Reference","previous_headings":"","what":"doc — update_spata2v2_to_spata2v3","title":"doc — update_spata2v2_to_spata2v3","text":"doc","code":""},{"path":"/reference/update_spata2v2_to_spata2v3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"doc — update_spata2v2_to_spata2v3","text":"","code":"update_spata2v2_to_spata2v3(object, method = NULL, verbose = TRUE)"},{"path":"/reference/update_spata2v2_to_spata2v3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"doc — update_spata2v2_to_spata2v3","text":"object","code":""},{"path":"/reference/useVarForTissueOutline.html","id":null,"dir":"Reference","previous_headings":"","what":"Use specified variable for tissue outline — useVarForTissueOutline","title":"Use specified variable for tissue outline — useVarForTissueOutline","text":"function sets specified variable metadata given object used identifyTissueOutline() produce acceptable results.","code":""},{"path":"/reference/useVarForTissueOutline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use specified variable for tissue outline — useVarForTissueOutline","text":"","code":"useVarForTissueOutline(   object,   var_name,   concavity = 2,   min_obs = nObs(object) * 0.05 )"},{"path":"/reference/useVarForTissueOutline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use specified variable for tissue outline — useVarForTissueOutline","text":"object object class SPATA2 , case S4 generics, objects classes method defined. var_name character string specifying name variable metadata used tissue outline. concavity Numeric value. Given argument concavity concaveman::concaveman(). Determines relative measure concavity. 1 results relatively detailed shape, Infinity results convex hull. can use values lower 1, can produce pretty crazy shapes. min_obs Numeric value. minimal number observations group must considered tissue section. Defaults 5% total number observations. Must higher 3.","code":""},{"path":"/reference/useVarForTissueOutline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use specified variable for tissue outline — useVarForTissueOutline","text":"updated input object, containing added, removed computed results.","code":""},{"path":[]},{"path":"/reference/validActivationFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain valid argument inputs — validActivationFunctions","title":"Obtain valid argument inputs — validActivationFunctions","text":"function simply return valid input options recurring arguments.","code":""},{"path":"/reference/validActivationFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain valid argument inputs — validActivationFunctions","text":"","code":"validActivationFunctions()  validAgglomerationMethods()  validAlluvialTypes()  validColorPalettes(flatten = FALSE)  validColorSpectra(flatten = FALSE)  validDeaMethods()  validDefaultInstructionSlots()  validDistanceMethods()  validHierarchicalClusterMethods()  validModelNames()  validPadjMethods()  validSpatialMethods()  validUnits()  validUnitsOfArea()  validUnitsOfAreaSI()  validUnitsOfLength()  validUnitsOfLengthSI()"},{"path":"/reference/validActivationFunctions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain valid argument inputs — validActivationFunctions","text":"Character vectors named lists .","code":""},{"path":"/reference/validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate object input — validation","title":"Validate object input — validation","text":"Validate object input","code":""},{"path":"/reference/validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate object input — validation","text":"","code":"validation(x)"},{"path":"/reference/variable.html","id":null,"dir":"Reference","previous_headings":"","what":"variable — variable","title":"variable — variable","text":"variable","code":""},{"path":"/reference/variable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"variable — variable","text":"","code":"variable(variable)"},{"path":"/reference/variable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"variable — variable","text":"variable Character value. name variable interest.","code":""},{"path":"/reference/variable_num.html","id":null,"dir":"Reference","previous_headings":"","what":"variable_num — variable_num","title":"variable_num — variable_num","text":"variable_num","code":""},{"path":"/reference/variable_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"variable_num — variable_num","text":"","code":"variable_num(variable)"},{"path":"/reference/variable_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"variable_num — variable_num","text":"variable Character value. name numeric variable interest.","code":""},{"path":"/reference/variables_num.html","id":null,"dir":"Reference","previous_headings":"","what":"variables_num — variables_num","title":"variables_num — variables_num","text":"variables_num","code":""},{"path":"/reference/variables_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"variables_num — variables_num","text":"","code":"variables_num(variables)"},{"path":"/reference/variables_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"variables_num — variables_num","text":"variables Character vector. name numeric variables interest.","code":""},{"path":"/reference/visiumSpotDistances.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Distances Between Visium Spots — visiumSpotDistances","title":"Calculate Distances Between Visium Spots — visiumSpotDistances","text":"function calculates pairwise distances specified Visium spots based x y coordinates.","code":""},{"path":"/reference/visiumSpotDistances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Distances Between Visium Spots — visiumSpotDistances","text":"","code":"visiumSpotDistances(   type = c(\"small\", \"large\"),   bcs_o = NULL,   bcs_n = NULL,   nnn = NULL )"},{"path":"/reference/visiumSpotDistances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Distances Between Visium Spots — visiumSpotDistances","text":"type character vector specifying type Visium platform. One \"small\" \"large\". Default \"small\". bcs_o character vector barcodes specifying origin spots. NULL (default), barcodes specified type used. bcs_n character vector barcodes specifying neighbor spots. NULL (default), barcodes specified type used. nnn numeric value specifying number nearest neighbors consider. NULL (default), neighbors considered.","code":""},{"path":"/reference/visiumSpotDistances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Distances Between Visium Spots — visiumSpotDistances","text":"data frame containing pairwise distances specified Visium spots. data frame contains following variables: bcs_o: Barcode origin spot. bcs_n: Barcode neighbor spot. xo: x-coordinate origin spot. yo: y-coordinate origin spot. xn: x-coordinate neighbor spot. yn: y-coordinate neighbor spot. distance: Calculated distance origin neighbor spots.","code":""},{"path":"/reference/visium_spots.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of a slot named VisiumSmall, which contains the data.frame of all barcoded spots of 6.5mm capture area and a slot named VisiumLarge which contains the barcoded spots of the 11mm capture area. — visium_spots","title":"A list of a slot named VisiumSmall, which contains the data.frame of all barcoded spots of 6.5mm capture area and a slot named VisiumLarge which contains the barcoded spots of the 11mm capture area. — visium_spots","text":"@docType data @usage data(visium_spots)","code":""},{"path":"/reference/visium_spots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of a slot named VisiumSmall, which contains the data.frame of all barcoded spots of 6.5mm capture area and a slot named VisiumLarge which contains the barcoded spots of the 11mm capture area. — visium_spots","text":"","code":"visium_spots"},{"path":"/reference/visium_spots.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of a slot named VisiumSmall, which contains the data.frame of all barcoded spots of 6.5mm capture area and a slot named VisiumLarge which contains the barcoded spots of the 11mm capture area. — visium_spots","text":"object class list length 2.","code":""},{"path":"/reference/vselect.html","id":null,"dir":"Reference","previous_headings":"","what":"Select vector with tidyselect functions — vselect","title":"Select vector with tidyselect functions — vselect","text":"wrapper around tidyselect functions allows use data.frames vectors well.","code":""},{"path":"/reference/vselect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select vector with tidyselect functions — vselect","text":"","code":"vselect(input, ..., out.fail = base::character(0))"},{"path":"/reference/vselect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select vector with tidyselect functions — vselect","text":"input character vector factor. ... Additional selection helpers tidyselect package match variable names according given pattern. lst named list. (Unnamed elements discarded.)","code":""},{"path":"/reference/vselect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select vector with tidyselect functions — vselect","text":"subsetted version input.","code":""},{"path":[]},{"path":"/reference/whichTissueSection.html","id":null,"dir":"Reference","previous_headings":"","what":"Tissue section belonging of spatial annotations — whichTissueSection","title":"Tissue section belonging of spatial annotations — whichTissueSection","text":"Checks tissue section spatial annotation belongs. (required case multiple tissue sections per sample.)","code":""},{"path":"/reference/whichTissueSection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tissue section belonging of spatial annotations — whichTissueSection","text":"","code":"whichTissueSection(object, id)"},{"path":"/reference/whichTissueSection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tissue section belonging of spatial annotations — whichTissueSection","text":"object object class SPATA2 , case S4 generics, objects classes method defined. id Character value. spatial annotation ID interest.","code":""},{"path":"/reference/whichTissueSection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tissue section belonging of spatial annotations — whichTissueSection","text":"Character value.","code":""},{"path":"/reference/whichTissueSection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tissue section belonging of spatial annotations — whichTissueSection","text":"","code":"library(SPATA2)  object <- example_data$object_lmu_mci_diet  object <- identifyTissueOutline(object)  plotSurface(object, color_by = \"tissue_section\") +   ggpLayerSpatAnnOutline(object, ids = c(\"inj1\", \"inj2\"))  whichTissueSection(object, id = \"inj1\")  whichTissueSection(object, id = \"inj2\")"}]
