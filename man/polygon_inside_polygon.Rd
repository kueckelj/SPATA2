% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/i.R
\name{polygon_inside_polygon}
\alias{polygon_inside_polygon}
\alias{polygon_intersects_polygon}
\title{Check polygon containment and intersection}
\usage{
polygon_inside_polygon(a, b, strictly = TRUE)

polygon_intersects_polygon(a, b, strictly = TRUE)
}
\arguments{
\item{a}{A data frame or matrix with two columns named \code{x} and \code{y}, representing the vertices of the first polygon.}

\item{b}{A data frame or matrix with two columns named \code{x} and \code{y}, representing the vertices of the second polygon.}

\item{strictly}{Logical, if \code{TRUE}, the functions perform strict checks (i.e., points on the edges of the polygons are excluded). If \code{FALSE}, points on the edges are considered as inside or intersecting.}
}
\value{
\itemize{
\item \code{polygon_inside_polygon()}: A logical value \code{TRUE} if all points of polygon \code{a} are inside polygon \code{b}, \code{FALSE} otherwise.
\item \code{polygon_intersects_polygon()}: A logical value \code{TRUE} if the polygons intersect, \code{FALSE} otherwise.
}
}
\description{
This set of functions checks whether one polygon is completely inside another, or whether two polygons intersect.
}
\details{
These functions help in determining spatial relationships between two polygons. They work with data frames or matrices where the columns represent the \code{x} and \code{y} coordinates of the polygon's vertices.

\itemize{
\item \code{polygon_inside_polygon()}: Checks whether all points of polygon \code{a} lie inside polygon \code{b}.
\item \code{polygon_intersects_polygon()}: Checks whether the polygons \code{a} and \code{b} intersect, considering their vertices.
\item If \code{strictly = TRUE}, the checks exclude points that lie on the edges of the polygons. If \code{strictly = FALSE}, points on the edges are considered inside or intersecting.
}
}
\examples{
polygon_a <- data.frame(x = c(1, 2, 2, 1), y = c(1, 1, 2, 2))
polygon_b <- data.frame(x = c(0, 3, 3, 0), y = c(0, 0, 3, 3))

# Check if polygon_a is completely inside polygon_b
polygon_inside_polygon(polygon_a, polygon_b) # TRUE

# Check if polygon_a intersects with polygon_b
polygon_intersects_polygon(polygon_a, polygon_b) # TRUE

}
