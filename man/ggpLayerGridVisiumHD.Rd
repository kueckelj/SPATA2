% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g.R
\name{ggpLayerGridVisiumHD}
\alias{ggpLayerGridVisiumHD}
\title{Add a grid to VisiumHD surface plots}
\usage{
ggpLayerGridVisiumHD(
  object,
  res,
  line_alpha = 0.9,
  line_clr = "black",
  line_size = 1,
  img_name = activeImage(object)
)
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{res}{\link[=concept_distance_measure]{Distance measure.} A value specifying the desired resolution for the grid.
This resolution must be greater than the current resolution and divisible by the current resolution.}

\item{line_alpha}{Numeric. Affects alpha of main lines of the plot.}

\item{line_size}{Numeric. Affects size of the main lines of the plot.}

\item{img_name}{Character value. The name of the image of interest.
If \code{NULL}, the \link[=concept_active]{active} image is chosen by default. Either way, must
be one of \code{\link[=getImageNames]{getImageNames()}}.}
}
\value{
\code{ggpLayer*()}-functions return lists of \code{ggproto} objects
that can be added to ggplots via the \code{+} operator. In most of the cases
they are supposed to be added to plots created with the \code{plotSurface*()}
family.
}
\description{
Adds a grid overlay to VisiumHD spatial data at a specified resolution.
This function is designed to work specifically with VisiumHD data within a \code{SPATA2} object.
}
\examples{
\dontrun{
library(SPATA2)
library(SPATAData)

# download example object
object <- downloadSpataObject("HumanPancreasHD", update = FALSE)

# create the grid layer for visualization
grid_layer <- ggpLayerGridVisiumHD(object, res = "32um", line_size = 0.1, line_alpha = 0.1)

xrange <- c("9.25mm", "9.75mm")
yrange <- c("5.5mm", "6mm")

plotSurface(object, unit = "mm") +
  grid_layer +
  ggpLayerRect(object, xrange = xrange, yrange = yrange)

plotSurface(object, xrange = xrange, yrange = yrange, unit = "mm", pt_size = 0.1) +
  grid_layer +
  ggpLayerScaleBarSI(object, sb_dist = "32um", sb_pos = c("9.7mm", "5.75mm"), text_nudge_y = -7.5)

# identify top 100 genes for the sake of this example
object <- identifyVariableMolecules(object, method = "vst", n_mol = 100)
genes <- getVariableMolecules(object, method = "vst")

# reduce resolution
object_red <- reduceResolutionVisiumHD(object, res_new = "32um", genes = genes, workers = 4)

# show new position of aggregated squares
plotSurface(object_red, unit = "mm") +
  grid_layer +
  ggpLayerRect(object, xrange = xrange, yrange = yrange)

plotSurface(object_red, xrange = xrange, yrange = yrange, unit = "mm", pt_size = 0.2) +
  grid_layer +
  ggpLayerScaleBarSI(object, sb_dist = "32um", sb_pos = c("9.7mm", "5.75mm"), text_nudge_y = -7.5)

# show the percentage of squares
plotSurface(object_red, color_by = "square_perc", unit = "mm", limits = c(0, 100), oob = scales::squish) +
  ggpLayerRect(object, xrange = xrange, yrange = yrange)

# note how several new squares do not contain 4 but 3 to 1 spots due to the tissue edge
plotSurface(object, xrange = xrange, yrange = yrange, unit = "mm", pt_size = 0.1) +
  grid_layer +
  ggpLayerScaleBarSI(object, sb_dist = "32um", sb_pos = c("9.7mm", "5.75mm"), text_nudge_y = -7)

# visualize with 'square_perc' and compare
plotSurface(object_red, color_by = "square_perc", xrange = xrange, yrange = yrange, unit = "mm", pt_size = 0.2) +
  grid_layer +
  ggpLayerScaleBarSI(object, sb_dist = "32um", sb_pos = c("9.7mm", "5.75mm"), text_nudge_y = -7)

# filter if you want to
object_red_flt <- filterSpataObject(object_red, square_perc == 100)

plotSurface(object_red_flt, color_by = "square_perc")

# not filtered
plotSurface(object_red, color_by = "square_perc", xrange = xrange, yrange = yrange, unit = "mm", pt_size = 0.2) +
  grid_layer +
  labs(subtitle = "Not filtered")

# filtered
plotSurface(object_red_flt, color_by = "square_perc", xrange = xrange, yrange = yrange, unit = "mm", pt_size = 0.2) +
  grid_layer +
  labs(subtitle = "Filtered")
}
}
