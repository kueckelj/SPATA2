% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d.R
\name{dissolveGroups}
\alias{dissolveGroups}
\title{Dissolve Groups in a SPATA2 Object}
\usage{
dissolveGroups(object, grouping, groups_dissolve, grouping_new = NULL)
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{grouping}{Character value. The grouping variable of interest. Use
\code{\link[=getGroupingOptions]{getGroupingOptions()}} to obtain all valid input options.}

\item{groups_dissolve}{A character vector specifying the names of the groups to be dissolved.}

\item{grouping_new}{A character string specifying the name for the new grouping variable.
If \code{NULL}, the original grouping variable will be updated. Default is \code{NULL}!}
}
\value{
The updated input object, containing the added, removed or computed results.
}
\description{
This function dissolves specified groups in a \code{\link{SPATA2}} object by merging them into
the closest neighboring groups based on the pairwise distances
between \link[=concept_observations]{observations}.
}
\details{
This function performs the following steps:
\enumerate{
\item Retrieves the metadata data frame from the \code{\link{SPATA2}} object.
\item Checks if the specified grouping and groups to dissolve exist in the object.
\item Computes the pairwise distances between all observations.
\item Identifies the closest neighboring groups for the observations in the groups to be dissolved.
\item Updates the grouping variable with the new group assignments.
\item If \code{grouping_new} is provided, a new grouping variable is created; otherwise, the original grouping variable is updated.
}
}
\examples{
\dontrun{
  # Assuming `spata_obj` is a SPATA2 object with grouping variable 'clusters'
  spata_obj <- dissolveGroups(
    object = spata_obj,
    grouping = 'clusters',
    groups_dissolve = c('cluster1', 'cluster2'),
    grouping_new = 'new_clusters'
  )
}
}
