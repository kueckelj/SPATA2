% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runA-Z.R
\name{runDEA}
\alias{runDEA}
\alias{runDeAnalysis}
\title{Differential expression analysis (DEA)}
\usage{
runDEA(
  object,
  across,
  method_de = NULL,
  verbose = NULL,
  base = 2,
  assay_name = activeAssay(object),
  ...
)

runDeAnalysis(...)
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{across}{Character value or NULL. Specifies the grouping variable of interest.

Use \code{getGroupingOptions()} to obtain all variable names that group the
barcode spots of your object in a certain manner.}

\item{method_de}{Character value. Denotes the method to according to which the de-analysis is performed.
Given to argument \code{test.use} of the \code{Seurat::FindAllMarkers()}-function. Run \code{SPATA::dea_methods}
to obtain all valid input options.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{assay_name}{Only relevant if the \code{SPATA2} object contains more than
one assay: Denotes the assay of interest and thus the
\link[=concept_molecular_modalities]{molecular modality} to use. Defaults to the active assay,
as set by \code{\link[=activateAssay]{activateAssay()}}.}

\item{...}{Additional arguments given to \code{Seurat::FindAllMarkers()}}

\item{fc_name, base}{Given to corresponding arguments of \code{Seurat::FindAllMarkers()}.}
}
\value{
The updated input object, containing the added, removed or computed results.
}
\description{
This function makes use of \code{Seurat::FindAllMarkers()} to identify
the differently expressed variables across the groups of
the grouping variable denoted in the argument \code{across}.

See details for more.
}
\details{
This function is a wrapper around the DEA pipeline from the \code{Seurat}
package. It creates a temporary \code{Seurat} object via \code{Seurat::CreateSeuratObject()},
and \code{Seurat::SCTransform()}. Then, \code{Seurat::FindAllMarkers()} is run. The output data.frame
is stored in the \code{SPATA2} object which is returned at the end.

If \code{across} and/or \code{method_de} are vectors instead of single
values \code{runDEA()} iterates over all combinations in a for-loop and
stores the results in the respective slots. (e.g.: If \code{across} = \emph{'seurat_clusters'}
and \code{method_de} = \emph{c('wilcox', 'bimod')} the function computes the differently expressed genes
across all groups found in the feature variable \emph{seurat_clusters} according to method \emph{wilcox} and
stores the results in the respective slot. Then it does the same according to method \emph{bimod}.)

The results are obtainable via \code{getDeaResults()}, \code{getDeaResultsDf()} and \code{getDeaGenes()}.
}
\examples{

library(SPATA2)

data("example_data")
object <- example_data$object_UKF269T_diet

getGroupingOptions(object)

plotSurface(object, color_by = "histology")

object <- runDEA(object, across = "histology")

# extract best marker gene for each group by lowest p-value
top_marker_genes <-
  getDeaGenes(object, across = "histology", n_lowest_pval = 1)

print(top_marker_genes)

plotSurfaceComparison(object, color_by = top_marker_genes)

}
