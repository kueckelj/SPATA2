% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s.R
\name{saveSpataObject}
\alias{saveSpataObject}
\title{Save corresponding objects}
\usage{
saveSpataObject(object, directory_spata = NULL, verbose = NULL, ...)
}
\arguments{
\item{object}{A valid spata-object.}

\item{directory_spata, directory_cds_directory_seurat_object}{Character value or NULL. Set details for more.}
}
\value{
Apart from their side effect (saving the object of interest) all three functions
return the provided, updated \code{SPATA2} object.
}
\description{
Family of functions to save corresponding objects of different analysis
platforms. See details and value for more information.
}
\details{
If \code{directory_<platform>} is set to NULL (the default) all functions first check if the \code{SPATA2} object contains any
deposited default directories. If so the specified object to be saved is saved under
that direction. If \code{directory_<platform>} is specified as a character it's input is taken as the
directory under which to store the object and the deposited directory is overwritten
such that the next time you load the \code{SPATA2} object it contains the updated directory.
In order for that to work the \code{saveCorresponding*()}-functions - apart from saving the object of interest -  return the
updated \code{SPATA2} object while \code{saveSpataObject()} simply returns an invisible TRUE
as the  new directory (if provided) is stored inside the object before it is saved.
}
\examples{
library(SPATA2)

data("example_data")

object <- example_data$object_UKF269T_diet

getSpataDir(object) # fails, no directory set

# opt 1
object <- setSpataDir(object, directory_spata = "my_folder/object_UKF269T.RDS")

saveSpataObject(object)

# opt 2
object <- saveSpataObject(object, directory_spata = "my_folder/object_UKF269T.RDS")

getSpataDir(object)

}
