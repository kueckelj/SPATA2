% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprecated.R
\name{subsetBySegment_CountMtr}
\alias{subsetBySegment_CountMtr}
\alias{subsetByBarcodes_CountMtr}
\alias{subsetBySegment_ExprMtr}
\alias{subsetByBarcodes_ExprMtr}
\title{Subset a spata-object}
\usage{
subsetBySegment_CountMtr(
  object,
  segment_name,
  of_sample = NA,
  SCTransform = FALSE,
  NormalizeData = list(normalization.method = "LogNormalize", scale.factor = 1000),
  FindVariableFeatures = list(selection.method = "vst", nfeatures = 2000),
  ScaleData = TRUE,
  RunPCA = list(npcs = 60),
  FindNeighbors = list(dims = 1:30),
  FindClusters = list(resolution = 0.8),
  RunTSNE = TRUE,
  RunUMAP = list(dims = 1:30),
  verbose = NULL
)

subsetByBarcodes_CountMtr(
  object,
  barcodes,
  of_sample = NA,
  SCTransform = FALSE,
  NormalizeData = list(normalization.method = "LogNormalize", scale.factor = 1000),
  FindVariableFeatures = list(selection.method = "vst", nfeatures = 2000),
  ScaleData = TRUE,
  RunPCA = list(npcs = 60),
  FindNeighbors = list(dims = 1:30),
  FindClusters = list(resolution = 0.8),
  RunTSNE = TRUE,
  RunUMAP = list(dims = 1:30),
  verbose = NULL
)

subsetBySegment_ExprMtr(
  object,
  segment_name,
  of_sample = NA,
  mtr_name = "scaled",
  directory_spata = NULL,
  combine_with_wd = FALSE,
  k = 50,
  nn = NULL,
  runPca = list(n_pcs = 30),
  runTsne = list(tsne_perplexity = 30),
  runUmap = list(),
  verbose = TRUE
)

subsetByBarcodes_ExprMtr(
  object,
  barcodes,
  of_sample = NA,
  mtr_name = "scaled",
  directory_spata = NULL,
  combine_with_wd = FALSE,
  k = 50,
  nn = NULL,
  runPca = list(n_pcs = 30),
  runTsne = list(tsne_perplexity = 30),
  runUmap = list(),
  verbose = TRUE
)
}
\arguments{
\item{object}{A valid spata-object.}

\item{segment_name}{Character value. The segment according to which the spata-object is
to be subsetted.}

\item{of_sample}{This argument is currently inactive. It might be reactivated when
spata-objects can store more than one sample.}

\item{SCTransform}{A named list of arguments given to \code{Seurat::SCTransform()}, TRUE or FALSE.}

\item{NormalizeData}{A named list of arguments given to \code{Seurat::NormalizeData()}, TRUE or FALSE.}

\item{FindVariableFeatures}{A named list of arguments given to \code{Seurat::FindVariableFeatures()}, TRUE or FALSE.}

\item{ScaleData}{A named list of arguments given to \code{Seurat::ScaleData()}, TRUE or FALSE.

Hint: If set to TRUE or the argument-list provided does not specify the argument \code{features} input
for argument \code{features} is set to \code{base::rownames(seurat_object)}.}

\item{RunPCA}{A named list of arguments given to \code{Seurat::RunPCA()}, TRUE or FALSE.}

\item{FindNeighbors}{A named list of arguments given to \code{Seurat::FindNeighbors()}, TRUE or FALSE.}

\item{FindClusters}{A named list of arguments given to \code{Seurat::FindClusters()}, TRUE or FALSE.}

\item{RunTSNE}{A named list of arguments given to \code{Seurat::RunTSNE()}, TRUE or FALSE.}

\item{RunUMAP}{A named list of arguments given to \code{Seurat::RunUMAP()}, TRUE or FALSE.}

\item{barcodes}{Character vector. The barcodes that you want to keep.}

\item{k, nn}{Numeric value. Given to argument \code{k} of function \code{RANN::nn2()}: Determines to maximum number
of nearest neighbours to compute. (\code{nn} is deprecated.)}
}
\value{
An updated spata-object.
}
\description{
These functions filter your spata-object and initiate a new one
with just the barcode-spots of interest.
}
\details{
\code{subsetBy*()}-functions suffixed with \code{_CountMtr} assume your
spata-object to contain a count matrix. They initiate the new spata-object
via \code{initiateSpataObject_CountMtr()}. Check it's documentation for more details.

\code{subsetBy*()}-functions suffixed with \code{_ExprMtr} assume your
spata-object to contain an expression matrix. They initiate the new spata-object
via \code{initiateSpataObject_ExprMtr()}. Check it's documentation for more details.

The gene-set data.frame from the input spata-object is transferred to the new object.

To obtain information about how you initiated the input spata-object use \code{getInitiationInfo()}.
}
