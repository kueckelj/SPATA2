% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S4-documentation.R
\docType{class}
\name{SpatialMethod-class}
\alias{SpatialMethod-class}
\alias{SpatialMethod}
\title{The \code{SpatialMethod} - Class}
\description{
Abstracts the concept of spatial biology experiments
such as \emph{Visium} or \emph{SlideSeq}.
}
\section{Slots}{

\describe{
\item{\code{capture_area}}{list. List of length two. Provides the measures
of the area in which identified entities are to be expected (in SI units).}

\item{\code{fiducial_frame}}{list. List of length two, named \emph{x} and \emph{y}.
Provides standardized measures of the sample image (in SI units).}

\item{\code{info}}{list. List of miscellaneous meta data for the method.}

\item{\code{method_specific}}{list. List method specific data. Depending on the
method the following slot names are reserved. See section \emph{Method specifics:}
for more information.}

\item{\code{name}}{character. The name of the spatial method. (E.g. \emph{'Visium'})}

\item{\code{observational_unit}}{character. Name with which to refer to
the entity the method focuses on. (E.g. \emph{'barcode_spot'})}

\item{\code{unit}}{character. The SI to be used by default.}
}}

\section{Method specifics}{

Slot @method_specific contains a versatile list of information around
specific methods. Depending on the type several slots are reserved/should
be set:

For methods of type Visium (currently known \emph{VisiumSmall} and \emph{VisiumLarge}):

\itemize{
\item{\emph{ccd}:}{ Center to center distance as a spatial distance measure in SI units.}
\item{\emph{diameter}:}{ Diameter of each spot in micrometer.}
}

For methods that of type \emph{SlideSeq} (currently known \emph{SlideSeqV1}):

\itemize{
\item{\emph{diameter}:}{ Diameter of each bead in micrometer.}
}
}

\section{Distance measures}{


Several functions in \code{SPATA2} have arguments that take \emph{distance input}.
To specifically refer to a distance the unit must be specified. There are
three ways to create valid input for these arguments.

\strong{1. In pixel:}

There are two valid input options to specify the distance in pixel:

\itemize{
\item{numeric:}{ Single numeric values, e.g. \code{arg_input = c(2, 3.554, 69, 100.67)}. If no unit
is specified the input will be interpreted as pixels.}
\item{character:}{ Suffixed with \emph{'px'}, e.g. \code{arg_input = c('2px', '3.554px', '69px', '100.67px')}}
}

Note: The unit pixel (px) is used for distances as well as for areas. If pixel
refers to a distance the pixel side length is meant. If pixel refers to an area the
number of pixels is meant.

\strong{2. According to the Systeme international d`unites (SI):}

Specifying distances in SI units e.g. \code{arg_input = c('2mm', '4mm')} etc.
requires the input to be a character as the unit must be provided as suffix.
Between the numeric value and the unit must be no empty space! Valid suffixes
can be obtained using the function \code{validUnitsOfLengthSI()}.

\strong{3. As vectors of class \code{unit}:}

Behind the scenes \code{SPATA2} works with the \code{units} package. Input
is converted into vectors of class \code{units}. Therefore, input can be directly
provided this way: \code{arg_input = units::set_unit(x = c(2,4), value = 'mm')}
Note that \emph{pixel} is not a valid unit in the \code{units} package. If you want
to specify the input in pixel you have to use input option 1. In pixel.
}

