% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotN-S.R
\name{plotSasRidgeplot}
\alias{plotSasRidgeplot}
\alias{plotSasRidgeplotSC}
\title{Plot SAS rideplot}
\usage{
plotSasRidgeplot(
  object,
  variables,
  id = idSA(object),
  distance = distToEdge(object, id),
  binwidth = recBinwidth(object),
  n_bins_dist = NA_integer_,
  angle_span = c(0, 360),
  core = TRUE,
  smooth_span = 0.3,
  unit = getSpatialMethod(object)@unit,
  clrp = NULL,
  clrp_adjust = NULL,
  line_color = "black",
  line_size = 1.5,
  fill = NULL,
  alpha = 1,
  border_linealpha = 0.75,
  border_linecolor = "black",
  border_linesize = 1,
  border_linetype = "dashed",
  overlap = 0.5,
  strip_pos = "right",
  free_y = FALSE,
  ggpLayers = NULL,
  verbose = NULL,
  ...
)

plotSasRidgeplotSC(
  object,
  sc_input,
  id = idSA(object),
  distance = NA_integer_,
  n_bins_dist = NA_integer_,
  binwidth = getCCD(object),
  angle_span = c(0, 360),
  smooth_span = 0.3,
  unit = getSpatialMethod(object)@unit,
  round = 2,
  scale = FALSE,
  clrp = NULL,
  clrp_adjust = NULL,
  alpha = 1,
  fill = NULL,
  line_color = "black",
  line_size = 1.5,
  include_area = FALSE,
  display_border = TRUE,
  border_linealpha = 0.75,
  border_linecolor = "black",
  border_linesize = 1,
  border_linetype = "dashed",
  strip_pos = "right",
  overlap = 0.5,
  free_y = TRUE,
  x_nth = 7L,
  ncol = 1,
  nrow = NULL,
  verbose = NULL,
  ...
)
}
\arguments{
\item{object}{An object of class \code{spata2} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{variables}{Character vector. All numeric variables (meaning genes,
gene-sets and numeric features) that are supposed to be included in
the screening process.}

\item{id}{Character value specifying the ID of the spatial annotation of interest.
If there is only one spatial annotation in the object, the function
will default to using it. However, if there are multiple annotations,
this argument must be explicitly specified to identify the target annotation.}

\item{distance}{Distance value. Specifies the distance from the border of the
spatial annotation to the \emph{horizon} in the periphery up to which the screening
is conducted. (See details for more.) - See details of \code{?is_dist} for more
information about distance values. Defaults to a distance that covers the whole
tissue using \code{\link[=distToEdge]{distToEdge()}}.}

\item{binwidth}{Distance value. The width of the distance bins to which
each data point is assigned. Defaults to our platform dependent
recommendation using \code{\link[=recBinwidth]{recBinwidth()}}.}

\item{n_bins_dist}{Numeric value or vector of length 2. Specifies how many times the area is buffered with the value
denoted in \code{binwidth}. Not required if \code{distance} and \code{binwidth} is
specified. (See details for more.)}

\item{angle_span}{Numeric vector of length 2. Confines the area screened by
an angle span relative to the center of the spatial annotation.
(See details fore more.)}

\item{smooth_span}{Numeric value. Controls the degree of smoothing.
Given to argument \code{span} of \code{stats::loess()}.}

\item{unit}{Character value. Specifies the desired unit.}

\item{clrp}{Character value. Specifies the color palette to be used to represent
groups of discrete variables. Run \code{validColorPalettes()} to obtain valid
input options.}

\item{clrp_adjust}{Named character vector or NULL. If character, it adjusts the
color palette that is used to represent the groups. Names of the input vector must refer
to the group and the respective named element denotes the color with which to
represent the group.}

\item{line_color}{Character. Affects color of the main lines of the plot.}

\item{line_size}{Numeric value. Specifies the thicknes of the lines with which
the trajectory dynamics are displayed.}

\item{border_linealpha, border_linecolor, border_linesize, border_linetype}{Given
to \code{ggplot2::geom_vline()}. Adjusts appearance of the vertical line that
represents the border of the spatial annotation.}

\item{ggpLayers}{List of \code{ggproto}-objects that are added to each plot.
Skim \code{ggpLayer*()}-functions for more options.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{...}{Needed arguments that depend on the input/unit combination. If
one of both is \emph{'px'}, argument \code{object} must be specified.}

\item{sc_input}{Data.frame that contains the results from single cell deconvolution.
Must have at least three columns:
\itemize{
\item{\emph{x} : }{ numeric. Position of cell on the x axis in pixel.},
\item{\emph{y} :}{ numeric. Position of cell on the y axis in pixel.},
\item{\emph{cell_type} :}{ factor Cell type of the cell.}
}}

\item{round}{Numeric value or \code{FALSE}. If numeric, given to \code{digits}
of \code{base::round()}. Rounds transformed values before they are returned.}

\item{scale}{Logical value. If \code{TRUE}, density of cell types is scaled
to make them comparable. Else, the absolute values defined by count/\code{unit}^2
is plotted.}

\item{display_border}{Logical value. If \code{TRUE}, displays a vertical line
to highlight where the border of the spatial annotation runs.}

\item{x_nth}{Numeric value. If the number of breaks/labels on the
x-axis becomes too high \code{x_nth} can be used to reduce it. If \code{x_nth} is 1,
every label is kept. If 2, every second label is kept. If 3, every
third label is kept. And so on.}

\item{nrow, ncol}{Numeric values or NULL. Used to arrange multiple plots.}
}
\value{
A ggplot.
}
\description{
Plots gene expression changes against the distance to
to the spatial annotation using the desing of ridgeplots.
}
\details{
In conjunction with argument \code{id} which provides the
ID of the spatial annotation of interest the arguments \code{distance},
\code{binwidth}, \code{n_bins_dist}, \code{angle_span} and \code{n_bins_angle} can be used
to specify the exact area that is screened as well as the resolution of the screening.

\bold{How the algorithm works:} During the SAS-algorithm the data points are
binned according to their localisation to the spatial annotation. Every bin's mean
expression of a given gene is then aligned in an ascending order - mean expression
of bin 1, mean expression of bin 2, ... up to the last bin, the bin with the
data points that lie farest away from the spatial annotation. This allows to infer
the gene expression changes in relation to the spatial annotation and
to screen for genes whose expression changes resemble specific biological
behaviors. E.g. linear ascending: gene expression increases linearly with
the distance to the spatial annotation. E.g. immediate descending: gene expression
is high in close proximity to the spatial annotation and declines logarithmically
with the distance to the spatial annotation.

\bold{How distance binning works:}
To bin data points according to their localisation to the spatial annotation
two of the following three parameters are required (the third one is calculated):

\itemize{
\item{\code{distance}: The distance from the border of the spatial annotation to
the \emph{horizon} in the periphery up to which the screening is conducted.
}
\item{\code{binwidth}: The width of every bin.}
\item{\code{n_bins_dist}: The number of bins that are created.}
}

These three parameters stand in the following relation to each other:

\enumerate{
\item{\code{n_bins_dist} = \code{distance} / \code{binwidth}}
\item{\code{distance} = \code{n_bins_dist} * \code{binwidth}}
\item{\code{binwidth} = \code{distance} / \code{n_bins_dist}}
}

Once the parameters are set and calculated the polygon that is used to
define the borders of the spatial annotation is repeatedly expanded by the distance
indicated by parameter \code{binwidth}. The number of times this expansion is
repeated is equal to the parameter \code{n_bins_dist}. Every time the
polygon is expanded, the newly enclosed data points are binned (grouped)
and the bin is given a number that is equal to the number of the expansion.
Thus, data points that are adjacent to the spatial annotation are binned into
bin 1, data points that lie a distance of \code{binwidth} away are binned into
bin 2, etc.

Note that \code{\link[=plotSurfaceSAS]{plotSurfaceSAS()}} and/or \code{\link[=ggpLayerExpansionsSAS]{ggpLayerExpansionsSAS()}} allow to
visually inspect if your input results in the desired screening.

\bold{How the screening works:} For every numeric variable (e.g. genes) that
is included in the screening process every bin's mean expression is calculated
and then aligned in an ascending order - mean expression of distance bin 1,
mean expression of distance bin 2, ... up to the last bin, namely the bin
with the data points that lie farest away from the spatial annotation. This
allows to infer the gene expression changes in relation to the spatial annotation and
to screen for genes whose expression changes resemble specific biological
behaviors. The gene expression change is fitted to every model that is included.
(Use \code{showModels()} to visualize the predefined models of \code{SPATA2}).
A gene-model-fit is evaluated twofold:

\itemize{
\item{Mean Absolute Error}: Add description.
\item{Root Mean Squared Error}: Add description.
\item{Pearson correlation}: The inferred expression changes is correlated
with the model. (Correlation as well as the corresponding p-value depend
on the number of bins!)
}
}
\section{Distance measures}{


Several functions in \code{SPATA2} have arguments that take \emph{distance input}.
To specifically refer to a distance the unit must be specified. There are
three ways to create valid input for these arguments.

\strong{1. In pixel:}

There are two valid input options to specify the distance in pixel:

\itemize{
\item{numeric:}{ Single numeric values, e.g. \code{arg_input = c(2, 3.554, 69, 100.67)}. If no unit
is specified the input will be interpreted as pixels.}
\item{character:}{ Suffixed with \emph{'px'}, e.g. \code{arg_input = c('2px', '3.554px', '69px', '100.67px')}}
}

Note: The unit pixel (px) is used for distances as well as for areas. If pixel
refers to a distance the pixel side length is meant. If pixel refers to an area the
number of pixels is meant.

\strong{2. According to the Systeme international d`unites (SI):}

Specifying distances in SI units e.g. \code{arg_input = c('2mm', '4mm')} etc.
requires the input to be a character as the unit must be provided as suffix.
Between the numeric value and the unit must be no empty space! Valid suffixes
can be obtained using the function \code{validUnitsOfLengthSI()}.

\strong{3. As vectors of class \code{unit}:}

Behind the scenes \code{SPATA2} works with the \code{units} package. Input
is converted into vectors of class \code{units}. Therefore, input can be directly
provided this way: \code{arg_input = units::set_unit(x = c(2,4), value = 'mm')}
Note that \emph{pixel} is not a valid unit in the \code{units} package. If you want
to specify the input in pixel you have to use input option 1. In pixel.
}

