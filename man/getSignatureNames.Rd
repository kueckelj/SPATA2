% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getA-G.R, R/getH-M.R, R/getN-Z.R
\name{getGeneSets}
\alias{getGeneSets}
\alias{getMetaboliteSets}
\alias{getProteinSets}
\alias{getSignatureNames}
\title{Obtain molecular signature names}
\usage{
getGeneSets(object, ..., class = NULL)

getMetaboliteSets(object, ..., class = NULL)

getProteinSets(object, ..., class = NULL)

getSignatureNames(object, ..., class = NULL, assay_name = activeAssay(object))
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{...}{Additional selection helpers from the tidyselect package that match names according to a given pattern.}

\item{class}{Character vector of signature classes with which to subset the output.}

\item{assay_name}{Only relevant if the \code{SPATA2} object contains more than
one assay: Denotes the assay of interest and thus the
\link[=concept_molecular_modalities]{molecular modality} to use. Defaults to the active assay
as set by \code{\link[=activateAssay]{activateAssay()}}.}
}
\value{
Character vector.
}
\description{
Extracts a character vector of \link[=concept_molecular_signatures]{molecular signature}
names.
}
\details{
These functions retrieve signature \strong{names} from the provided object.

\itemize{
\item{\code{getSignatureNames()}}{: The signature names from the assay specified in \code{assay_name}.}
\item{\code{getGeneSets()}}{:  The signature names from the assay with @modality = 'gene' (\code{assay_name = 'gene'}).}
\item{\code{getMetaboliteSets()}}{: The signature names from the assay with @modality = 'metabolite' (\code{assay_name = 'metabolite'}).}
\item{\code{getProteinSets()}}{: The signature names from the assay with @modality = 'protein' (\code{assay_name = 'protein'}).}
}

If 'signature' is \code{NULL}, it returns all molecules from the respective assay in the object.
}
\examples{

library(SPATA2)

object <- loadExampleObject("UKF269T", process = TRUE)

# only one assay exists...
getAssayNames(object)

# ... which is the default assay
activeAssay(object)

## extraction
# opt 1
all_signatures <- getSignatureNames(object, assay_name = "gene")

str(all_signatures)

# whether you specify assay_name or not does not make a difference since
# the object only contains one assay
hallmark_signatures <- getSignatureNames(object, class = "HM")

str(hallmark_signatures)

# opt 2
hallmark_signatures <- getGeneSets(object, class = "HM")

str(hallmark_signatures)

# opt 3 - failes cause no 'protein' assay
protein_signatures <- getProteinSets(object, assay_name = "protein")

## usage as character vector for argument input

set.seed(123)
color_by <- sample(all_signatures, size = 9)

plotSurfaceComparison(object, color_by = color_by, outline = T, pt_clrsp = "Reds 3")

coords_df <- getCoordsDf(object)

print(coords_df)

coords_df <- joinWithVariables(object, spata_df = coords_df, variables = hallmark_signatures)

print(coords_df)

}
\seealso{
\code{\link[=vselect]{vselect()}}, \code{\link[=lselect]{lselect()}}

Documentation of slot @signatures in the \code{\link{MolecularAssay}}-class.
To extract character vectors of molecule names \code{\link[=getMolecules]{getMolecules()}} or \code{\link[=getGenes]{getGenes()}}, ...
To extract character vectors of signature names \code{\link[=getSignatureNames]{getSignatureNames()}}, \code{\link[=getGeneSets]{getGeneSets()}}, ...
To add signatures \code{\link[=addSignature]{addSignature()}} or \code{\link[=addGeneSet]{addGeneSet()}}, ...
}
