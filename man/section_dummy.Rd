% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/documentation-dummies.R
\name{section_dummy}
\alias{section_dummy}
\title{Section dummy}
\usage{
section_dummy()
}
\description{
Section dummy
}
\section{Area measures}{


The vignette on area measures in SPATA2 has been replaced.
Click \code{\link[=concept_area_measure]{here}} to read it.
}

\section{Distance measures}{


The vignette on distance measures in SPATA2 has been replaced. Click
\code{\link[=concept_distance_measure]{here}} to read it.
}

\section{Expansion of cropped image sections}{


The argument \code{expand} is a versatile way, to specify how a cropped
image section is extracted. If you want the cropped image as is, specify
\code{expand = 0}. Else, there are multiple options. In general, \code{expand} takes
three kinds of values, namely percentages, distances and distance exclamations.

\itemize{
\item{Percentage:}{ A string suffixed with \emph{\%}. E.g. \code{expand = '50\%'}
adds 50\% of the distance from the center to the border of the image annotation
to the image frame.}
\item{Distance measures:}{ In pixel or European units of length. E.g. \code{expand =  list(x = '1mm')}
expands the x-axis on both sides with 1mm. \verb{expand = list(x = c('0.5mm', 1.5mm')}
expands the x-axis on the left side with 0.5mm and on the right side with 1.5mm.}
\item{Exclam distance measures:}{ Distance measure with an exclamation mark
suffix. E.g. \code{expand = '1mm!'} centers the image and forces an axis length of
1 millimeter. (Example 5) }
}

Depending on how the values are specified different parts of the image can be
expanded.

Single values, like \code{expand = 50}, are recycled: Every end of each image axis
is expanded by 50 pixel. (Example 2)

Vectors of length two, like \code{expand = c('1mm', '2mm')}, are recycled: The beginning
of each axis is expanded by 1 millimeter. The end of each axis is expanded by
2mm. (Example 3)

Named lists can be more precise. \code{expand = list(x = c('1mm', '0.5mm'), y = c('0.25mm', '1mm'))}.
Applies the vectors to expand the corresponding axis. (Example 4)

Using exclam input the side of the axis must not be specified as the
axis is fixed as a whole. E.g \code{expand = list(x = '1mm!', y = '2mm!')} results
in the same output as \verb{expand = list(x = c('1mm!', '1mm!'), y = c('2mm!', '2mm!')}.
}

\section{Image visualization with ggplot2}{


When comparing the output of \code{ggplot() + ggpLayerImage()} with other image plotting functions,
you may notice that the image appears horizontally flipped when plotted using \code{ggpLayerImage()}.
This behavior is due to the use of a Cartesian coordinate system in \code{SPATA2}, where a pixel
with coordinates c(width = 1, height = 1) is plotted on the left side at the bottom.
In contrast, functions like \code{EBImage::display()} or \code{graphics::plot()} use an \emph{image space} coordinate system,
where pixel heights start from the top. Consequently, in \emph{image space}, pixel c(width = 1, height = 1)
is displayed on the top resulting in mirror inverted visualization of the image.

We chose to use a Cartesian coordinate system in \code{SPATA2} because we believe it provides a more intuitive
framework for the spatial alignment of tissue, spatial annotations, spatial trajectories,
barcoded sots, single cells, etc. where coordinates in the corresponding data.frames are provided
in form of \emph{x}- and \emph{y}-variables. See \code{\link[=getCoordsDf]{getCoordsDf()}}, \code{\link[=getImgAnnOutlineDf]{getImgAnnOutlineDf()}}, \code{\link[=getTissueOutlineDf]{getTissueOutlineDf()}} etc.

If you prefer to view your image in the regular orientation, you can use the \code{flipAll()} function on your object,
specifying \code{axis = "horizontal"}, to reverse this effect.
}

\section{Selection of spatial annotations}{


Selection of spatial annotations via the arguments \code{ids}, \code{class}, \code{tags} and
\code{test} works in three steps:

First, if \code{ids} is a character it prefilters the annotations by ID and only
the specified ones are submitted to the next steps. If it is \code{NULL}, all
annotations are submitted to the next steps.

Secondd, if \code{class} is a character it filters the annotations remaining
after the first step by their class. If \code{NULL}, the step is skipped.

Third, if \code{tags} is a character it is used in combination with \code{test} to select
from the spatial annotations that remain after the second step based on the meta data
they are tagged with. There are multiple options:
\enumerate{
\item Argument \code{test} set to \emph{'any'} or \emph{1}: To be included, an image annotation
must be tagged with at least one of the input tags.
\item Argument \code{test} set to \emph{'all'} or \emph{2}: To be included, an image annotation
must be tagged with all of the input tags. Can contain tags that are not specified.
\item Argument \code{test} set to \emph{'identical'} or \emph{3}: To be included, an image annotation
must be tagged with all of the input tags. Can not be tagged with anything else.
\item Argument \code{test} set to \emph{not_identical} or \emph{4}: To be included, an image
annotation must \strong{not} be tagged with the combination of input tags.
\item Argument \code{test} set to \emph{'none'} or \emph{5}: To be included, an image annotation
must \strong{not} contain any of the input tags.
}

If \code{tags} is \code{NULL}, the step is skipped. Therefore, if \code{ids}, \code{class} and \code{tags}
are all NULL, which is the default, all annotations are selected as all subsetting
steps are skipped. Eventually, the remaining spatial annotations are submitted to
whatever the respective function does.
}

\keyword{internal}
