% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g.R
\name{ggpLayerImage}
\alias{ggpLayerImage}
\alias{ggpLayerImage,SPATA2-method}
\alias{ggpLayerImage,SpatialData-method}
\alias{ggpLayerImage,HistoImage-method}
\alias{ggpLayerImage,SpatialAnnotation-method}
\alias{ggpLayerImage,Image-method}
\alias{ggpLayerImage,data.frame-method}
\title{Add histology image}
\usage{
ggpLayerImage(object, ...)

\S4method{ggpLayerImage}{SPATA2}(
  object,
  img_name = activeImage(object),
  transform = TRUE,
  img_alpha = 1,
  scale_fct = 1,
  ...
)

\S4method{ggpLayerImage}{SpatialData}(
  object,
  img_name = activeImage(object),
  transform = TRUE,
  img_alpha = 1,
  scale_fct = 1,
  ...
)

\S4method{ggpLayerImage}{HistoImage}(object, transform = TRUE, scale_fct = 1, img_alpha = 1, ...)

\S4method{ggpLayerImage}{SpatialAnnotation}(object, img_alpha = 1, rescale_axes = TRUE, scale_fct = 1, ...)

\S4method{ggpLayerImage}{Image}(object, scale_fct = 1, img_alpha = 1, ...)

\S4method{ggpLayerImage}{data.frame}(object, fill_by, img_alpha = 1)
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{...}{Used to absorb deprecated arguments or functions.}

\item{img_name}{Character value. The name of the image of interest.
If \code{NULL}, the \link[=concept_active]{active} image is chosen by default. Either way, must
be one of \code{\link[=getImageNames]{getImageNames()}}.}

\item{transform}{Logical value. Ignored if no images exist in the object. If \code{TRUE},
spatial transformation instructions saved during image alignment of
the image \code{img_name} are applied. Only relevant if there are any images registered
in the \code{SPATA2} object.}
}
\value{
\code{ggpLayer*()}-functions return lists of \code{ggproto} objects
that can be added to ggplots via the \code{+} operator. In most of the cases
they are supposed to be added to plots created with the \code{plotSurface*()}
family.
}
\description{
Creates ggplot2 layer with the histology image
as a raster.
}
\details{
The image is plotted via \code{ggplot2::geom_raster()} by mapping the pixel position
to the x-axis and the y-axis. See section Image visualization
with \code{ggplot2} for more details.
}
\section{Image visualization with ggplot2}{


When comparing the output of \code{ggplot() + ggpLayerImage()} with other image plotting functions,
you may notice that the image appears horizontally flipped when plotted using \code{ggpLayerImage()}.
This behavior is due to the use of a Cartesian coordinate system in \code{SPATA2}, where a pixel
with coordinates c(width = 1, height = 1) is plotted on the left side at the bottom.
In contrast, functions like \code{EBImage::display()} or \code{graphics::plot()} use an \emph{image space} coordinate system,
where pixel heights start from the top. Consequently, in \emph{image space}, pixel c(width = 1, height = 1)
is displayed on the top resulting in mirror inverted visualization of the image.

We chose to use a Cartesian coordinate system in \code{SPATA2} because we believe it provides a more intuitive
framework for the spatial alignment of tissue, spatial annotations, spatial trajectories,
barcoded sots, single cells, etc. where coordinates in the corresponding data.frames are provided
in form of \emph{x}- and \emph{y}-variables. See \code{\link[=getCoordsDf]{getCoordsDf()}}, \code{\link[=getImgAnnOutlineDf]{getImgAnnOutlineDf()}}, \code{\link[=getTissueOutlineDf]{getTissueOutlineDf()}} etc.

If you prefer to view your image in the regular orientation, you can use the \code{flipAll()} function on your object,
specifying \code{axis = "horizontal"}, to reverse this effect.
}

\examples{

library(SPATA2)
library(tidyverse)

data("example_data")

object <- example_data$object_UKF275T_diet

ggplot() +
 ggpLayerImage(object)


}
