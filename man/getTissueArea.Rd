% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getN-Z.R
\name{getTissueArea}
\alias{getTissueArea}
\title{Obtain tissue area size}
\usage{
getTissueArea(object, unit, method = "obs", img_name = activeImage(object))
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{unit}{Character value. Output unit. Must be one of \code{validUnitsOfArea()}.}

\item{method}{Character value. Defines the origin based on which the outline
is computed. Either \emph{'image'} or \emph{'obs'}.}

\item{img_name}{Character value. The name of the image of interest.
If \code{NULL}, the \link[=concept_active]{active} image is chosen by default. Either way, must
be one of \code{\link[=getImageNames]{getImageNames()}}.}
}
\value{
A vector of \link[=concept_area_measure]{area measures}. Length is equal to the number
of tissue sections.
}
\description{
Computes and extracts the size of the area covered by the tissue.
}
\examples{

library(SPATA2)

## Example 1 - image based
object <- example_data$object_UKF313T_diet

object <- identifyPixelContent(object)
object <- identifyTissueOutline(object, method = "image")

plotImage(object, outline = TRUE) +
 ggpLayerAxesSI(object, unit = "mm")

getTissueArea(object, unit = "mm")

## Example 2 - coordinates based
object <- loadExampleObject("UKF313T")

object <- identifyTissueOutline(object, method = "obs")

plotSurface(object, color_by = "tissue_section") +
 ggpLayerTissueOutline(object)

area_out <- getTissueArea(object)

print(area_out)

sum(area_out)

}
\seealso{
\code{\link[=getTissueSections]{getTissueSections()}}, \code{\link[=identifyTissueOutline]{identifyTissueOutline()}}
}
