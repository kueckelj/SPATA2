% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runA-Z.R
\name{runImagePipeline}
\alias{runImagePipeline}
\title{Run image processing pipeline}
\usage{
runImagePipeline(
  object,
  img_name = NULL,
  method = c("outline", "dbscan"),
  test = "all",
  verbose = TRUE,
  ...
)
}
\arguments{
\item{object}{An object of class \code{spata2} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{img_name}{Character value. The name of the image whose tissue outline
is used if \code{method} contains \emph{'outline'}.}

\item{method}{Character vector. The method(s) to use. A combination of \emph{'outline'}
and/or \emph{'dbscan'}. See details for more.}

\item{test}{Character value. Only required if \code{method = c('dbscan', 'outline')}. If
\emph{'any'}, spots are labeled as outliers if at least one method identifies them
as outliers. If \emph{'all'}, spots are labeled as outliers if both methods identify
them as outliers.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{...}{Arguments passed to \code{\link[=identifyPixelContent]{identifyPixelContent()}}.}
}
\value{
The input \code{spata2} object containing the added or computed
results.
}
\description{
A wrapper around the image processing functions:

\itemize{
\item{\code{\link[=identifyPixelContent]{identifyPixelContent()}}}{}
\item{\code{\link[=identifyTissueOutline]{identifyTissueOutline()}}}{}
\item{\code{\link[=identifyBackgroundColor]{identifyBackgroundColor()}}}
\item{\code{\link[=identifySpatialOutliers]{identifySpatialOutliers()}}}
}
}
