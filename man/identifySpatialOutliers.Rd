% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/devImaging.R
\name{identifySpatialOutliers}
\alias{identifySpatialOutliers}
\alias{identifySpatialOutliers,spata2-method}
\alias{identifySpatialOutliers,HistoImaging-method}
\title{Identify spatial outliers}
\usage{
identifySpatialOutliers(object, ...)

\S4method{identifySpatialOutliers}{spata2}(
  object,
  method = c("outline", "dbscan"),
  img_name = refImage(),
  buffer = NULL,
  dbscan_eps = NULL,
  dbscan_minPts = 3,
  test = "any",
  verbose = NULL
)

\S4method{identifySpatialOutliers}{HistoImaging}(
  object,
  method = c("outline", "dbscan"),
  img_name = refImage(object),
  buffer = NULL,
  dbscan_eps = NULL,
  dbscan_minPts = 3,
  test = "any",
  verbose = TRUE
)
}
\arguments{
\item{object}{An object of class \code{spata2} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{...}{Used to absorb deprecated arguments or functions.}

\item{method}{Character vector. The method(s) to use. A combination of \emph{'outline'}
and/or \emph{'dbscan'}. See details for more.}

\item{img_name}{Character value. The name of the image whose tissue outline
is used if \code{method} contains \emph{'outline'}.}

\item{buffer}{Numeric value. Expands the tissue outline to include observations
that lie on the edge of the outline and are mistakenly removed.}

\item{dbscan_eps, dbscan_minPts}{Given to the corresponding arguments of
\code{\link[dbscan:dbscan]{dbscan::dbscan()}} if \code{method} contains \emph{'dbscan'}.}

\item{test}{Character value. Only required if \code{method = c('dbscan', 'outline')}. If
\emph{'any'}, spots are labeled as outliers if at least one method identifies them
as outliers. If \emph{'all'}, spots are labeled as outliers if both methods identify
them as outliers.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}
}
\value{
The input \code{spata2} object containing the added or computed
results.
}
\description{
Assigns observations like cells or spots to the tissue sections or
fragments they are located on or labels them as artefacts/spatial outliers.
}
\details{
This function identifies spatial outliers using a combination of two methods: \emph{outline} and \emph{dbscan}.

Method \emph{outline}:
The \emph{outline} method involves identifying the tissue outline using the \code{identifyTissueOutline()} function,
which results in a polygon with multiple vertices. For each observation, the function checks which polygon it falls within
and assigns it to the corresponding group. If an observation does not fall within any of the tissue polygons,
it is considered a spatial outlier.

Method \emph{dbscan}:
The \emph{dbscan} method applies the DBSCAN algorithm to the observations. Please refer to the documentation
of \code{dbscan::dbscan()} for a more detailed explanation. The \code{dbscan_eps} and \code{dbscan_minPts} arguments are passed
directly to the corresponding arguments of the DBSCAN function. Note that if the input object does not contain
a center-to-center distance, \code{dbscan_eps} must not be set to \code{NULL}. Observations that are not assigned to any cluster,
indicated by being assigned to cluster 0, are considered spatial outliers.

If \code{method = c('outlier', 'dbscan')}, both algorithms are applied. Whether an observation is considered a spatial outlier
depends on the \code{test} argument:

\itemize{
\item{\code{test = 'any'}:} The observation is considered a spatial outlier if either of the two tests classifies it as an outlier.
\item{\code{test = 'all'}:} The observation is considered a spatial outlier only if both tests classify it as an outlier.
}
}
\seealso{
\code{\link[=identifyTissueOutline]{identifyTissueOutline()}}
}
