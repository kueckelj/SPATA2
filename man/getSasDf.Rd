% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getN-Z.R
\name{getSasDf}
\alias{getSasDf}
\title{Obtain spatial annotation screening data.frame}
\usage{
getSasDf(
  object,
  ids,
  distance = "dte",
  resolution = recSasRes(object),
  core = FALSE,
  angle_span = c(0, 360),
  n_bins_angle = 1,
  variables = NULL,
  unit = getDefaultUnit(object),
  ro = c(0, 1),
  format = "wide",
  bcs_exclude = NULL,
  outlier_rm = FALSE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{distance}{\code{\link[=concept_distance_measure]{Distance value}}. Specifies
the distance from the border of the spatial annotation to the \emph{horizon} in
the periphery up to which the screening is conducted. (See details for more.)
Defaults to a distance that covers the whole tissue section using \code{\link[=distToEdge]{distToEdge()}}.}

\item{angle_span}{Numeric vector of length 2. Confines the area screened by
an angle span relative to the center of the spatial annotation.
(See details fore more.)}

\item{variables}{Character vector. All numeric variables (meaning genes,
gene-sets and numeric features) that are supposed to be included in
the screening process.}

\item{unit}{Character value. Specifies the desired unit in
which \link[=concept_distance_measure]{distance measures}
or  \link[=concept_area_measure]{area measures} are provided.
Run \code{\link[=validUnitsOfLength]{validUnitsOfLength()}} or \link{`validUnitsOfArea()'} for valid
input options.}

\item{bcs_exclude}{Character value containing name(s) of data points to be excluded from the analysis.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}

\item{...}{Used to absorb deprecated arguments or functions.}
}
\value{
Data.frame.
}
\description{
Extracts a data.frame of inferred gradients of numeric
variables as a function of distance to spatial annotations.
}
\examples{

library(SPATA2)
library(SPATAData)

data("image_annotations")

necrotic_spat_ann <- image_annotations[["313_T"]][["necrotic_center"]]

object <- downloadSpataObject(sample_name = "313_T")

object <- setSpatialAnnotation(object = object, spat_ann = necrotic_spat_ann)

plotSurfaceIAS(
 object = object,
 id = "necrotic_center",
 distance = 200
 )

plotSurfaceIAS(
 object = object,
 id = "necrotic_center",
 distance = 200,
 resolution = getCCD(object)*4, # lower resolution by increasing resolution for visualization
 n_bins_angle = 12,
 display_angle = TRUE
 )

getSasDf(
  object = object,
  id = "necrotic_center",
  distance = 200,
  variables = "VEGFA"
  )

getSasDf(
  object = object,
   id = "necrotic_center",
   distance = 200,
   variables = "VEGFA"
   )

getSasDf(
  object = object,
   id = "necrotic_center",
   distance = 200,
   variables = "VEGFA",
   n_bins_angle = 12
   )

}
