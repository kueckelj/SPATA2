% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/m.R
\name{make_binary_image}
\alias{make_binary_image}
\title{Convert Image to Binary with Flexible Thresholding}
\usage{
make_binary_image(img, sigma = 0, threshold_method = "otsu")
}
\arguments{
\item{img}{An image object. This can be a color or grayscale image loaded
into R using the \code{EBImage} package.}

\item{sigma}{Numeric value specifying the standard deviation for the Gaussian
blur applied to the grayscale image. Higher values result in more smoothing. \code{0} skips
smoothing. Default is \code{0}.}

\item{threshold_method}{Character string specifying the thresholding method to use.
Options are \code{"otsu"} for Otsu's method or \code{"mean"} for mean thresholding. Default is \code{"otsu"}.}
}
\value{
A binary image (logical matrix) where pixels are either \code{TRUE} (foreground) or \code{FALSE} (background), based on the chosen thresholding method applied to the (optionally smoothed) grayscale version of the input image.
}
\description{
This function converts a color or grayscale image to a binary image using
Gaussian smoothing and a user-specified thresholding method, such as Otsu's method.
}
\details{
The function first converts the input image to grayscale using the \code{EBImage::channel()} function.
If \code{apply_smoothing} is \code{TRUE}, it applies a Gaussian blur to the grayscale image to reduce noise
and smooth the image using \code{EBImage::gblur()}. The selected thresholding method
(Otsu's method or mean thresholding) is then applied to the processed image to
calculate a threshold, which is used to convert the image to a binary format where
the foreground is marked as \code{TRUE} and the background as \code{FALSE}.

The function includes basic error checking to ensure that the input is a valid image object.
}
