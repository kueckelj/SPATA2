% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initiateSpataObject.R
\name{initiateSpataObjectVisiumHD}
\alias{initiateSpataObjectVisiumHD}
\title{Initiate an object of class \code{SPATA2} from platform VisiumHD}
\usage{
initiateSpataObjectVisiumHD(
  sample_name,
  directory_visium,
  square_res = "16um",
  mtr = "filtered",
  genes = NULL,
  workers = 1,
  batch_size = 1000,
  img_active = "lowres",
  img_ref = "hires",
  resize_images = NULL,
  unload = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{sample_name}{Character. The name of the sample.}

\item{directory_visium}{Character. The directory containing the Visium output files.}

\item{square_res}{Character. The square resolution from which to load the data. While \emph{c('16um', '8um', '2um')}
are the default resolutions, \code{\link[=reduceResolutionVisiumHD]{reduceResolutionVisiumHD()}} is applied if the input
deviates from these three input options. See section \emph{Visium HD Resolution} for more information.}

\item{mtr}{Character. Specifies which matrix to use, either "filtered" or "raw". Default is "filtered".}

\item{genes}{Character or \code{NULL}. If character, specifies beforehand which genes to keep in the count
matrix. If \code{NULL}, the default, all genes are kept.}

\item{workers}{Integer specifying the number of parallel workers to use for processing. Default is \code{1},
which defaults to no parallel workers. If \code{2} or more, the \code{furrr} package
is required.}

\item{batch_size}{Integer specifying the number of spatial spots to process in each batch. Default is \code{1000}.}

\item{img_active}{Character. The active image to use, either "lowres" or "hires". Default is "lowres".}

\item{img_ref}{Character. The reference image to use, either "lowres" or "hires". Default is "hires".}

\item{resize_images}{A named list of numeric values between 0-1 used to resize
the respective image as indicated by the slot name. E.g \code{resize_images = list(hires = 0.5)}
resizes the hires image to 50\% of its original scale.}

\item{unload}{Logical value. If \code{TRUE}, every image except for the active image
is \link[=unloadImages]{unloaded.}}

\item{verbose}{Logical. If \code{TRUE}, informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}
}
\value{
A \code{SPATA2} object the VisiumHD platform.
}
\description{
This function initiates a \code{\link{SPATA2}} object with data generated
using the 10x Genomics \code{\link{VisiumHD}} platform.
}
\details{
The function requires a directory containing the output files from a 10x Genomics VisiumHD experiment
specified with the argument \code{directory_visium}. This directory (below denoted as \strong{~})  must include the following
sub-directories:

\itemize{
\item \emph{~/binned_outputs}: A folder with the following subdirectories.
\itemize{
\item \emph{~/binned_outputs/square_002um}: The folder containing the data for \code{square_res = '2um'}.
\item \emph{~/binned_outputs/square_008um}: The folder containing the data for \code{square_res = '8um'}.
\item \emph{~/binned_outputs/square_016um}: The folder containing the data for \code{square_res = '16um'}.
}
}

Depending on your input for \code{square_res} only the corresponding subfolder is required. This subfolder should
contain the following files and sub-directories:

\itemize{
\item \emph{~/binned_outputs/<square_res>/filtered_feature_bc_matrix.h5} or \emph{~/raw_feature_bc_matrix.h5}: The HDF5 file containing the filtered or raw feature-barcode matrix, respectively.
\item \emph{~/binned_outputs/<square_res>/spatial/tissue_lowres_image.png} or \emph{~/spatial/tissue_hires_image.png}: The low-resolution or high-resolution tissue image.
\item \emph{~/binned_outputs/<square_res>/spatial/scalefactors_json.json}: A JSON file containing the scale factors for the images.
\item \emph{~/binned_outputs/<square_res>/spatial/tissue_position.parquet} A .parguet file containing the tissue positions and spatial coordinates.
}

The function will check for these files and process them to create a \code{SPATA2} object. It reads the count matrix, loads the spatial data,
and initializes the \code{SPATA2} object with the necessary metadata and settings.
}
\note{
It is crucial to install the package \code{arrow} in a way that \code{\link[arrow:read_parquet]{arrow::read_parquet()}} works. There
are several ways. Installing the package with \code{install.packages('arrow', repos = 'https://apache.r-universe.dev')}
worked reliably for us.
}
\section{Visium HD Resolution}{

The input for \code{square_res} can deviate from the standard resolution options as long as it is an
even number divisible by one of the standard resolutions. In such cases, data from the next possible
lower resolution is read, and \code{\link[=reduceResolutionVisiumHD]{reduceResolutionVisiumHD()}} is applied to aggregate the data.
For example, if \code{square_res = '6um'}, data is retrieved from \emph{~/binned_outputs/square_002um}
and then aggregated accordingly. The same applies if \verb{square_res = 10um}. If \verb{square_res = 24um},
data is read from \emph{~/binned_outputs/square_008um}; if \verb{square_res = 32um}, data is read from
\emph{~/binned_outputs/square_016um}, and so on. If the required folder is missing, data from the
next higher resolution folder is used if possible, else an error is thrown.

Note, that aggregating counts by resolution can take a considerable amount of time. Consider prefiltering
the raw counts using \code{genes} and/or increasing the number of cores to use with \code{workers}.
}

\section{Row and column indices}{

Visium spot coordinates come with column and row indices. The functions \code{initiateSpataObjectVisium()}
and \code{initiateSpataObjectVisiumHD()} ensure that \emph{col} aligns with the direction of the x-coordinates and
that \emph{row} aligns with the direction of the y-coordinates. If they do not, they are adjusted accordingly.
Hence, these variables should not be used as keys for data merging.
}

