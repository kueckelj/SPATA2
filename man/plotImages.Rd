% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotH-M.R
\name{plotImages}
\alias{plotImages}
\alias{plotImages,SPATA2-method}
\alias{plotImages,SpatialData-method}
\title{Plot histology images (ggplot2)}
\usage{
plotImages(object, ...)

\S4method{plotImages}{SPATA2}(
  object,
  img_names = getImageNames(object),
  by_section = TRUE,
  outline = FALSE,
  outline_ref = FALSE,
  fragments = TRUE,
  line_alpha = line_alpha_ref * 0.75,
  line_alpha_ref = 1,
  line_color = "black",
  line_color_ref = "red",
  line_size = 0.5,
  line_size_ref = line_size * 1.5,
  transform = TRUE,
  img_alpha = 1,
  against_ref = FALSE,
  alignment_eval = FALSE,
  ncol = NULL,
  nrow = NULL,
  verbose = TRUE
)

\S4method{plotImages}{SpatialData}(
  object,
  img_names = NULL,
  ncol = NULL,
  nrow = NULL,
  image = TRUE,
  outline = FALSE,
  outline_ref = FALSE,
  by_section = TRUE,
  fragments = TRUE,
  line_alpha = line_alpha_ref * 0.75,
  line_alpha_ref = 1,
  line_color = "black",
  line_color_ref = "red",
  line_size = 0.5,
  line_size_ref = line_size * 1.5,
  transform = TRUE,
  img_alpha = 1,
  against_ref = FALSE,
  alignment_eval = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{object}{An object of class \code{\link{SPATA2}} or, in case of S4 generics,
objects of classes for which a method has been defined.}

\item{...}{Additionel arguments given to \code{plotImage()}.}

\item{img_names}{Character vector or \code{NULL}. If character, specifies the images
by name. If \code{NULL}, all images are plotted.}

\item{line_alpha}{Numeric. Affects alpha of main lines of the plot.}

\item{line_color}{Character. Affects color of the main lines of the plot.}

\item{line_size}{Numeric. Affects size of the main lines of the plot.}

\item{nrow, ncol}{Numeric values or NULL. Used to arrange multiple plots.}

\item{verbose}{Logical. If set to TRUE informative messages regarding
the computational progress will be printed.

(Warning messages will always be printed.)}
}
\value{
A ggplot assembled with via \code{patchwork::wrap_plots()}.
}
\description{
Reads in and plots all images known to the \code{SPATA2} object.
}
\section{Distance measures}{


The vignette on distance measures in SPATA2 has been replaced. Click
\code{\link[=concept_distance_measure]{here}} to read it.
}

\section{Image visualization with ggplot2}{


When comparing the output of \code{ggplot() + ggpLayerImage()} with other image plotting functions,
you may notice that the image appears horizontally flipped when plotted using \code{ggpLayerImage()}.
This behavior is due to the use of a Cartesian coordinate system in \code{SPATA2}, where a pixel
with coordinates c(width = 1, height = 1) is plotted on the left side at the bottom.
In contrast, functions like \code{EBImage::display()} or \code{graphics::plot()} use an \emph{image space} coordinate system,
where pixel heights start from the top. Consequently, in \emph{image space}, pixel c(width = 1, height = 1)
is displayed on the top resulting in mirror inverted visualization of the image.

We chose to use a Cartesian coordinate system in \code{SPATA2} because we believe it provides a more intuitive
framework for the spatial alignment of tissue, spatial annotations, spatial trajectories,
barcoded sots, single cells, etc. where coordinates in the corresponding data.frames are provided
in form of \emph{x}- and \emph{y}-variables. See \code{\link[=getCoordsDf]{getCoordsDf()}}, \code{\link[=getImgAnnOutlineDf]{getImgAnnOutlineDf()}}, \code{\link[=getTissueOutlineDf]{getTissueOutlineDf()}} etc.

If you prefer to view your image in the regular orientation, you can use the \code{flipAll()} function on your object,
specifying \code{axis = "horizontal"}, to reverse this effect.
}

\seealso{
\code{\link[=getImageDirectories]{getImageDirectories()}}
}
