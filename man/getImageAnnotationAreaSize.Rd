% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getH-M.R
\name{getImageAnnotationAreaSize}
\alias{getImageAnnotationAreaSize}
\title{Obtain area of image annotation}
\usage{
getImageAnnotationAreaSize(
  object,
  unit,
  ids = NULL,
  tags = NULL,
  test = "any",
  as_numeric = TRUE,
  ...
)
}
\arguments{
\item{object}{An object of class \code{SPATA2}.}

\item{unit}{Character value. Specifies the desired unit.}

\item{ids}{Character vector, numeric vector, or NULL. If character, the IDs of the image annotations of
interest. If numeric, the image annotations are picked by number. If NULL, all image annotations are included.}

\item{tags}{Character vector or NULL. If character, the image annotation tags of interest.}

\item{test}{Character value. Specifies how the input of \code{tags} is used to
subset the image annotations. One of \emph{'any'}, \emph{'all'} or \emph{'identical'}.
See details for more information.}

\item{...}{Used to absorb deprecated Arguments or functions.}
}
\value{
Numeric vector of the same length as \code{ids}. Named accordingly.
Contains the area of the image annotations in the unit that is specified in \code{unit}.
The unit is attached to the output as an attribute named \emph{unit}. E.g. if
\verb{unit = *mm2*} the output value has the unit \emph{mm^2}.
}
\description{
Computes the area of an image annotation in units of area.
}
\details{
First, the area of each pixel is calculated by using the center
to center distance of the underlying method as ground truth to scale
the current number of pixels in the image.

Second, the number of pixels that fall in the area of the image annotation
is computed with \code{sp::point.in.polygon()} using the area data.frame of
the image annotation as the polygon.

Third, the number of pixels that fall in the area is multiplied with
the area per pixel.
}
\seealso{
\code{getImageAnnotationAreaDf()}, \code{getCCD()}, \code{as_unit()}
}
